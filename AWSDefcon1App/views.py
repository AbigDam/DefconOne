from django.contrib.auth import authenticate, login, logout
from django.db import IntegrityError
from django.http import HttpResponse, HttpResponseRedirect,HttpResponseBadRequest
from django.urls import reverse
from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from django.shortcuts import get_object_or_404
from .models import User,Games,Nations,Map,Square,War,MakeAlliance,Announcements,Message,DM,Achievements
from django.contrib.admin.views.decorators import staff_member_required
import matplotlib.pyplot as plt
import random
from django.utils import timezone
from datetime import timedelta
from django.db.models import Q
import datetime
from datetime import datetime
from django.db.models import Max
import math
from channels.layers import get_channel_layer
from asgiref.sync import async_to_sync
import json


colors = {
    'United Kingdom': '#ff4879',
    'Soviet Union': '#a3101f',
    'Italy': '#56a552',
    'Second Brazilian Republic': '#62bd52',
    'Sultanate of Aussa': '#4d0019',
    'Turkey': '#c7e9b4',
    'Norway': '#623c3c',
    'Iraq': '#e79481',
    'Saudi Arabia': '#def7c6',
    'United States': '#57a1ff',
    'Albania': '#c23b85',
    'Dominion of Canada': '#9b3e33',
    'France': '#4892FF',
    'Kingdom of Hungary': '#ffa47f',
    'China': '#dfe5a0',
    'Chile': '#ca828b',
    'Peru': '#fff6ff',
    'British Raj': '#c80a0a',
    'Spain': '#ffff79',
    'Kingdom of Greece': '#79ebff',
    'Lithuania': '#ffff9b',
    'Mexico': '#86c66c',
    'Ethiopia': '#c3a5f5',
    'Romania': '#ffff77',
    'Portugal': '#33965b',
    'Bhutan': '#ac7a58',
    'Poland': '#ff7789',
    'Australia': '#49bb7e',
    'Czechoslovakia': '#46d8cb',
    'Sweden': '#2eadff',
    'Venezuela': '#acbe99',
    'Yugoslavia': '#5e5ea4',
    'Netherlands': '#ffb35f',
    'German Reich': '#525252',
    'Bulgaria': '#329a00',
    'Belgium': '#fbdf0a',
    'South Africa': '#be96fa',
    'Philippines': '#b496e6',
    'Uruguay': '#abbe99',
    'Argentina': '#bdccff',
    'Republic of Paraguay': '#4696fa',
    'Mengkukuo': '#a5e684',
    'Japan': '#fee8c8',
    'Ireland': '#68cf75',
    'Costa Rica': '#927a30',
    'Cuba': '#8b40a6',
    'Colombia': '#fff375',
    'Sinkiang': '#3fb08d',
    'Yunnan': '#698948',
    'Dominican Republic': '#bea0f0',
    'Mongolia': '#5a771d',
    'Switzerland': '#c15151',
    'Ecuador': '#ffbe7f',
    'El Salvador': '#fabe78',
    'Iran': '#5c927e',
    'Xibei San Ma': '#685b84',
    'Denmark': '#c79679',
    'Guangxi Clique': '#8a9a74',
    'Guatemala': '#473070',
    'Haiti': '#ab6f72',
    'Finland': '#ffffff',
    'Estonia': '#63cdfe',
    'Manchukuo': '#ff7847',
    'Afghanistan': '#53d0d9',
    'Honduras': '#809141',
    'Iceland': '#c79779',
    'Siam': '#d7f0c8',
    'Dutch East Indies': '#ffb25f',
    'Latvia': '#7b7cb8',
    'Bolivian Republic': '#ffeab1',
    'Liberia': '#cdafff',
    'Austria': '#fffeff',
    'Luxembourg': '#8adba2',
    'Tibet': '#456722',
    'Nepal': '#c8aafa',
    'Nicaragua': '#92b2bf',
    'British Malaya': '#ff4979',
    'New Zealand': '#b99beb',
    'Oman': '#905c5c',
    'Shanxi': '#651e29',
    'Panama': '#9e8add',
    'Communist China': '#b2233b',
    'Tannu Tuva': '#c6a9f8',
    'Yemen': '#905d5d',
}
def ads(request):
      return render(request, "AWSDefcon1App/ads.html")
def articles(request):
      return render(request, "AWSDefcon1App/articles.html")

def error(request, exception):
      return render(request, "AWSDefcon1App/error.html")
  
def error500(request):
    return render(request, "AWSDefcon1App/error.html")
    
@login_required
def passer(request, game_id):
    user = request.user
    nation = Nations.objects.get(game = game_id, user = user)
    nation.attacks = 0
    nation.save()
    all_nations = Nations.objects.filter(game = game_id, player_number__lt = 8).exclude(user = User.objects.get(username = "loser")).exclude(user = User.objects.get(username = "empty")).exclude(user = User.objects.get(username = "closed"))
    i = 0
    j = 0
    for nation in all_nations:
      i += 1
      if nation.attacks == 0:
        j += 1
    j += 2
    if i < j:
      print('new')
      nations = Nations.objects.filter(game = game_id)
      for nation in nations:
          states = nation.states
          mult = 1
          if states <= 20:
              mult = 2
          elif states < 50:
              mult = 1.7
          elif states < 150:
              mult = 1.5
          elif states < 200:
              mult = 1.4
          elif states < 250:
              mult = 1

          nation.divisions = nation.divisions + states * mult
          nation.planes = nation.planes + states * 10
          nation.boats = nation.boats + states / 2
          nation.points += 1
          if nation.nuke_time <= 0:
              nation.nukes += 1
          else:
              nation.nuke_time -= 1
          nation.attacks = 5
          nation.requests = 10
          nation.save()
    nations = Nations.objects.filter(game=game_id)
    user = request.user.username
    # Get the player's nation
    playernation = Nations.objects.filter(game=game_id, user=request.user).first()
    if playernation and playernation.alliance_name:
        knownnations = Nations.objects.filter(game=game_id, alliance_name=playernation.alliance_name)
    else:
        knownnations = [playernation] if playernation else []
    return render(request, "AWSDefcon1App/game.html", {"nations": nations, "user": user, "game_id": game_id, "knownnations":knownnations})                 

@login_required
def message(request, game_id, recipient_id):
    recipient = get_object_or_404(User, id=recipient_id)
    game = get_object_or_404(Games, id=game_id)
    if request.method == 'POST':
        print("post")
        content = request.POST.get('content')
        Message.objects.create(sender=request.user, receiver=recipient, text=content, game=game)
        print(content)

        # Notify recipient via WebSocket
    
    messages = Message.objects.filter(
        game=game,
        receiver__in=[request.user, recipient],
        sender__in=[request.user, recipient]
    ).order_by('id')
    return render(request, 'AWSDefcon1App/message.html', {'recipient': recipient, 'messages': messages, 'game_id': game_id})


@login_required
def SendDM(request, recipient_id):
    recipient = get_object_or_404(User, id=recipient_id)
    if request.method == 'POST':
        content = request.POST.get('content')
        DM.objects.create(sender=request.user, receiver=recipient, text=content)
    
    messages = DM.objects.filter(
        receiver__in=[request.user, recipient],
        sender__in=[request.user, recipient]
    ).order_by('id')
    return render(request, 'AWSDefcon1App/message.html', {'recipient': recipient, 'messages': messages})


@login_required
def user_list(request, game_id):
    if game_id == 0:
        users = User.objects.exclude(id=request.user.id).distinct()
        return render(request, 'AWSDefcon1App/user_list.html', {'users': users, 'game_id': game_id})
    else: 
        game = get_object_or_404(Games, id=game_id)
        users = User.objects.filter(nations__game=game).exclude(id=request.user.id).distinct()
        return render(request, 'AWSDefcon1App/user_list.html', {'users': users, 'game_id': game_id})

@login_required
def profile(request, user_id):
    user = User.objects.get(id=user_id)
    hunWins = False
    ruleTheWorld = False
    cubaWins = False
    cubaRules = False
    defcon1 = False
    if user.wins == 100 or user.wins > 100 and user.id not in Achievements.objects.get(name = "100 Wins").users:
        achievement = Achievements.objects.get(name="100 Wins")
        users_list = achievement.users  
        users_list.append(user.id)  
        achievement.users = users_list
        achievement.save()
        user.achievements += 1
        user.save()

    if Achievements.objects.filter(name="100 Wins").exists():
        if user.id in Achievements.objects.get(name="100 Wins").users:
            hunWins = True

    if Achievements.objects.filter(name="Defcon1").exists():
        if user.id in Achievements.objects.get(name="Defcon1").users:
            defcon1 = True

    if Achievements.objects.filter(name="Cuba Rules").exists():
        if user.id in Achievements.objects.get(name="Cuba Rules").users:
            cubaRules = True

    if Achievements.objects.filter(name="Cuba Wins").exists():
        if user.id in Achievements.objects.get(name="Cuba Wins").users:
            cubaWins = True

    if Achievements.objects.filter(name="Rule the World").exists():
        if user.id in Achievements.objects.get(name="Rule the World").users:
            ruleTheWorld = True
        
    if request.method == "POST" and request.user == user:
        new_bio = request.POST.get('bio')
        if new_bio:
            user.bio = new_bio
            user.save()
            return redirect('profile', user_id=user_id)

    return render(request, 'AWSDefcon1App/profile.html', {
        'name': user.username,
        'wins': user.wins,
        'achievements': user.achievements,
        'bio': user.bio,
        'is_owner': request.user == user,
        'hunWins':hunWins,
        'ruleTheWorld':ruleTheWorld,
        'cubaWins':cubaWins,
        'cubaRules':cubaRules,
        'defcon1':defcon1
    })
    
def creates(request):
  max_id = Games.objects.aggregate(max_id=Max('id'))['max_id']
  max_id += 1
  return render(request, "AWSDefcon1App/creates.html", {"max_id":max_id})



@login_required
def announcemnts(request, game_id):
  announces = Announcements.objects.filter(game=game_id).order_by('-start_time')
  return render(request, "AWSDefcon1App/announcements.html", {"game_id": game_id,"announces" : announces})

@login_required  
def beg(request, game_id):
  PlayerAAA = Nations.objects.get(game=game_id, user=request.user)
  user = request.user
  alliance = Nations.objects.get(game = game_id, user = user).alliance_name 
  allies = Nations.objects.filter(game = game_id, alliance_name = alliance, player_number__gt=7)
  ally_num = len(allies)
  user = request.user
  player = Nations.objects.get(game = game_id, user = user)
  if request.method == 'POST':
    if player.requests < 1:
        return HttpResponseBadRequest("You are out of diplomatic requests for the day. Please click the back button to return to the game")
        return HttpResponseRedirect(reverse("index"))
    player.requests -= 1
    player.save()
    ally = allies[random.randint(0, ally_num-1)]
    type = random.randint(1,6)
    if type == 1:
      amount = random.randint(0,ally.divisions)
      ally.divisions -= amount
      ally.save()
      player.divisions += amount
      player.save()
      announcements = Announcements.objects.create(text =f"{player.name} has recived divisions from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
    if type == 2:
      amount = random.randint(0,ally.planes)
      ally.planes -= amount
      ally.save()
      player.planes += amount
      player.save()
      announcements = Announcements.objects.create(text =f"{player.name} has recived planes from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
    if type == 3:
      amount = random.randint(0,ally.boats)
      ally.boats -= amount
      ally.save()
      player.boats += amount
      player.save()
      announcements = Announcements.objects.create(text =f"{player.name} has recived boats from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
    if type == 4:
      amount = random.randint(0,ally.points)
      ally.points -= amount
      ally.save()
      player.points += amount
      player.save()
      announcements = Announcements.objects.create(text =f"{player.name} has recived points from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
    if type == 6:
      amount = random.randint(0,ally.spies)
      ally.points -= spies
      ally.save()
      player.points += spies
      player.save()
      announcements = Announcements.objects.create(text =f"{player.name} has recived spies from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
    if type == 5:
      if ally.nukes > 0:
        amount = random.randint(0,ally.nukes)
        ally.nukes -= amount
        ally.save()
        player.nukes += amount
        player.save()
        announcements = Announcements.objects.create(text =f"{player.name} has recived nukes from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
      else:
        times = 8 - ally.nuke_time
        ally.nuke_time += times
        ally.save()
        player.nuke_time -= times
        player.save()
        announcements = Announcements.objects.create(text =f"{player.name} has recived nuclear technology from {ally.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
          
    player = Nations.objects.get(game = game_id, user = user)
    user = request.user
    requesters = player.requests
    user = request.user.username
    # Get the player's nation
    playernation = Nations.objects.filter(game=game_id, user=request.user).first()
    knownnations = Nations.objects.filter(game=game_id, alliance_name=playernation.alliance_name)
    return render(request, "AWSDefcon1App/beg.html", {"game_id": game_id,"requesters":requesters, "PlayerAAA":PlayerAAA, "knownnations":knownnations})
  player = Nations.objects.get(game = game_id, user = user)
  user = request.user
  requesters = player.requests
  nations = Nations.objects.filter(game=game_id)
  user = request.user.username
  # Get the player's nation
  playernation = Nations.objects.filter(game=game_id, user=request.user).first()
  knownnations = Nations.objects.filter(game=game_id, alliance_name=playernation.alliance_name)
  if playernation.alliance_name == "":
    knownnations =  Nations.objects.filter(game=game_id, user=request.user)
  return render(request, "AWSDefcon1App/beg.html", {"game_id": game_id, "requesters":requesters, "PlayerAAA":PlayerAAA, "knownnations":knownnations})

def index(request):
    games = Games.objects.all()
    user = request.user.username
    
    if not Achievements.objects.exists():
        Achievements.objects.create(name = "Rule the World") #Own every state
        Achievements.objects.create(name = "Cuba Wins")#Win as Cuba
        Achievements.objects.create(name = "Cuba Rules")#Own Every state as Cuba
        Achievements.objects.create(name = "Defcon1")#Have more then 200 Nukes
        Achievements.objects.create(name = "100 Wins")#Have 100 wins

    for game in games:
      # Get the most recent announcement for the game
      most_recent_announcement = Announcements.objects.filter(game=game).order_by('-start_time').first()
      game_id = game.id
      # Check if there is a most recent announcement
      if most_recent_announcement:
          # Calculate the time difference between now and the announcement's start_time
          time_difference = timezone.now() - most_recent_announcement.start_time

          if time_difference > timedelta(hours=8):
            all_nations = Nations.objects.filter(game = game_id, player_number__lt = 8).exclude(user = User.objects.get(username = "loser")).exclude(user = User.objects.get(username = "empty")).exclude(user = User.objects.get(username = "closed"))
            nations = Nations.objects.filter(game = game_id)
            for nation in nations:
                states = nation.states
                mult = 1
                if states <= 20:
                    mult = 2
                elif states < 50:
                    mult = 1.7
                elif states < 150:
                    mult = 1.5
                elif states < 200:
                    mult = 1.4
                elif states < 250:
                    mult = 1

                nation.divisions = nation.divisions + states * mult
                nation.planes = nation.planes + states * 10
                nation.boats = nation.boats + states / 2
                nation.points += 1
                if nation.nuke_time <= 0:
                    nation.nukes += 1
                else:
                    nation.nuke_time -= 1
                nation.attacks = 5
                nation.requests = 10
                nation.save()
            Announcements.objects.create(text =f"The game has been refreshed due to inactivity", start_time = datetime.now(), game = Games.objects.get(id = game_id))

    loser_nations = Nations.objects.filter(player_number__lt=8, user__username="loser")
    for loser_nation in loser_nations:
        game = loser_nation.game
        if game:
            player_number_to_update = f"player{loser_nation.player_number}"
            setattr(game, player_number_to_update, User.objects.get(username = 'loser'))
            game.save()
    
    loser_nations = Nations.objects.filter(player_number__lt=8, user__username="closed")
    for loser_nation in loser_nations:
        game = loser_nation.game
        if game:
            player_number_to_update = f"player{loser_nation.player_number}"
            setattr(game, player_number_to_update, User.objects.get(username = 'closed'))
            game.save()

    if not User.objects.filter(username='Admin').exists():
        user = User.objects.create_superuser('Admin', 'randomdams@gmail.com', 'C0deClub')
        user.save()
        
    max_game_id = Games.objects.count()
    
    games = Games.objects.all()
    nationscount = 0
    for game in games:
        # Obtain the game_id for the current game
        game_id = game.id
        nations = Nations.objects.filter(game_id=game_id, player_number__lt=8)
        nationscount = 0
        for nation in nations:
            if nation.user.username == 'loser':
                nationscount += 1
                if nationscount == 6:
                    non_loser_nations = nations.exclude(user__username='loser')
                    for non_loser_nation in non_loser_nations:
                        if non_loser_nation.name == "Cuba":
                            if non_loser_nation.user.id not in Achievements.objects.get(name = "Cuba Wins").users:
                                achievement = Achievements.objects.get(name="Cuba Wins")
                                users_list = achievement.users  
                                users_list.append(non_loser_nation.user.id)  
                                achievement.users = users_list
                                achievement.save()

                                non_loser_nation.user.achievements += 1
                                non_loser_nation.user.save()
                        if non_loser_nation.states == 903 or non_loser_nation.states > 903:
                                if non_loser_nation.user.id not in Achievements.objects.get(name = "Rule the World").users:
                                    achievement = Achievements.objects.get(name="Rule the World")
                                    users_list = achievement.users  
                                    users_list.append(non_loser_nation.user.id)  
                                    achievement.users = users_list
                                    achievement.save()

                                    non_loser_nation.user.achievements += 1
                                    non_loser_nation.user.save()
                        if non_loser_nation.states == 903 or non_loser_nation.states > 903 and non_loser_nation.name == "Cuba" and non_loser_nation.user.id not in Achievements.objects.get(name = "Cuba Rules").users:
                            achievement = Achievements.objects.get(name="Cuba Rules")
                            users_list = achievement.users  
                            users_list.append(non_loser_nation.user.id)  
                            achievement.users = users_list
                            achievement.save()

                            non_loser_nation.user.achievements += 1
                            non_loser_nation.user.save()

                        non_loser_nation.user.wins += 1
                        if non_loser_nation.user.wins == 100 and non_loser_nation.user.id not in Achievements.objects.get(name = "100 Wins").users:
                            achievement = Achievements.objects.get(name="100 Wins")
                            users_list = achievement.users  
                            users_list.append(non_loser_nation.user.id)  
                            achievement.users = users_list
                            achievement.save()
                            
                            non_loser_nation.user.achievements += 1
                            non_loser_nation.user.save()

                        non_loser_nation.user.save()
                    game.delete()
                    name = non_loser_nation.user.username
                    current_date = datetime.now()
                    # Check if the date is December 25th
                    if current_date.month == 12 and current_date.day == 25:
                        # Render the Christmas win screen
                        return render(request, "AWSDefcon1App/christmaswinner.html", {"game_id": game_id, "name": name})
                    return render(request, "AWSDefcon1App/winner.html", {"game_id": game_id, "name":name})

                    
    next_id = 1
    all_games = Games.objects.all()
    lst = list(all_games.values_list('id', flat=True))

    if not lst:
        # If no game objects exist, start with ID 1
        next_id =  1

    # Step 2: Determine the range of IDs
    else:
        min_id = min(lst)
        max_id = max(lst)

        # Step 3: Find missing IDs
        missing_ids = [num for num in range(min_id, max_id + 1) if num not in lst]

        if missing_ids:
            # Step 4: Return the first missing ID
            next_id = missing_ids[0]
        else:
            # If no IDs are missing within the range, return the next available ID
            next_id = max_id + 1

    leaderboard = User.objects.filter(wins__gt=0).order_by('-wins')
    return render(request, "AWSDefcon1App/index.html", {"games": games, "user": user, "max_game_id":max_game_id,'next_id':next_id,'leaderboard': leaderboard})

@login_required(login_url='login')
def game(request, game_id):

    non_loser_nation = Nations.objects.get(game = game_id, user = request.user)
    if non_loser_nation.nukes == 200 or non_loser_nation.nukes > 200 and non_loser_nation.user.id not in Achievements.objects.get(name = "Defcon1").users:
        achievement = Achievements.objects.get(name="Defcon1")
        users_list = achievement.users  
        users_list.append(non_loser_nation.user.id)  
        achievement.users = users_list
        achievement.save()

        non_loser_nation.user.achievements += 1
        non_loser_nation.user.save()

    nations = Nations.objects.filter(game=game_id)
    for nation in nations:
        if nation.friendlyness == 0 or nation.friendlyness < 1:
            nation.friendlyness = 1
    user = request.user.username
    # Get the player's nation
    playernation = Nations.objects.filter(game=game_id, user=request.user).first()
    if playernation and playernation.alliance_name:
        knownnations = Nations.objects.filter(game=game_id, alliance_name=playernation.alliance_name)
    else:
        knownnations = [playernation] if playernation else []
    return render(request, "AWSDefcon1App/game.html", {"nations": nations, "user": user, "game_id": game_id, "knownnations":knownnations})
  

def login_view(request):
    if request.method == "POST":

        # Attempt to sign user in
        username = request.POST["username"]
        password = request.POST["password"]
        user = authenticate(request, username=username, password=password)

        # Check if authentication successful
        if user is not None:
            login(request, user)
            return HttpResponseRedirect(reverse("index"))
        else:
            return render(request, "AWSDefcon1App/login.html", {
                "message": "Invalid username and/or password."
            })
    else:
        return render(request, "AWSDefcon1App/login.html")


def logout_view(request):
    logout(request)
    return HttpResponseRedirect(reverse("index"))


def register(request):
    if request.method == "POST":
        username = request.POST["username"]
        email = request.POST["email"]
        if len(username) > 30:
          return render(request, "AWSDefcon1App/register.html", {
                "message": "Username too long"
            })
        # Ensure password matches confirmation
        password = request.POST["password"]
        confirmation = request.POST["confirmation"]
        if password != confirmation:
            return render(request, "AWSDefcon1App/register.html", {
                "message": "Passwords must match."
            })

        # Attempt to create new user
        try:
            user = User.objects.create_user(username, email, password)
            user.save()
        except IntegrityError:
            return render(request, "AWSDefcon1App/register.html", {
                "message": "Username already taken."
            })
        login(request, user)
        return HttpResponseRedirect(reverse("index"))
    else:
        return render(request, "AWSDefcon1App/register.html")
    
#from background_task import background
#@background(schedule=timedelta(days=1))  
@staff_member_required
def new(request, game_id):
    if request.method == 'POST':
        all_nations = Nations.objects.filter(game = game_id)
        i = 0
        j = 0
        print("new)")
        for nation in all_nations:
            states = nation.states
            mult = 0.1
            if states <= 20:
                mult = 4
            elif states < 50:
                mult = 2
            elif states < 100:
                mult = 1
            elif states < 200:
                mult = 0.5
            elif states < 250:
                mult = 0.25

            nation.divisions = nation.divisions + states * mult
            nation.planes = nation.planes + states * 10
            nation.boats = nation.boats + states / 2
            nation.points += 1
            nation.attacks = 2
            if nation.nuke_time <= 0:
                nation.nukes += 1
            else:
                nation.nuke_time -= 1
            nation.save()
    return render(request, "AWSDefcon1App/new.html", {'game_id': game_id})




@login_required(login_url='login')
def focus(request, game_id):
    PlayerAAA = Nations.objects.get(game=game_id, user=request.user)
    if request.method == 'POST':
        slider_value = int(request.POST.get("slider_value"))
        for _ in range(slider_value):
          player = Nations.objects.get(game = game_id, user = request.user)
          if player.points <= 0:
              return HttpResponseBadRequest("You don't have enough focus points to do that. Please click the back button to return to the game")
          army = request.POST.get("army")
          air = request.POST.get("air")
          navy = request.POST.get("navy")
          nuke = request.POST.get("nuke")
          policy = request.POST.get("policy")
          if army:
              player.points -= 1
              player.divisions += 80
          if navy:
              player.points -= 1
              player.boats += 60
          if air:
              player.points -= 1
              player.planes += 1000
          if nuke:
              if player.points < 2:
                  return HttpResponseBadRequest("You don't have enough focus points to do that. Please click the back button to return to the game")
              player.points -= 2
              player.nuke_time -= 1
              if player.nuke_time <= 0:
                  player.nukes += 1
                  player.nuke_time += 1
                  player.save()
          if policy:
              if player.points < 2:
                  return HttpResponseBadRequest("You don't have enough focus points to do that. Please click the back button to return to the game")
              player.points -= 2
              war = War.objects.filter(nation1 = player).delete()
              war = War.objects.filter(nation2 = player).delete()
              player.alliance_name = ''
          player.save()
    player = Nations.objects.get(game = game_id, user = request.user)
    points = player.points
    return render(request, 'AWSDefcon1App/focus.html', {'game_id': game_id, 'points':points, 'PlayerAAA':PlayerAAA})

def spies(request, game_id):
    PlayerAAA = Nations.objects.get(game=game_id, user=request.user)
    if request.method == 'POST':
        get = request.POST.get("get")
        army = request.POST.get("army")
        air = request.POST.get("air")
        navy = request.POST.get("navy")
        nuke = request.POST.get("nuke")
        coup = request.POST.get("coup")
        civil = request.POST.get("civil")
        kill = request.POST.get("kill")

        target = request.POST.get("target")
        enemy = Nations.objects.get(game = game_id, name = target)
        player = Nations.objects.get(game = game_id, user = request.user)
        if player.requests < 1:
            return HttpResponseBadRequest("You are out of diplomatic requests for the day. Please click the back button to return to the game")
        if enemy.spies < 1:
            nations = Nations.objects.filter(game = game_id).exclude(user = User.objects.get(username = "loser")).exclude(user = request.user)
            requesters = player.requests
            return render(request, 'AWSDefcon1App/spies.html', {'game_id': game_id, 'nations':nations, 'PlayerAAA':PlayerAAA, 'requesters':requesters})
        if get:
            chance = player.spies/((enemy.spies * 1) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                player.spies += 1
                enemy.spies -= 1
                announcements = Announcements.objects.create(text =f"A spy from {enemy.name} has turned to join {player.name}'s nation", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if army:
            chance = player.spies/((enemy.spies * 2) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                if enemy.divisions > 0:
                    enemy.divisions -= random.randint(0, enemy.divisions)
                    announcements = Announcements.objects.create(text =f"A spy from {player.name} has sabotaged the army of {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if navy:
            chance = player.spies/((enemy.spies * 2) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                if enemy.boats > 0:
                    enemy.boats -= random.randint(0, enemy.boats)
                    announcements = Announcements.objects.create(text =f"A spy from {player.name} has sabotaged the navy of {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if air:
            chance = player.spies/((enemy.spies * 2) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                if enemy.planes > 0:
                    enemy.planes -= random.randint(0, enemy.planes)
                    announcements = Announcements.objects.create(text =f"A spy from {player.name} has sabotaged the air force of {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if nuke:
            chance = player.spies/((enemy.spies * 2) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                if player.nuke_time > 0:
                    player.nuke_time -= 1
                else:
                    player.nukes += 1
                    announcements = Announcements.objects.create(text =f"A spy from {player.name} has stole technology of {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()         
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if coup:
            chance = player.spies/((enemy.spies * 3) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                squares = Square.objects.filter(map = Map.objects.get(game = game_id), owner = enemy)
                if squares.count() == 1:
                    pass
                else:
                    random_square = random.choice(squares)
                    random_square.owner = player
                    random_square.color = colors.get(player.name)
                    player.states += 1
                    random_square.save()
                    player.save()
                    announcements = Announcements.objects.create(text =f"A spy from {player.name} has created a small revolt in {random_square.name},{enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if kill:
            chance = player.spies/((enemy.spies * 2) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                if enemy.spies > 0:
                    enemy.spies -= 1
                announcements = Announcements.objects.create(text =f"A spy from {enemy.name} has been caught and executed by {player.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
            else:
                player.spies -= 1
                player.save()
                announcements = Announcements.objects.create(text =f"A spy from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        if civil:
            chance = player.spies/((enemy.spies * 4) + 1)
            if chance > 0.75:
                chance = 0.75
            chance = chance * 100
            rand = random.randint(1,100)
            if rand < chance or rand == chance:
                    squares = Square.objects.filter(map = Map.objects.get(game = game_id), owner = enemy)
                    square_list = list(squares)    
                    random.shuffle(square_list)
                    half_count = len(square_list) // 2
                    random_half_squares = square_list[:half_count]
                    for square in random_half_squares:
                        square.owner = player
                        square.color = colors.get(player.name)
                        player.states += 1
                        enemy.states -= 1
                        enemy.save()
                        square.save()
                        player.save()
                        announcements = Announcements.objects.create(text =f"{player.name} started a civil war in {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))                             
            else:
                player.spies = 0
                announcements = Announcements.objects.create(text =f"All spies from {player.name} has been caught and executed by {enemy.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))        
        player.requests -= 1
        player.save()
        enemy.save()

    player = Nations.objects.get(game = game_id, user = request.user)
    nations = Nations.objects.filter(game = game_id).exclude(user = User.objects.get(username = "loser")).exclude(user = request.user)
    points = player.points
    requesters = player.requests
    return render(request, 'AWSDefcon1App/spies.html', {'game_id': game_id, 'nations':nations, 'PlayerAAA':PlayerAAA, 'requesters':requesters})

@login_required(login_url='login')
def join(request, game_id, player_number):
    game = get_object_or_404(Games, id=game_id)

    if request.method == 'POST':
        player_field = f"player{player_number}"

        # Check if the player already has a spot in any player field
        existing_player_field = None
        for i in range(0, 8):
            field_name = f"player{i}"
            player = getattr(game, field_name)
            if player == request.user:
                existing_player_field = field_name
                break

        # Remove the player from the existing spot if any
        try:
            setattr(game, existing_player_field,User.objects.get(username='empty'))
            nation = Nations.objects.get(game=game, user=request.user)
            nation.user = User.objects.get(username='empty')  # Replace 'name' with the field you want to update
            nation.save()
        except:
            pass

        setattr(game, player_field, request.user)
        game.save()
        # Update the Nations model
        nation, created = Nations.objects.get_or_create(game=game, player_number=player_number)
        nation.user = request.user
        nation.save()
        return HttpResponseRedirect(reverse("index"))
    return render(request, 'AWSDefcon1App/join.html', {'game_id': game_id, 'player_number': player_number})

@login_required(login_url='login')
def battle(request,game_id):
    '''    
            wars = War.objects.all()
            for war in wars:
                nation1 = war.nation1
                nation2 = war.nation2
                if nation1.player_number > 7 or nation2.player_number > 7:
                    print("war occuring")
                    if nation1.states > 1 and nation2.states > 1:
                    print("battle starting") 
                    print(f"##########################################################################{nation1.name} has fought {nation2.name} in game#{nation1.game.id}##########################################################################")
                    nation1.divisions *= 0.7
                    nation2.divisions *= 0.7
                    nation1.planes *= 0.9
                    nation2.planes *= 0.9
                    nation1.boats *= 0.8
                    nation2.boats *= 0.8
                    if nation1.divisions > nation2.divisions and nation1.player_number > 7:
                            nation1.states += 1
                            nation2.states -=1
                            nation2_squares = Square.objects.filter(owner=nation2)
                            valid_squares = []
                            for square in nation2_squares:
                                if square.coastal:
                                    valid_squares.append(square)
                                for neighbor_id in square.neighbors:
                                    try:
                                        neighbor_square = Square.objects.get(id=neighbor_id)
                                        if neighbor_square.owner == nation1:
                                            valid_squares.append(square)
                                            break  # No need to check other neighbors if one condition is satisfied
                                    except Square.DoesNotExist:
                                        continue
                            if len(valid_squares) == 0:
                                break
                            random_square = random.choice(valid_squares)
                            random_square.owner = nation1
                            random_square.color = colors.get(nation1.name)
                            random_square.save()
                            nation1.save()
                            nation2.save()
                            
                    elif nation2.divisions > nation1.divisions and nation2.player_number > 7:
                            nation2.states += 1
                            nation1.states -=1
                            nation1_squares = Square.objects.filter(owner=nation1)
                            valid_squares = []
                            for square in nation1_squares:
                                if square.coastal:
                                    valid_squares.append(square)
                                for neighbor_id in square.neighbors:
                                    try:
                                        neighbor_square = Square.objects.get(id=neighbor_id)
                                        if neighbor_square.owner == nation2:
                                            valid_squares.append(square)
                                            break  # No need to check other neighbors if one condition is satisfied
                                    except Square.DoesNotExist:
                                        continue
                            if len(valid_squares) == 0:
                                break
                            random_square = random.choice(valid_squares)
                            random_square.owner = nation2
                            random_square.color = colors.get(nation2.name)
                            random_square.save()
                            nation1.save()
                            nation2.save()
                            break

    ''' 
    PlayerAAA = Nations.objects.get(game=game_id, user=request.user)
    owner = Nations.objects.get(game=Games.objects.get(id = game_id), user=request.user)
    attacks_left = owner.attacks
    wars_as_nation1 = War.objects.filter(nation1=owner)

    wars_as_nation2 = War.objects.filter(nation2=owner)

    nations_at_war = set(
        [war.nation2 for war in wars_as_nation1] + [war.nation1 for war in wars_as_nation2]
    )

    owner = owner.name
    game = Games.objects.get(id=game_id)
    owned_squares = Square.objects.filter(owner=Nations.objects.get(game = game_id, name = owner), map=Map.objects.get(game=Games.objects.get(id=game_id)))
    controlled_squares = [square.number for square in owned_squares]
    border_squares = []
    for controlled_square in controlled_squares:
        border_numbers = [controlled_square+1, controlled_square-1, controlled_square+69, controlled_square-69]
        border_squares.extend(border_numbers)

    border_squares = list(set(border_squares) - set(controlled_squares))
    bordering_owners = Square.objects.filter(number__in=border_squares).values_list('owner', flat=True)
    bordering_nations = Nations.objects.filter(name__in=bordering_owners)
    borders_at_war = set(bordering_nations).intersection(set(nations_at_war))
    
    if request.method == 'GET':
        owner = Nations.objects.get(game=Games.objects.get(id = game_id), user=request.user)
        return render(request, 'AWSDefcon1App/battles.html', {'game_id':game_id,'PlayerAAA':PlayerAAA, 'borders_at_war':borders_at_war, 'nations_at_war':nations_at_war,'attacks_left':attacks_left, 'owner':owner})
    elif request.method == 'POST':
        owner = Nations.objects.get(game=Games.objects.get(id = game_id), user=request.user)
        attacks_left = owner.attacks
        if attacks_left <= 0:
            return HttpResponseBadRequest("You have already fought all your battles for the day. Please click the back button to return to the game")
        owner.attacks -= 1
        owner.save()
        action = request.POST.get('action')

        # Perform different actions based on the clicked button
        division_attack_type = ""
        planes_attack_type = ""
        boat_attack_type = ""
        nuke_defender = ""
        boat_defender = request.POST.get('defender')
        planes_defender = request.POST.get('defender')
        division_defender = request.POST.get('defender')
        if action == 'Ndivision':
            division_attack_type = "normal"
            division_attack_amount = 9999999999
            planes_attack_amount = None 
            boat_attack_amount = None
      
        elif action == 'Nplanes':
            division_attack_amount = None
            planes_attack_type = "normal"
            planes_attack_amount = 99999999999
            boat_attack_amount = None

        elif action == 'Nboat':
            division_attack_amount = None
            planes_attack_amount = None
            boat_attack_amount = "9999999999"
            boat_attack_type = "normal"
        
        elif action == 'division':
            division_attack_type = "encirclement"
            division_attack_amount = 9999999999
            planes_attack_amount = None
            boat_attack_amount = None
        
        elif action == 'planes':
            division_attack_amount = None
            planes_attack_type = "bombing"
            planes_attack_amount = 99999999999
            boat_attack_amount = None
        
        elif action == 'boat':
            division_attack_amount = None
            planes_attack_amount = None
            boat_attack_amount = 9999999999
            boat_attack_type = "amphibious"
        
        elif action == 'nuke':
            division_attack_amount = None
            planes_attack_amount = 99999999999
            boat_attack_amount = None
            nuke_defender = request.POST.get('defender')
            
        elif action == 'Bplanes':
            division_attack_amount = None
            planes_attack_type = "Bbombing"
            planes_attack_amount = 99999999999
            boat_attack_amount = None
        


        
        boat_defender = request.POST.get('defender')
        planes_defender = request.POST.get('defender')
        division_defender = request.POST.get('defender')

        try:
            division_defend_amount = Nations.objects.get(game = game_id, name = division_defender).divisions
        except:
            division_defend_amount = 0

        try:
            planes_defend_amount = Nations.objects.get(game = game_id, name = planes_defender).planes
        except:
            planes_defend_amount = 0

        try:
            boat_defend_amount = Nations.objects.get(game = game_id, name = boat_defender).boats
        except:
            boat_defend_amount = 0

        if boat_attack_amount:
            if int(boat_attack_amount) > Nations.objects.get(game=game_id, user=request.user).boats:
                boat_attack_amount = Nations.objects.get(game=game_id, user=request.user).boats 
            ogab = int(boat_attack_amount)
            ogdb = int(boat_defend_amount)
            if boat_attack_type == "normal":
                owner = Nations.objects.get(game=Games.objects.get(id = game_id), user=request.user)
                announcements = Announcements.objects.create(text =f"{owner.name} has fought a naval battle with {boat_defender}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                chance = random.randint(1, 20)
                if chance > 1 and chance < 20:
                    boat_defend_amount = int(ogdb) - int(ogab)*0.3
                elif chance == 1:
                    boat_defend_amount = int(ogdb) - int(ogab)*0.9
                elif chance == 20:
                    boat_defend_amount = int(ogdb) - int(ogab)*0.1
                chance = random.randint(1, 20)
                if chance > 1 and chance < 20:
                    boat_attack_amount = int(ogab) - int(ogdb)*0.3
                elif chance == 1:
                    boat_attack_amount = int(ogab) - int(ogdb)*0.9
                elif chance == 20:
                    boat_attack_amount = int(ogab) - int(ogdb)*0.1

                boat_attackers_lost = ogab - int(boat_attack_amount)
                boat_defenders_lost =  ogdb - int(boat_defend_amount)
                nation_attacker = Nations.objects.get(game=game_id, user=request.user) 
                nation_defender = Nations.objects.get(game = game_id, name = boat_defender)
                nation_attacker.boats -= boat_attackers_lost
                nation_defender.boats -= boat_defenders_lost
                if nation_attacker.boats < 0:
                    nation_attacker.boats = 0
                if nation_defender.boats < 0:
                    nation_defender.boats = 0
                nation_attacker.save()
                nation_defender.save()
                

            if boat_attack_type == "amphibious":
                owner = owner.name
                if ogab > ogdb:
                    announcements = Announcements.objects.create(text =f"{owner} has landed on the beaches of {boat_defender}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                    O_border_squares = Square.objects.filter(map = Map.objects.get(game=game_id), coastal = True, owner = Nations.objects.get(game = game_id, name = boat_defender))
                    length  = len(O_border_squares) - 1
                    try:
                        fallen_state = O_border_squares[random.randint(1, length)]
                    except:
                        try:
                            fallen_state = O_border_squares[0]
                        except:
                            owners = Nations.objects.get(game=game_id, user = request.user)
                            owners.attacks += 1
                            owners.save()
                            return HttpResponseBadRequest("No Water to Invade! (This could be a mistake so try again, don't wory your battle wasn't used)  Please click the back button to return to the game")

                            
                    fallen_state.owner = Nations.objects.get(game=game_id, user=request.user)
                    owner = Nations.objects.get(game=game_id, user=request.user)
                    color = colors.get(owner.name)
                    fallen_state.color = color
                    fallen_state.save()
                    player = Nations.objects.get(game=game_id, user=request.user)
                    defender = Nations.objects.get(game = game_id, name = boat_defender)
                    player.states += 1
                    defender.states -= 1
                    player.save()
                    defender.save()

                else:
                    announcements = Announcements.objects.create(text =f"{owner} has failed to land on the beaches of {boat_defender}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                    chance = random.randint(1, 20)
                    if chance > 1 and chance < 20:
                        boat_attack_amount = int(boat_attack_amount) - int(boat_defend_amount)*0.3
                    elif chance == 1:
                        boat_attack_amount = int(boat_attack_amount) - int(boat_defend_amount)*0.9
                    elif chance == 20:
                        boat_attack_amount = int(boat_attack_amount) - int(boat_defend_amount)*0.1


        
        if planes_attack_amount:
            owner = owner.name
            if int(planes_attack_amount) > Nations.objects.get(game=game_id, user=request.user).planes:
                planes_attack_amount = Nations.objects.get(game=game_id, user=request.user).planes 
            ogap = int(planes_attack_amount)
            ogdp = int(planes_defend_amount)
            if planes_attack_type == "bombing":
                announcements = Announcements.objects.create(text =f"{owner} has sent a bombing raid over {planes_defender}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                change = ogap//1000
                enemy = Nations.objects.get(game = game_id, name = planes_defender)
                enemy.divisions -= change
                if enemy.divisions < 0:
                    enemy.divisions = 0
                enemy.save()
            elif planes_attack_type == "normal":
                chance = random.randint(1, 20)
                if chance > 1 and chance < 20:
                    planes_defend_amount = int(ogdp) - int(ogap)*0.3
                elif chance == 1:
                    planes_defend_amount = int(ogdp) - int(ogap)*0.9
                elif chance == 20:
                    planes_defend_amount = int(ogdp) - int(ogap)*0.1
                chance = random.randint(1, 20)
                if chance > 1 and chance < 20:
                    planes_attack_amount = int(ogap) - int(ogdp)*0.3
                elif chance == 1:
                    planes_attack_amount = int(ogap) - int(ogdp)*0.9
                elif chance == 20:
                    planes_attack_amount = int(ogap) - int(ogdp)*0.1

                planes_attackers_lost = ogap - int(planes_attack_amount)
                planes_defenders_lost =  ogdp - int(planes_defend_amount)
                nation_attacker = Nations.objects.get(game=game_id, user=request.user) 
                nation_defender = Nations.objects.get(game = game_id, name = planes_defender)
                announcements = Announcements.objects.create(text =f"{owner} has sent planes to fight {planes_defender}", start_time = datetime.now(), game = Games.objects.get(id = game_id))

                nation_attacker.planes -= planes_attackers_lost
                nation_defender.planes -= planes_defenders_lost  
                if nation_attacker.planes < 0:
                    nation_attacker.planes = 0
                if nation_defender.planes < 0:
                    nation_defender.planes = 0
                nation_attacker.save()
                nation_defender.save()
            
            elif planes_attack_type == "Bbombing":
              try:
                boat_defend_amount = Nations.objects.get(game = game_id, name = boat_defender).boats
              except:
                boat_defend_amount = 0
              
              ogdb = int(boat_defend_amount)
              chance = random.randint(1, 20)
              if chance > 1 and chance < 20:
                  planes_defend_amount = int(ogdb) - int(ogap)*0.003
              elif chance == 1:
                  planes_defend_amount = int(ogdb) - int(ogap)*0.009
              elif chance == 20:
                  planes_defend_amount = int(ogdb) - int(ogap)*0.001
              chance = random.randint(1, 20)
              if chance > 1 and chance < 20:
                  planes_attack_amount = int(ogap) - int(ogdb)*3
              elif chance == 1:
                  planes_attack_amount = int(ogap) - int(ogdb)*10
              elif chance == 20:
                  planes_attack_amount = int(ogap) - int(ogdb)*1

              planes_attackers_lost = ogap - int(planes_attack_amount)
              boats_defenders_lost =  ogdb - int(boat_defend_amount)
              nation_attacker = Nations.objects.get(game=game_id, user=request.user) 
              nation_defender = Nations.objects.get(game = game_id, name = planes_defender)
              announcements = Announcements.objects.create(text =f"{owner} has sent planes to fight {planes_defender}'s boats'", start_time = datetime.now(), game = Games.objects.get(id = game_id))

              nation_attacker.planes -= planes_attackers_lost
              nation_defender.boats -= boats_defenders_lost  
              if nation_attacker.planes < 0:
                  nation_attacker.planes = 0
              if nation_defender.boats < 0:
                  nation_defender.boats = 0
              nation_attacker.save()
              nation_defender.save()

        
        if nuke_defender:
            try:
                ogap = int(planes_attack_amount)
                ogdp = int(planes_defend_amount)
            except:
                return HttpResponseBadRequest("You need to send planes in either a dog fight or bombing raid. Please click the back button to return to the game")
            planes_defender = request.POST.get('defender')
            
            if ogap > ogdp:
                enemy = Nations.objects.get(game=game_id, name=nuke_defender)
                player = Nations.objects.get(game=game_id, user=request.user)
                nuke_amount = player.nukes
                player.nukes = nuke_amount - 1
                player.save()
                nuked = enemy.nuked
                enemy.nuked = nuked + 1
                enemy.save()
                nuked = nuked + 1
                announcements = Announcements.objects.create(text =f"{owner} has used nuclear weapons against {planes_defender}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                number = enemy.player_number
                enemy_player_number = f"player{number}"
               
                numerator = math.log(enemy.states / 10)
                denominator = math.log(1.5)
                result = numerator / denominator

                if nuked == result or nuked > result:
                    print("Nuked!")
                    player.boats += enemy.boats
                    player.planes += enemy.planes
                    player.states += enemy.states
                    enemy.states = 0
                    enemy.boats = 0
                    enemy.planes = 0
                    enemy.user = User.objects.get(username='loser')
                    enemy.divisions = 0
                    enemy.alliance_name = ''
                    maper = Map.objects.get(number=game_id, game = Games.objects.get(id=game_id))
                    number = enemy.player_number
                    enemy_player_number = f"player{number}"
                    enemy_squares = Square.objects.filter(map=maper, owner=enemy)
                    print("Number of enemy squares:", len(enemy_squares))
                    game_instance = Games.objects.get(id=game_id)
                    game_instance.enemy_player_number = User.objects.get(username='loser')
                    game_instance.save()
                    for square in enemy_squares:
                        square.owner = player
                        color = colors.get(player.name)
                        square.color = color
                        square.save()
                    enemy.save()
                    player.save()
                    War.objects.filter(Q(nation1=enemy) | Q(nation2=enemy)).delete()

        if division_attack_amount:
            if int(division_attack_amount) > Nations.objects.get(game=game_id, user=request.user).divisions:
                division_attack_amount = Nations.objects.get(game=game_id, user=request.user).divisions  
            oga = int(division_attack_amount)
            ogd = int(division_defend_amount)
            chance = random.randint(1, 20)
            if division_attack_type == "normal":
                if chance > 1 and chance < 20:
                    division_defend_amount = int(ogd) - int(oga)*0.3

                elif chance == 1:
                    division_defend_amount = int(ogd) - int(oga)*0.9
                elif chance == 20:
                    division_defend_amount = int(ogd) - int(oga)*0.1
                chance = random.randint(1, 20)
                if chance > 1 and chance < 20:
                    division_attack_amount = int(oga) - int(ogd)*0.3
                elif chance == 1:
                    division_attack_amount = int(oga) - int(ogd)*0.9
                elif chance == 20:
                    division_attack_amount = int(oga) - int(ogd)*0.1
            if division_attack_type == "encirclement":
                if chance > 10:
                    division_defend_amount = int(ogd) - int(oga)*0.9
                    division_attack_amount = int(oga) - int(ogd)*0.1
                elif chance < 10:
                    division_defend_amount = int(ogd) - int(oga)*0.1
                    division_attack_amount = int(oga) - int(ogd)*0.9
            if division_defend_amount < 0:
                        division_defend_amount = 0
            if division_attack_amount < 0:
                        division_attack_amount = 0
            state_changeA = oga - int(division_attack_amount) // 10
            state_changeD = ogd - int(division_attack_amount) // 10
            if state_changeD < state_changeA:
                state_change =  state_changeA - state_changeD
                if state_change > 15:
                    state_change = 15
                owner = Nations.objects.get(game=game_id, user=request.user)
                stater = owner.states
                stater = stater * 2
                owned_squares = Square.objects.filter(owner=owner, map=Map.objects.get(game=Games.objects.get(id=game_id)))
                controlled_squares = [square.number for square in owned_squares]
                border_squares = []
                i = 0 
                j = 0
                print(state_change)
                print(controlled_squares)
                while i < state_change:
                    for controlled_square in controlled_squares:
                        print(controlled_squares)
                        print(Square.objects.get(map=Map.objects.get(game=Games.objects.get(id=game_id)), number = controlled_square).neighbors)
                        for neighbor in Square.objects.get(map=Map.objects.get(game=Games.objects.get(id=game_id)), number = controlled_square).neighbors:
                            border_square = Square.objects.get(number=neighbor, map=Map.objects.get(game=Games.objects.get(id=game_id)))
                            if border_square.owner == Nations.objects.get(game = game_id, name = division_defender):
                                border_square.owner = owner
                                color = colors.get(owner.name)
                                border_square.color = color
                                border_square.save()         
                                i = i + 1

                        j = j + 1
                        if j > stater:
                            break
                    if j > stater:
                        break

            elif state_changeD >= state_changeA:
                owner = Nations.objects.get(game = game_id, name = division_defender)
                stater = owner.states
                stater = stater * 3
                owned_squares = Square.objects.filter(owner=owner, map=Map.objects.get(game=Games.objects.get(id=game_id)))
                controlled_squares = [square.number for square in owned_squares]
                border_squares = []
                i = 0
                j = 0
                while i < 10:
                    for controlled_square in controlled_squares:
                        for neighbor in Square.objects.get(map=Map.objects.get(game=Games.objects.get(id=game_id)), number = controlled_square).neighbors:
                            border_square = Square.objects.get(number=neighbor, map=Map.objects.get(game=Games.objects.get(id=game_id)))
                            if border_square.owner == Nations.objects.get(game = game_id, name = division_defender):
                                border_square.owner = owner
                                color = colors.get(owner.name)
                                border_square.color = color
                                border_square.save()         
                                i = i + 1

                        j = j + 1
                        if j > stater:
                            break
                    if j > stater:
                        break

            states_lost = i
            states_gained = i
            div_attackers_lost = oga - int(division_attack_amount)
            div_defenders_lost =  ogd - int(division_defend_amount)

            nation_attacker = Nations.objects.get(game=game_id, user=request.user) 
            nation_defender = Nations.objects.get(game = game_id, name = division_defender)
            if state_changeD <= state_changeA:
                nation_defender.states -= states_lost
                nation_attacker.states += states_gained
                announcements = Announcements.objects.create(text =f"{owner.name} has defeated {division_defender} in a battle", start_time = datetime.now(), game = Games.objects.get(id = game_id))

            if state_changeD >= state_changeA:
                nation_attacker.states -= states_lost
                nation_defender.states += states_gained
                announcements = Announcements.objects.create(text =f"{division_defender} has defeated {owner.name} in a battle", start_time = datetime.now(), game = Games.objects.get(id = game_id))

            nation_attacker.divisions -= div_attackers_lost
            nation_defender.divisions -= div_defenders_lost  
            if nation_attacker.divisions < 0:
                nation_attacker.divisions = 0
            if nation_defender.divisions < 0:
                nation_defender.divisions = 0
            nation_attacker.save()
            nation_defender.save()
            

        player = Nations.objects.get(game=game_id, user=request.user)

        if division_defender:
            div_defender = Nations.objects.get(game = game_id, name = division_defender)
        if planes_defender:
            planes_defender = Nations.objects.get(game = game_id, name = planes_defender)
        if boat_defender:
            boat_defender = Nations.objects.get(game = game_id, name = boat_defender)

        number = div_defender.player_number
        player_number_value = f"player{number}"
        if div_defender.states < 1:
            print("div")
            player.boats += div_defender.boats
            player.planes += div_defender.planes
            div_defender.boats = 0
            div_defender.planes = 0
            div_defender.user = User.objects.get(username='loser')
            div_defender.divisions = 0
            div_defender.alliance_name = ''
            div_defender.save()
            player.save()
            game_instance = Games.objects.get(id=game_id)
            game_instance.enemy_player_number = User.objects.get(username='loser')
            game_instance.save()
            War.objects.filter(Q(nation1=div_defender) | Q(nation2=div_defender)).delete()


        if planes_defender.states < 1:
            print("plane")
            player.boats += planes_defender.boats
            player.planes += planes_defender.planes
            div_defender.boats = 0
            div_defender.planes = 0
            planes_defender.user = User.objects.get(username='loser')
            planes_defender.divisions = 0
            planes_defender.alliance_name = ''
            planes_defender.save()
            player.save()
            game_instance = Games.objects.get(id=game_id)
            game_instance.enemy_player_number = User.objects.get(username='loser')
            game_instance.save()
            War.objects.filter(Q(nation1=planes_defender) | Q(nation2=planes_defender)).delete()
            
        if boat_defender.states < 1:
            print("boat")
            player.boats += boat_defender.boats
            player.planes += boat_defender.planes
            div_defender.boats = 0
            div_defender.planes = 0
            boat_defender.user = User.objects.get(username='loser')
            boat_defender.divisions = 0
            boat_defender.alliance_name = ''
            boat_defender.save()
            player.save()
            game_instance = Games.objects.get(id=game_id)
            game_instance.enemy_player_number = User.objects.get(username='loser')
            game_instance.save()
            War.objects.filter(Q(nation1=boat_defender) | Q(nation2=boat_defender)).delete()

        number = player.player_number
        player_number_value = f"player{number}"
        if player.states < 1:
            if division_attack_amount:
                div_defender.boats += player.boats
                div_defender.planes += player.planes
                player.user = User.objects.get(username='loser')
                player.divisions = 0
                player.alliance_name = ''
                War.objects.filter(Q(nation1=player) | Q(nation2=player)).delete()
            elif boat_attack_amount:
                boat_defender.boats += player.boats
                boat_defender.planes += player.planes
                player.user = User.objects.get(username='loser')
                player.divisions = 0
                player.alliance_name = ''
                War.objects.filter(Q(nation1=player) | Q(nation2=player)).delete()
            game_instance = Games.objects.get(id=game_id)
            game_instance.player_number_value = User.objects.get(username='loser')
            game_instance.save()
                               
        if division_defender:
            div_defender.save()
        if planes_defender:
            planes_defender.save() 
        if boat_defender:
            boat_defender.save()

        player.save()
        
        all_nations = Nations.objects.filter(game = game_id, player_number__lt = 8).exclude(user = User.objects.get(username = "loser")).exclude(user = User.objects.get(username = "empty")).exclude(user = User.objects.get(username = "closed"))
        i = 0
        j = 0
        for nation in all_nations:
          i += 1
          if nation.attacks == 0:
            j += 1
        j += 2
        if i < j:
          print('new')
          nations = Nations.objects.filter(game = game_id)
          for nation in nations:
              states = nation.states
              mult = 1
              if states <= 20:
                  mult = 2
              elif states < 50:
                  mult = 1.7
              elif states < 150:
                  mult = 1.5
              elif states < 200:
                  mult = 1.4
              elif states < 250:
                  mult = 1

              nation.divisions = nation.divisions + states * mult
              nation.planes = nation.planes + states * 10
              nation.boats = nation.boats + states / 2
              nation.points += 1
              if nation.nuke_time <= 0:
                  nation.nukes += 1
              else:
                  nation.nuke_time -= 1
              nation.attacks = 5
              nation.requests = 10
              nation.save()
                  
    color_filter_dict = {
    '#4892FF': 'invert(49%) sepia(76%) saturate(1792%) hue-rotate(196deg) brightness(100%) contrast(103%)',
    '#ff4879': 'invert(44%) sepia(70%) saturate(2984%) hue-rotate(318deg) brightness(101%) contrast(102%)',
    '#a3101f': 'invert(13%) sepia(96%) saturate(5796%) hue-rotate(350deg) brightness(65%) contrast(92%)',
    '#56a552': 'invert(52%) sepia(7%) saturate(2676%) hue-rotate(69deg) brightness(105%) contrast(99%)',
    '#62bd52': 'invert(63%) sepia(55%) saturate(456%) hue-rotate(65deg) brightness(92%) contrast(88%)',
    '#79ebff': 'invert(81%) sepia(10%) saturate(2513%) hue-rotate(163deg) brightness(105%) contrast(103%)',
    '#4d0019': 'invert(11%) sepia(68%) saturate(2762%) hue-rotate(320deg) brightness(73%) contrast(112%)',
    '#c7e9b4': 'invert(90%) sepia(18%) saturate(459%) hue-rotate(49deg) brightness(101%) contrast(86%)',
    '#623c3c': 'invert(24%) sepia(7%) saturate(5090%) hue-rotate(314deg) brightness(69%) contrast(69%)',
    '#e79481': 'invert(61%) sepia(38%) saturate(513%) hue-rotate(323deg) brightness(103%) contrast(81%)',
    '#def7c6': 'invert(93%) sepia(10%) saturate(818%) hue-rotate(44deg) brightness(106%) contrast(94%)',
    '#57a1ff': 'invert(61%) sepia(39%) saturate(3550%) hue-rotate(191deg) brightness(100%) contrast(104%)',
    '#ffffff': 'invert(100%) sepia(0%) saturate(0%) hue-rotate(171deg) brightness(107%) contrast(106%)',
    '#c23b85': 'invert(35%) sepia(16%) saturate(7490%) hue-rotate(301deg) brightness(82%) contrast(83%)',
    '#9b3e33': 'invert(24%) sepia(33%) saturate(4109%) hue-rotate(344deg) brightness(83%) contrast(75%)',
    '#4993ff': 'invert(49%) sepia(76%) saturate(1792%) hue-rotate(196deg) brightness(100%) contrast(103%)',
    '#ffa47f': 'invert(74%) sepia(49%) saturate(761%) hue-rotate(311deg) brightness(106%) contrast(101%)',
    '#dfe5a0': 'invert(96%) sepia(97%) saturate(352%) hue-rotate(5deg) brightness(94%) contrast(90%)',
    '#ca828b': 'invert(62%) sepia(26%) saturate(512%) hue-rotate(303deg) brightness(88%) contrast(98%)',
    '#fff6ff': 'invert(100%) sepia(20%) saturate(3203%) hue-rotate(192deg) brightness(103%) contrast(103%)',
    '#ffb25f': 'invert(68%) sepia(81%) saturate(387%) hue-rotate(333deg) brightness(101%) contrast(101%)',
    '#c80a0a': 'invert(14%) sepia(57%) saturate(4472%) hue-rotate(349deg) brightness(114%) contrast(113%)',
    '#ffff79': 'invert(96%) sepia(99%) saturate(624%) hue-rotate(341deg) brightness(107%) contrast(103%)',
    '#ffff9b': 'invert(99%) sepia(20%) saturate(2017%) hue-rotate(337deg) brightness(105%) contrast(108%)',
    '#33965b': 'invert(50%) sepia(25%) saturate(982%) hue-rotate(91deg) brightness(92%) contrast(91%)',
    '#86c66c': 'invert(72%) sepia(51%) saturate(352%) hue-rotate(58deg) brightness(90%) contrast(90%)',
    '#c3a5f5': 'invert(80%) sepia(51%) saturate(3224%) hue-rotate(203deg) brightness(103%) contrast(92%)',
    '#ffff77': 'invert(95%) sepia(10%) saturate(2062%) hue-rotate(1deg) brightness(108%) contrast(101%)',
    '#ac7a58': 'invert(59%) sepia(8%) saturate(2156%) hue-rotate(341deg) brightness(85%) contrast(86%)',
    '#ff7789': 'invert(51%) sepia(17%) saturate(1640%) hue-rotate(304deg) brightness(114%) contrast(101%)',
    '#49bb7e': 'invert(63%) sepia(25%) saturate(879%) hue-rotate(95deg) brightness(96%) contrast(87%)',
    '#46d8cb': 'invert(68%) sepia(90%) saturate(302%) hue-rotate(121deg) brightness(93%) contrast(90%)',
    '#2eadff': 'invert(56%) sepia(41%) saturate(3098%) hue-rotate(181deg) brightness(104%) contrast(105%)',
    '#acbe99': 'invert(83%) sepia(13%) saturate(525%) hue-rotate(47deg) brightness(92%) contrast(76%)',
    '#c79679': 'invert(83%) sepia(13%) saturate(525%) hue-rotate(47deg) brightness(92%) contrast(76%)',
    '#5e5ea4': 'invert(38%) sepia(27%) saturate(1019%) hue-rotate(202deg) brightness(92%) contrast(85%)',
    '#ffb35f': 'invert(75%) sepia(19%) saturate(1336%) hue-rotate(338deg) brightness(101%) contrast(101%)',
    '#525252': 'invert(31%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(95%) contrast(86%)',
    '#329a00': 'invert(42%) sepia(98%) saturate(1929%) hue-rotate(68deg) brightness(91%) contrast(101%)',
    '#fbdf0a': 'invert(91%) sepia(24%) saturate(4904%) hue-rotate(355deg) brightness(110%) contrast(97%)',
    '#be96fa': 'invert(64%) sepia(20%) saturate(916%) hue-rotate(221deg) brightness(97%) contrast(102%)',
    '#fee8c8': 'invert(92%) sepia(12%) saturate(1135%) hue-rotate(319deg) brightness(107%) contrast(99%)',
    '#b496e6': 'invert(68%) sepia(10%) saturate(2409%) hue-rotate(214deg) brightness(96%) contrast(88%)',
    '#abbe99': 'invert(85%) sepia(20%) saturate(319%) hue-rotate(48deg) brightness(83%) contrast(92%)',
    '#bdccff': 'invert(69%) sepia(73%) saturate(172%) hue-rotate(192deg) brightness(101%) contrast(102%)',
    '#4696fa': 'invert(51%) sepia(44%) saturate(2757%) hue-rotate(194deg) brightness(102%) contrast(96%)',
    '#a5e684': 'invert(84%) sepia(33%) saturate(519%) hue-rotate(47deg) brightness(97%) contrast(89%)',
    '#68cf75': 'invert(75%) sepia(95%) saturate(261%) hue-rotate(66deg) brightness(83%) contrast(94%)',
    '#927a30': 'invert(46%) sepia(32%) saturate(812%) hue-rotate(8deg) brightness(97%) contrast(86%)',
    '#8b40a6': 'invert(33%) sepia(18%) saturate(3148%) hue-rotate(247deg) brightness(94%) contrast(93%)',
    '#fff375': 'invert(83%) sepia(47%) saturate(437%) hue-rotate(1deg) brightness(106%) contrast(101%)',
    '#3fb08d': 'invert(56%) sepia(68%) saturate(352%) hue-rotate(110deg) brightness(93%) contrast(87%)',
    '#698948': 'invert(51%) sepia(44%) saturate(432%) hue-rotate(47deg) brightness(88%) contrast(85%)',
    '#bea0f0': 'invert(67%) sepia(40%) saturate(756%) hue-rotate(210deg) brightness(98%) contrast(92%)',
    '#5a771d': 'invert(36%) sepia(99%) saturate(329%) hue-rotate(38deg) brightness(94%) contrast(91%)',
    '#c15151': 'invert(29%) sepia(16%) saturate(3802%) hue-rotate(322deg) brightness(122%) contrast(77%)',
    '#ffbe7f': 'invert(99%) sepia(30%) saturate(7468%) hue-rotate(303deg) brightness(102%) contrast(101%)',
    '#fabe78': 'invert(100%) sepia(98%) saturate(2728%) hue-rotate(305deg) brightness(103%) contrast(96%)',
    '#5c927e': 'invert(57%) sepia(16%) saturate(765%) hue-rotate(106deg) brightness(90%) contrast(84%)',
    '#685b84': 'invert(40%) sepia(7%) saturate(2312%) hue-rotate(218deg) brightness(89%) contrast(84%)',
    '#8a9a74': 'invert(63%) sepia(13%) saturate(665%) hue-rotate(43deg) brightness(92%) contrast(87%)',
    '#473070': 'invert(22%) sepia(16%) saturate(2205%) hue-rotate(220deg) brightness(94%) contrast(96%)',
    '#ab6f72': 'invert(47%) sepia(30%) saturate(545%) hue-rotate(308deg) brightness(97%) contrast(81%)',
    '#63cdfe': 'invert(77%) sepia(18%) saturate(2815%) hue-rotate(170deg) brightness(102%) contrast(99%)',
    '#ff7847': 'invert(66%) sepia(31%) saturate(5034%) hue-rotate(330deg) brightness(101%) contrast(101%)',
    '#53d0d9': 'invert(74%) sepia(12%) saturate(1682%) hue-rotate(135deg) brightness(98%) contrast(88%)',
    '#809141': 'invert(55%) sepia(65%) saturate(362%) hue-rotate(32deg) brightness(85%) contrast(81%)',
    '#c79779': 'invert(66%) sepia(14%) saturate(917%) hue-rotate(340deg) brightness(94%) contrast(90%)',
    '#d7f0c8': 'invert(93%) sepia(28%) saturate(313%) hue-rotate(39deg) brightness(102%) contrast(88%)',
    '#7b7cb8': 'invert(57%) sepia(11%) saturate(1473%) hue-rotate(201deg) brightness(86%) contrast(85%)',
    '#ffeab1': 'invert(88%) sepia(21%) saturate(625%) hue-rotate(337deg) brightness(103%) contrast(105%)',
    '#cdafff': 'invert(82%) sepia(42%) saturate(2835%) hue-rotate(199deg) brightness(100%) contrast(104%)',
    '#fffeff': 'invert(93%) sepia(7%) saturate(622%) hue-rotate(283deg) brightness(108%) contrast(104%)',
    '#8adba2': 'invert(83%) sepia(21%) saturate(604%) hue-rotate(84deg) brightness(92%) contrast(92%)',
    '#456722': 'invert(28%) sepia(100%) saturate(336%) hue-rotate(47deg) brightness(97%) contrast(85%)',
    '#c8aafa': 'invert(68%) sepia(10%) saturate(1458%) hue-rotate(219deg) brightness(104%) contrast(96%)',
    '#92b2bf': 'invert(69%) sepia(10%) saturate(716%) hue-rotate(152deg) brightness(100%) contrast(85%)',
    '#ff4979': 'invert(38%) sepia(58%) saturate(1973%) hue-rotate(320deg) brightness(105%) contrast(101%)',
    '#b99beb': 'invert(70%) sepia(23%) saturate(2318%) hue-rotate(206deg) brightness(102%) contrast(84%)',
    '#905c5c': 'invert(43%) sepia(16%) saturate(1004%) hue-rotate(314deg) brightness(90%) contrast(88%)',
    '#651e29': 'invert(12%) sepia(67%) saturate(1955%) hue-rotate(325deg) brightness(93%) contrast(92%)',
    '#9e8add': 'invert(68%) sepia(10%) saturate(5167%) hue-rotate(206deg) brightness(91%) contrast(89%)',
    '#b2233b': 'invert(18%) sepia(38%) saturate(4969%) hue-rotate(333deg) brightness(96%) contrast(93%)',
    '#c6a9f8': 'invert(74%) sepia(33%) saturate(968%) hue-rotate(203deg) brightness(95%) contrast(104%)',
    '#905d5d': 'invert(42%) sepia(7%) saturate(2251%) hue-rotate(314deg) brightness(92%) contrast(80%)',
    }
    all_squares = Square.objects.filter(map = Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)))
    
    all_squares_list = list(all_squares.values('name', 'color'))
    color_filter_json = json.dumps(color_filter_dict)
        
    html_content = """ 

        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>State Images with Colors</title>
        <style>
            canvas {
                display: block;
                margin: auto;
                border: 1px solid #000;
            }
        </style>
    </head>
    <body>

        <canvas id="canvas" style="background-color:skyblue;"></canvas>
        <div style="text-align: right;" id="colorDisplay">Click on the map to see the nation.</div>

        <script>

            const canvas = document.getElementById('canvas');
            const ctx = canvas.getContext('2d');
            const colorDisplay = document.getElementById('colorDisplay');
            const backgroundColor = 'lightblue';

            // List of images and their corresponding filters
            const images = [
    """

    # Dynamically populate the image data
    for square in all_squares:
        html_content += f""" {{src: '/static/AWSDefcon1App/white_image/MapChart_Map.{square.name}.png', filter: ' {color_filter_dict[square.color]} '}},\n """

    html_content += """
            ];

            // Helper function to load an image
            const loadImage = (src) => {
                return new Promise((resolve) => {
                    const img = new Image();
                    img.onload = () => resolve(img);
                    img.src = src;
                });
            };

            // Set canvas dimensions (optional)
            let maxWidth = 0;
            let maxHeight = 0;

            // Lazy load images when they come into view using IntersectionObserver
            const lazyLoadImages = async (entries, observer) => {
                for (const entry of entries) {
                    if (entry.isIntersecting) {
                        const imgInfo = images[entry.target.dataset.index];
                        const img = await loadImage(imgInfo.src);

                        // Adjust canvas size based on image
                        if (img.width > maxWidth) maxWidth = img.width;
                        if (img.height > maxHeight) maxHeight = img.height;
                        canvas.width = maxWidth;
                        canvas.height = maxHeight;

                        // Draw image with filter
                        ctx.save();
                        ctx.filter = imgInfo.filter;
                        ctx.drawImage(img, 0, 0);
                        ctx.restore();

                        // Unobserve once the image is loaded
                        observer.unobserve(entry.target);
                    }
                }
            };

            // Initialize IntersectionObserver
            const observer = new IntersectionObserver(lazyLoadImages, {
                root: null, // Use the viewport
                rootMargin: '0px',
                threshold: 0.1 // Trigger when 10% of the element is visible
            });

            // Observe each image placeholder
            images.forEach((_, index) => {
                const placeholder = document.createElement('div');
                placeholder.dataset.index = index;
                document.body.appendChild(placeholder);
                observer.observe(placeholder);
            });
        drawImages();
        const colors = {
            'United Kingdom': '#FF4777',
            'Soviet Union': '#A2101E',
            'Italy': '#56A151',
            'Second Brazilian Republic': '#60BA51',
            'Sultanate of Aussa': '#4d0019',
            'Turkey': '#C8E9B4',
            'Norway': '#623C3A',
            'Iraq': '#E6927F',
            'Saudi Arabia': '#DDF7C6',
            'United States': '#559FFF',
            'Albania': '#C33A84',
            'Dominion of Canada': '#983D32',
            'France': '#4892FF',
            'Kingdom of Hungary': '#FFA27E',
            'China': '#DEE39A',
            'Chile': '#C9818A',
            'Peru': '#fff6ff',
            'British Raj': '#C80D09',
            'Spain': '#FFFF77',
            'Kingdom of Greece': '#79e8ff',
            'Lithuania': '#ffffA0',
            'Mexico': '#85C56B',
            'Ethiopia': '#C3A4F4',
            'Romania': '#ffff73',
            'Portugal': '#319358',
            'Bhutan': '#AA7857',
            'Poland': '#FF7487',
            'Australia': '#48B97C',
            'Czechoslovakia': '#44d7c8',
            'Sweden': '#29ADFF',
            'Venezuela': '#AABB98',
            'Yugoslavia': '#5D5DA1',
            'Netherlands': '#FCAE5D',
            'German Reich': '#525252',
            'Bulgaria': '#329700',
            'Belgium': '#FBDD08',
            'South Africa': '#BD95F9',
            'Philippines': '#B395E6',
            'Uruguay': '#A9BD97',
            'Argentina': '#BCCCFF',
            'Republic of Paraguay': '#4695F9',
            'Mengkukuo': '#A3E381',
            'Japan': '#FDE7C4',
            'Ireland': '#66CD75',
            'Costa Rica': '#91792F',
            'Cuba': '#8C40A7',
            'Colombia': '#AABB98',
            'Sinkiang': '#3EAE8B',
            'Yunnan': '#688947',
            'Dominican Republic': '#BA9EEF',
            'Mongolia': '#58751C',
            'Switzerland': '#BE4F4D',
            'Ecuador': '#FFBD7C',
            'El Salvador': '#F8BF78',
            'Iran': '#5C927E',
            'Xibei San Ma': '#695A87',
            'Denmark': '#AABB98',
            'Guangxi Clique': '#899A73',
            'Guatemala': '#46306D',
            'Haiti': '#AA6E71',
            'Finland': '#ffffff',
            'Estonia': '#60CDFD',
            'Manchukuo': '#FF7844',
            'Afghanistan': '#55CED6',
            'Honduras': '#7E8F3F',
            'Iceland': '#C79677',
            'Siam': '#D5EFC5',
            'Dutch East Indies': '#FFAF5D',
            'Latvia': '#7A7AB4',
            'Bolivian Republic': '#FFE6AF',
            'Liberia': '#CCAEFF',
            'Austria': '#FFFDFF',
            'Luxembourg': '#8BD9A1',
            'Tibet': '#446520',
            'Nepal': '#C6A8F9',
            'Nicaragua': '#90B1BE',
            'British Malaya': '#FF4776',
            'New Zealand': '#B69AEA',
            'Oman': '#92625D',
            'Shanxi': '#601C27',
            'Panama': '#9C89DC',
            'Communist China': '#A92137',
            'Tannu Tuva': '#C3A8F6',
            'Yemen': '#8D5F5C',
        }

        function rgbToHex(r, g, b) {
            return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1).toUpperCase();
        }

        function getColorAtPixel(event) {
            const rect = canvas.getBoundingClientRect();
            const scaleX = canvas.width / rect.width;
            const scaleY = canvas.height / rect.height;
            const x = (event.clientX - rect.left) * scaleX;
            const y = (event.clientY - rect.top) * scaleY;
            const imageData = ctx.getImageData(x, y, 1, 1).data;
            const colorHex = rgbToHex(imageData[0], imageData[1], imageData[2]);
            console.log(colorHex); // Debugging: Logs the color hex code to console
            return colorHex;
        }

        function getNationFromColor(color) {
            for (const [nation, hex] of Object.entries(colors)) {
                // Fix 1: Use strict comparison with the color hex in uppercase
                if (hex.toUpperCase() === color) {
                    return nation;
                }
            }
            return "the border"; // This means no matching color was found
        }

        canvas.addEventListener('click', (event) => {
            const color = getColorAtPixel(event);
            const nation = getNationFromColor(color);
            colorDisplay.textContent = `You clicked on ${nation}`;
        });
        </script>
        <div class="how-to-play-widget">
            <button class="how-to-play-button">How to Play</button>
            <div class="how-to-play-content">
                <p style = "color: black">If your coming back after a while, go to the announcement page to see what you missed. Here you can see the map of the world. At the top of the screen, players will find several tabs such as Map, Ask For Aid, Wars, and more. These tabs provide different functionalities and options to manage your nation and its interactions with others.</p>
        </div>
  </div>
    """
    file_path = "AWSDefcon1App/templates/AWSDefcon1App/JSMap.html"
    return render(request, "AWSDefcon1App/JSMap.html",{'html_content': html_content ,"game_id":game_id})        
        
@login_required(login_url = 'login')
def diplomacy(request,game_id):
    return render(request, 'AWSDefcon1App/diplomacy.html', {'game_id':game_id})

@login_required(login_url = 'login')
def makealliance(request,game_id):
    user = request.user
    player = Nations.objects.get(game = game_id, user = request.user)
    if request.method == 'POST':
        '''
        g = 0
        allied_nations = Nations.objects.filter(game = game_id, alliance_name = Nations.objects.get(user = request.user, game = game_id).alliance_name)
        unallied_nations = Nations.objects.filter(game=game_id, alliance_name='').order_by('?')[:1]
        for allied_nation in allied_nations:
            for unallied_nation in unallied_nations:
                g += 1
                if unallied_nation.friendlyness != 1:
                    chance = random.randint(1,unallied_nation.friendlyness + 1)
                if chance == 1 or unallied_nation.friendlyness == 1:
                    player_nation = unallied_nation
                    player_nation.alliance_name = Nations.objects.get(user=request.user,game_id = game_id).alliance_name
                    player_nation.friendlyness = 10
                    player_nation.save()
                    war = War.objects.filter(nation1 = player_nation).delete()
                    war = War.objects.filter(nation2 = player_nation).delete()
                    announcements = Announcements.objects.create(text =f"{unallied_nation.name} has accepted {allied_nation.name}'s invitation to the {allied_nation.alliance_name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))

                if g == len(allied_nations):
                    break
        ''' 
        if player.requests < 1:
          return HttpResponseBadRequest("You are out of diplomatic requests. Please click the back button to return to the game")
        player.requests -= 1
        player.save()
        selected_nation = request.POST.get('selected_nation')
        yesman = False
        accepting_nation = request.POST.get('accepting_nation')
        if accepting_nation:
            player_nation = Nations.objects.get(user=request.user,game_id = game_id)
            accepting_nation = MakeAlliance.objects.filter(nation1__name = accepting_nation).first()
            player_nation.alliance_name = accepting_nation.nation1.alliance_name
            accepting_nation.delete()
            accepting_nation = request.POST.get('accepting_nation')
            accepting_nation = Nations.objects.get(game = game_id, name = request.POST.get('accepting_nation'))
            war = War.objects.filter(nation1__alliance_name = accepting_nation.alliance_name, nation2 = player_nation)
            war.delete()
            war = War.objects.filter(nation2__alliance_name = accepting_nation.alliance_name, nation1 = player_nation)
            war.delete()
            player_nation.save()
        elif not selected_nation == "":
            nation2 = Nations.objects.get(name=selected_nation, game=game_id)
            selected_nation_alliance = MakeAlliance.objects.get_or_create(nation1 = Nations.objects.get(user=request.user, game=game_id), nation2 = Nations.objects.get(name=selected_nation, game=game_id))    
            selected_nation_alliance = MakeAlliance.objects.get(nation1 = Nations.objects.get(user=request.user, game=game_id), nation2 = Nations.objects.get(name=selected_nation, game=game_id))    
  
            if nation2.player_number > 7 and nation2.alliance_name == None or nation2.alliance_name == '':
              if nation2.friendlyness != 1:
                  chance = random.randint(1,nation2.friendlyness + 1)
              if chance == 1 or nation2.friendlyness == 1:
                  player_nation = Nations.objects.get(name=selected_nation, game=game_id)
                  player_nation.alliance_name = Nations.objects.get(user=request.user,game_id = game_id).alliance_name
                  player_nation.friendlyness = 10
                  player_nation.save()
                  war = War.objects.filter(nation1 = player_nation).delete()
                  war = War.objects.filter(nation2 = player_nation).delete()
                  announcements = Announcements.objects.create(text =f"{nation2.name} has accepted {Nations.objects.get(user=request.user,game_id = game_id).name}'s invitation to the {Nations.objects.get(user=request.user,game_id = game_id).alliance_name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                  yesman = True
                  selected_nation_alliance.delete()

            elif nation2.player_number > 7 and nation2.alliance_name != None or nation2.alliance_name != '':
              chance = random.randint(1,nation2.friendlyness + 5)
              if chance == 1:
                player_nation = Nations.objects.get(name=selected_nation, game=game_id)
                player_nation.alliance_name = Nations.objects.get(user=request.user,game_id = game_id).alliance_name
                player_nation.friendlyness = 10
                player_nation.save()
                war = War.objects.filter(nation1 = player_nation).delete()
                war = War.objects.filter(nation2 = player_nation).delete()
                announcements = Announcements.objects.create(text =f"{nation2.name} has accepted {Nations.objects.get(user=request.user,game_id = game_id).name}'s invitation to the {Nations.objects.get(user=request.user,game_id = game_id).alliance_name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
                yesman = True   
                selected_nation_alliance.delete()

            if yesman:
                nations = Nations.objects.filter(game=game_id)
                for nation in nations:
                    if nation.friendlyness == 0 or nation.friendlyness < 1:
                        nation.friendlyness = 1
                user = request.user.username
                # Get the player's nation
                playernation = Nations.objects.filter(game=game_id, user=request.user).first()
                if playernation and playernation.alliance_name:
                    knownnations = Nations.objects.filter(game=game_id, alliance_name=playernation.alliance_name)
                else:
                    knownnations = [playernation] if playernation else []
                return render(request, "AWSDefcon1App/game.html", {"nations": nations, "user": user, "game_id": game_id, "knownnations":knownnations})

  
    playernation = Nations.objects.filter(game=game_id, user=request.user).first()
    if playernation and playernation.alliance_name:
        knownnations = Nations.objects.filter(game=game_id).exclude(alliance_name=playernation.alliance_name).exclude(user = User.objects.get(username = "loser"))
    else:
        knownnations = Nations.objects.filter(game=game_id).exclude(user=request.user).exclude(user = User.objects.get(username = "loser"))
    playernation = Nations.objects.get(user=request.user, game=game_id)
    alliances = MakeAlliance.objects.filter(nation2__user=request.user)
    user = request.user
    player = Nations.objects.get(game = game_id, user = user)
    requesters = player.requests
    return render(request, 'AWSDefcon1App/makealliance.html', {'game_id': game_id, 'knownnations': knownnations,'alliances': alliances, 'playernation': playernation, 'requesters':requesters})

@login_required(login_url='login')
def war(request,game_id):
    if request.method == 'POST':
        '''
        eligible_nations = Nations.objects.exclude(user__username__in=["closed", "empty", "loser"])
        rand_nation1 = random.choice(eligible_nations)
        eligible_nations_2 = eligible_nations.filter(game = rand_nation1.game).exclude(id=rand_nation1.id)
        rand_nation2 = random.choice(eligible_nations_2)
        war, created = War.objects.get_or_create(nation1=rand_nation1, nation2=rand_nation2)
        announcements = Announcements.objects.create(text =f"{rand_nation1.name} has declared war on {rand_nation2.name}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        '''
        selected_nation = request.POST.get('selected_nation')
        if selected_nation:
            selected_nation = War.objects.get_or_create(nation1 = Nations.objects.get(user=request.user, game=game_id), nation2 = Nations.objects.get(name=selected_nation, game=game_id))
        playernation = Nations.objects.get(user=request.user, game=game_id)
        wars = War.objects.filter(nation1__game=game_id) | War.objects.filter(nation2__game=game_id)
        announcements = Announcements.objects.create(text =f"{playernation.name} has declared war on {request.POST.get('selected_nation')}", start_time = datetime.now(), game = Games.objects.get(id = game_id))
        return render(request, 'AWSDefcon1App/current_wars.html', {'wars': wars, 'playernation': playernation, 'game_id':game_id})
    # Get the player's nation
    playernation = Nations.objects.filter(game=game_id, user=request.user).first()
    playernationt = playernation.alliance_name
    allies = Nations.objects.filter(game = game_id , alliance_name = playernationt)
    wars = War.objects.filter(nation1__game=game_id) | War.objects.filter(nation2__game=game_id)
    if playernation and playernation.alliance_name:
        knownnations = Nations.objects.filter(game=game_id).exclude(alliance_name=playernation.alliance_name).exclude(user = User.objects.get(username = "loser"))
    else:
        knownnations = Nations.objects.filter(game=game_id).exclude(user=request.user).exclude(user = User.objects.get(username = "loser"))
    
    return render(request, 'AWSDefcon1App/war.html', {'game_id': game_id, 'knownnations': knownnations, "allies":allies})
@login_required(login_url='login')
def send(request,game_id):
    PlayerAAA = Nations.objects.get(game=game_id, user=request.user)
    if request.method == 'POST':
        selected_nation = request.POST.get('selected_nation')
        send_type = request.POST.get('send_type')
        amount = int(request.POST.get('amount'))
        amount = amount/100
        if amount < 0:
          amount = amount * -1
        playernation = Nations.objects.get(user=request.user, game=game_id)
        reciver_nation = Nations.objects.get(game=game_id,name=selected_nation)
        if int(send_type) == 1:
            if amount > playernation.divisions:
                amount = playernation.divisions
            playernation.divisions -= amount*playernation.divisions
            reciver_nation.divisions += amount*playernation.divisions
            reciver_nation.friendlyness -= amount*10
            print(amount*playernation.divisions/100)
            playernation.save()
            reciver_nation.save()
        if int(send_type) == 2:
            if amount > playernation.planes:
                amount = playernation.planes
            playernation.planes -= amount * playernation.planes
            reciver_nation.planes += amount*playernation.planes
            reciver_nation.friendlyness -= amount*10
            print(amount*playernation.planes/100)
            playernation.save()
            reciver_nation.save()
        if int(send_type) == 3:
            if amount > playernation.boats:
                amount = playernation.boats
            playernation.boats -= amount*playernation.boats
            reciver_nation.boats += amount*playernation.boats
            reciver_nation.friendlyness -= amount*10
            print(amount*playernation.boats/100)
            playernation.save()
            reciver_nation.save()
        playernation.save()
        reciver_nation.save()
    

    knownnations = Nations.objects.filter(game=game_id).exclude(user=request.user).exclude(user = User.objects.get(username = "loser"))
    nations = Nations.objects.filter(game=game_id)
    for nation in nations:
        if nation.friendlyness < 1:
            nation.friendlyness = 1
    user = request.user.username
    # Get the player's nation
    playernation = Nations.objects.filter(game=game_id, user=request.user).first()
    allies = Nations.objects.filter(game=game_id, alliance_name=playernation.alliance_name)

    return render(request, 'AWSDefcon1App/send.html', {'game_id': game_id, 'knownnations': knownnations, 'PlayerAAA':PlayerAAA, 'allies':allies})


@login_required(login_url='login')
def current_wars(request,game_id):
    playernation = Nations.objects.get(user=request.user, game=game_id)
    playernationt = playernation.alliance_name
    allies = Nations.objects.filter(game = game_id , alliance_name = playernationt)
    wars = War.objects.filter(nation1__game=game_id) | War.objects.filter(nation2__game=game_id)
    if request.method == 'POST':
        winner = request.POST.get('winner')
        if winner:
            loser = Nations.objects.get(user=request.user,game_id = game_id)
            war = War.objects.get(nation1__name = winner, nation2 = loser)
            winner = Nations.objects.get(name = winner ,game_id = game_id)
            winner.states += loser.states
            winner.boats += loser.boats
            winner.planes += loser.planes
            winner.points += loser.points
            winner.nukes += loser.nukes



            # Save the changes to the winner
            winner.save()
            loser.user = User.objects.get(username='loser')
            loser.states = 0
            loser.divisions = 0
            loser.boats = 0
            loser.planes = 0
            loser.alliance_name = ""
            loser.points = 0
            loser.nuke_time = 0
            loser.nukes = 0
            loser.save()
            player_number = loser.player_number
            game = Games.objects.get(id= game_id)
            player_field_name = f"player{player_number}"
            game_instance = Games.objects.get(id=game_id)
            game_instance.player_field_name = User.objects.get(username='loser')
            game_instance.save()
            maper = Map.objects.get(number=game_id, game = Games.objects.get(id=game_id))
            enemy_squares = Square.objects.filter(map=maper, owner=loser.name)
            print("Number of enemy squares:", len(enemy_squares))
            for square in enemy_squares:
                square.owner = winner.name
                color = colors.get(winner.name)
                square.color = color
                square.save()

            return HttpResponseRedirect(reverse("index"))

    else:
        return render(request, 'AWSDefcon1App/current_wars.html', {'wars': wars, 'playernation': playernation, "game_id":game_id, "allies":allies})

@login_required
def map(request, game_id):
    color_filter_dict = {
        '#4892FF': 'invert(49%) sepia(76%) saturate(1792%) hue-rotate(196deg) brightness(100%) contrast(103%)',
        '#ff4879': 'invert(44%) sepia(70%) saturate(2984%) hue-rotate(318deg) brightness(101%) contrast(102%)',
        '#a3101f': 'invert(13%) sepia(96%) saturate(5796%) hue-rotate(350deg) brightness(65%) contrast(92%)',
        '#56a552': 'invert(52%) sepia(7%) saturate(2676%) hue-rotate(69deg) brightness(105%) contrast(99%)',
        '#62bd52': 'invert(63%) sepia(55%) saturate(456%) hue-rotate(65deg) brightness(92%) contrast(88%)',
        '#79ebff': 'invert(81%) sepia(10%) saturate(2513%) hue-rotate(163deg) brightness(105%) contrast(103%)',
        '#4d0019': 'invert(11%) sepia(68%) saturate(2762%) hue-rotate(320deg) brightness(73%) contrast(112%)',
        '#c7e9b4': 'invert(90%) sepia(18%) saturate(459%) hue-rotate(49deg) brightness(101%) contrast(86%)',
        '#623c3c': 'invert(24%) sepia(7%) saturate(5090%) hue-rotate(314deg) brightness(69%) contrast(69%)',
        '#e79481': 'invert(61%) sepia(38%) saturate(513%) hue-rotate(323deg) brightness(103%) contrast(81%)',
        '#def7c6': 'invert(93%) sepia(10%) saturate(818%) hue-rotate(44deg) brightness(106%) contrast(94%)',
        '#57a1ff': 'invert(61%) sepia(39%) saturate(3550%) hue-rotate(191deg) brightness(100%) contrast(104%)',
        '#ffffff': 'invert(100%) sepia(0%) saturate(0%) hue-rotate(171deg) brightness(107%) contrast(106%)',
        '#c23b85': 'invert(35%) sepia(16%) saturate(7490%) hue-rotate(301deg) brightness(82%) contrast(83%)',
        '#9b3e33': 'invert(24%) sepia(33%) saturate(4109%) hue-rotate(344deg) brightness(83%) contrast(75%)',
        '#4993ff': 'invert(49%) sepia(76%) saturate(1792%) hue-rotate(196deg) brightness(100%) contrast(103%)',
        '#ffa47f': 'invert(74%) sepia(49%) saturate(761%) hue-rotate(311deg) brightness(106%) contrast(101%)',
        '#dfe5a0': 'invert(96%) sepia(97%) saturate(352%) hue-rotate(5deg) brightness(94%) contrast(90%)',
        '#ca828b': 'invert(62%) sepia(26%) saturate(512%) hue-rotate(303deg) brightness(88%) contrast(98%)',
        '#fff6ff': 'invert(100%) sepia(20%) saturate(3203%) hue-rotate(192deg) brightness(103%) contrast(103%)',
        '#ffb25f': 'invert(68%) sepia(81%) saturate(387%) hue-rotate(333deg) brightness(101%) contrast(101%)',
        '#c80a0a': 'invert(14%) sepia(57%) saturate(4472%) hue-rotate(349deg) brightness(114%) contrast(113%)',
        '#ffff79': 'invert(96%) sepia(99%) saturate(624%) hue-rotate(341deg) brightness(107%) contrast(103%)',
        '#ffff9b': 'invert(99%) sepia(20%) saturate(2017%) hue-rotate(337deg) brightness(105%) contrast(108%)',
        '#33965b': 'invert(50%) sepia(25%) saturate(982%) hue-rotate(91deg) brightness(92%) contrast(91%)',
        '#86c66c': 'invert(72%) sepia(51%) saturate(352%) hue-rotate(58deg) brightness(90%) contrast(90%)',
        '#c3a5f5': 'invert(80%) sepia(51%) saturate(3224%) hue-rotate(203deg) brightness(103%) contrast(92%)',
        '#ffff77': 'invert(95%) sepia(10%) saturate(2062%) hue-rotate(1deg) brightness(108%) contrast(101%)',
        '#ac7a58': 'invert(59%) sepia(8%) saturate(2156%) hue-rotate(341deg) brightness(85%) contrast(86%)',
        '#ff7789': 'invert(51%) sepia(17%) saturate(1640%) hue-rotate(304deg) brightness(114%) contrast(101%)',
        '#49bb7e': 'invert(63%) sepia(25%) saturate(879%) hue-rotate(95deg) brightness(96%) contrast(87%)',
        '#46d8cb': 'invert(68%) sepia(90%) saturate(302%) hue-rotate(121deg) brightness(93%) contrast(90%)',
        '#2eadff': 'invert(56%) sepia(41%) saturate(3098%) hue-rotate(181deg) brightness(104%) contrast(105%)',
        '#acbe99': 'invert(83%) sepia(13%) saturate(525%) hue-rotate(47deg) brightness(92%) contrast(76%)',
        '#c79679': 'invert(83%) sepia(13%) saturate(525%) hue-rotate(47deg) brightness(92%) contrast(76%)',
        '#5e5ea4': 'invert(38%) sepia(27%) saturate(1019%) hue-rotate(202deg) brightness(92%) contrast(85%)',
        '#ffb35f': 'invert(75%) sepia(19%) saturate(1336%) hue-rotate(338deg) brightness(101%) contrast(101%)',
        '#525252': 'invert(31%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(95%) contrast(86%)',
        '#329a00': 'invert(42%) sepia(98%) saturate(1929%) hue-rotate(68deg) brightness(91%) contrast(101%)',
        '#fbdf0a': 'invert(91%) sepia(24%) saturate(4904%) hue-rotate(355deg) brightness(110%) contrast(97%)',
        '#be96fa': 'invert(64%) sepia(20%) saturate(916%) hue-rotate(221deg) brightness(97%) contrast(102%)',
        '#fee8c8': 'invert(92%) sepia(12%) saturate(1135%) hue-rotate(319deg) brightness(107%) contrast(99%)',
        '#b496e6': 'invert(68%) sepia(10%) saturate(2409%) hue-rotate(214deg) brightness(96%) contrast(88%)',
        '#abbe99': 'invert(85%) sepia(20%) saturate(319%) hue-rotate(48deg) brightness(83%) contrast(92%)',
        '#bdccff': 'invert(69%) sepia(73%) saturate(172%) hue-rotate(192deg) brightness(101%) contrast(102%)',
        '#4696fa': 'invert(51%) sepia(44%) saturate(2757%) hue-rotate(194deg) brightness(102%) contrast(96%)',
        '#a5e684': 'invert(84%) sepia(33%) saturate(519%) hue-rotate(47deg) brightness(97%) contrast(89%)',
        '#68cf75': 'invert(75%) sepia(95%) saturate(261%) hue-rotate(66deg) brightness(83%) contrast(94%)',
        '#927a30': 'invert(46%) sepia(32%) saturate(812%) hue-rotate(8deg) brightness(97%) contrast(86%)',
        '#8b40a6': 'invert(33%) sepia(18%) saturate(3148%) hue-rotate(247deg) brightness(94%) contrast(93%)',
        '#fff375': 'invert(83%) sepia(47%) saturate(437%) hue-rotate(1deg) brightness(106%) contrast(101%)',
        '#3fb08d': 'invert(56%) sepia(68%) saturate(352%) hue-rotate(110deg) brightness(93%) contrast(87%)',
        '#698948': 'invert(51%) sepia(44%) saturate(432%) hue-rotate(47deg) brightness(88%) contrast(85%)',
        '#bea0f0': 'invert(67%) sepia(40%) saturate(756%) hue-rotate(210deg) brightness(98%) contrast(92%)',
        '#5a771d': 'invert(36%) sepia(99%) saturate(329%) hue-rotate(38deg) brightness(94%) contrast(91%)',
        '#c15151': 'invert(29%) sepia(16%) saturate(3802%) hue-rotate(322deg) brightness(122%) contrast(77%)',
        '#ffbe7f': 'invert(99%) sepia(30%) saturate(7468%) hue-rotate(303deg) brightness(102%) contrast(101%)',
        '#fabe78': 'invert(100%) sepia(98%) saturate(2728%) hue-rotate(305deg) brightness(103%) contrast(96%)',
        '#5c927e': 'invert(57%) sepia(16%) saturate(765%) hue-rotate(106deg) brightness(90%) contrast(84%)',
        '#685b84': 'invert(40%) sepia(7%) saturate(2312%) hue-rotate(218deg) brightness(89%) contrast(84%)',
        '#8a9a74': 'invert(63%) sepia(13%) saturate(665%) hue-rotate(43deg) brightness(92%) contrast(87%)',
        '#473070': 'invert(22%) sepia(16%) saturate(2205%) hue-rotate(220deg) brightness(94%) contrast(96%)',
        '#ab6f72': 'invert(47%) sepia(30%) saturate(545%) hue-rotate(308deg) brightness(97%) contrast(81%)',
        '#63cdfe': 'invert(77%) sepia(18%) saturate(2815%) hue-rotate(170deg) brightness(102%) contrast(99%)',
        '#ff7847': 'invert(66%) sepia(31%) saturate(5034%) hue-rotate(330deg) brightness(101%) contrast(101%)',
        '#53d0d9': 'invert(74%) sepia(12%) saturate(1682%) hue-rotate(135deg) brightness(98%) contrast(88%)',
        '#809141': 'invert(55%) sepia(65%) saturate(362%) hue-rotate(32deg) brightness(85%) contrast(81%)',
        '#c79779': 'invert(66%) sepia(14%) saturate(917%) hue-rotate(340deg) brightness(94%) contrast(90%)',
        '#d7f0c8': 'invert(93%) sepia(28%) saturate(313%) hue-rotate(39deg) brightness(102%) contrast(88%)',
        '#7b7cb8': 'invert(57%) sepia(11%) saturate(1473%) hue-rotate(201deg) brightness(86%) contrast(85%)',
        '#ffeab1': 'invert(88%) sepia(21%) saturate(625%) hue-rotate(337deg) brightness(103%) contrast(105%)',
        '#cdafff': 'invert(82%) sepia(42%) saturate(2835%) hue-rotate(199deg) brightness(100%) contrast(104%)',
        '#fffeff': 'invert(93%) sepia(7%) saturate(622%) hue-rotate(283deg) brightness(108%) contrast(104%)',
        '#8adba2': 'invert(83%) sepia(21%) saturate(604%) hue-rotate(84deg) brightness(92%) contrast(92%)',
        '#456722': 'invert(28%) sepia(100%) saturate(336%) hue-rotate(47deg) brightness(97%) contrast(85%)',
        '#c8aafa': 'invert(68%) sepia(10%) saturate(1458%) hue-rotate(219deg) brightness(104%) contrast(96%)',
        '#92b2bf': 'invert(69%) sepia(10%) saturate(716%) hue-rotate(152deg) brightness(100%) contrast(85%)',
        '#ff4979': 'invert(38%) sepia(58%) saturate(1973%) hue-rotate(320deg) brightness(105%) contrast(101%)',
        '#b99beb': 'invert(70%) sepia(23%) saturate(2318%) hue-rotate(206deg) brightness(102%) contrast(84%)',
        '#905c5c': 'invert(43%) sepia(16%) saturate(1004%) hue-rotate(314deg) brightness(90%) contrast(88%)',
        '#651e29': 'invert(12%) sepia(67%) saturate(1955%) hue-rotate(325deg) brightness(93%) contrast(92%)',
        '#9e8add': 'invert(68%) sepia(10%) saturate(5167%) hue-rotate(206deg) brightness(91%) contrast(89%)',
        '#b2233b': 'invert(18%) sepia(38%) saturate(4969%) hue-rotate(333deg) brightness(96%) contrast(93%)',
        '#c6a9f8': 'invert(74%) sepia(33%) saturate(968%) hue-rotate(203deg) brightness(95%) contrast(104%)',
        '#905d5d': 'invert(42%) sepia(7%) saturate(2251%) hue-rotate(314deg) brightness(92%) contrast(80%)',
        }
    all_squares = Square.objects.filter(map = Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)))
    
    all_squares_list = list(all_squares.values('name', 'color'))
    color_filter_json = json.dumps(color_filter_dict)
            
    html_content = """ 

            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>State Images with Colors</title>
            <style>
                canvas {
                    display: block;
                    margin: auto;
                    border: 1px solid #000;
                }
            </style>
        </head>
        <body>

            <canvas id="canvas" style="background-color:skyblue;"></canvas>
            <div style="text-align: right;" id="colorDisplay">Click on the map to see the nation.</div>

            <script>

                const canvas = document.getElementById('canvas');
                const ctx = canvas.getContext('2d');
                const colorDisplay = document.getElementById('colorDisplay');
                const backgroundColor = 'lightblue';

                // List of images and their corresponding filters
                const images = [
        """

        # Dynamically populate the image data
    for square in all_squares:
        html_content += f""" {{src: '/static/AWSDefcon1App/white_image/MapChart_Map.{square.name}.png', filter: ' {color_filter_dict[square.color]} '}},\n """

    html_content += """
                ];

                // Helper function to load an image
                const loadImage = (src) => {
                    return new Promise((resolve) => {
                        const img = new Image();
                        img.onload = () => resolve(img);
                        img.src = src;
                    });
                };

                // Set canvas dimensions (optional)
                let maxWidth = 0;
                let maxHeight = 0;

                // Lazy load images when they come into view using IntersectionObserver
                const lazyLoadImages = async (entries, observer) => {
                    for (const entry of entries) {
                        if (entry.isIntersecting) {
                            const imgInfo = images[entry.target.dataset.index];
                            const img = await loadImage(imgInfo.src);

                            // Adjust canvas size based on image
                            if (img.width > maxWidth) maxWidth = img.width;
                            if (img.height > maxHeight) maxHeight = img.height;
                            canvas.width = maxWidth;
                            canvas.height = maxHeight;

                            // Draw image with filter
                            ctx.save();
                            ctx.filter = imgInfo.filter;
                            ctx.drawImage(img, 0, 0);
                            ctx.restore();

                            // Unobserve once the image is loaded
                            observer.unobserve(entry.target);
                        }
                    }
                };

                // Initialize IntersectionObserver
                const observer = new IntersectionObserver(lazyLoadImages, {
                    root: null, // Use the viewport
                    rootMargin: '0px',
                    threshold: 0.1 // Trigger when 10% of the element is visible
                });

                // Observe each image placeholder
                images.forEach((_, index) => {
                    const placeholder = document.createElement('div');
                    placeholder.dataset.index = index;
                    document.body.appendChild(placeholder);
                    observer.observe(placeholder);
                });
            drawImages();
            const colors = {
                'United Kingdom': '#FF4777',
                'Soviet Union': '#A2101E',
                'Italy': '#56A151',
                'Second Brazilian Republic': '#60BA51',
                'Sultanate of Aussa': '#4d0019',
                'Turkey': '#C8E9B4',
                'Norway': '#623C3A',
                'Iraq': '#E6927F',
                'Saudi Arabia': '#DDF7C6',
                'United States': '#559FFF',
                'Albania': '#C33A84',
                'Dominion of Canada': '#983D32',
                'France': '#4892FF',
                'Kingdom of Hungary': '#FFA27E',
                'China': '#DEE39A',
                'Chile': '#C9818A',
                'Peru': '#fff6ff',
                'British Raj': '#C80D09',
                'Spain': '#FFFF77',
                'Kingdom of Greece': '#79e8ff',
                'Lithuania': '#ffffA0',
                'Mexico': '#85C56B',
                'Ethiopia': '#C3A4F4',
                'Romania': '#ffff73',
                'Portugal': '#319358',
                'Bhutan': '#AA7857',
                'Poland': '#FF7487',
                'Australia': '#48B97C',
                'Czechoslovakia': '#44d7c8',
                'Sweden': '#29ADFF',
                'Venezuela': '#AABB98',
                'Yugoslavia': '#5D5DA1',
                'Netherlands': '#FCAE5D',
                'German Reich': '#525252',
                'Bulgaria': '#329700',
                'Belgium': '#FBDD08',
                'South Africa': '#BD95F9',
                'Philippines': '#B395E6',
                'Uruguay': '#A9BD97',
                'Argentina': '#BCCCFF',
                'Republic of Paraguay': '#4695F9',
                'Mengkukuo': '#A3E381',
                'Japan': '#FDE7C4',
                'Ireland': '#66CD75',
                'Costa Rica': '#91792F',
                'Cuba': '#8C40A7',
                'Colombia': '#AABB98',
                'Sinkiang': '#3EAE8B',
                'Yunnan': '#688947',
                'Dominican Republic': '#BA9EEF',
                'Mongolia': '#58751C',
                'Switzerland': '#BE4F4D',
                'Ecuador': '#FFBD7C',
                'El Salvador': '#F8BF78',
                'Iran': '#5C927E',
                'Xibei San Ma': '#695A87',
                'Denmark': '#AABB98',
                'Guangxi Clique': '#899A73',
                'Guatemala': '#46306D',
                'Haiti': '#AA6E71',
                'Finland': '#ffffff',
                'Estonia': '#60CDFD',
                'Manchukuo': '#FF7844',
                'Afghanistan': '#55CED6',
                'Honduras': '#7E8F3F',
                'Iceland': '#C79677',
                'Siam': '#D5EFC5',
                'Dutch East Indies': '#FFAF5D',
                'Latvia': '#7A7AB4',
                'Bolivian Republic': '#FFE6AF',
                'Liberia': '#CCAEFF',
                'Austria': '#FFFDFF',
                'Luxembourg': '#8BD9A1',
                'Tibet': '#446520',
                'Nepal': '#C6A8F9',
                'Nicaragua': '#90B1BE',
                'British Malaya': '#FF4776',
                'New Zealand': '#B69AEA',
                'Oman': '#92625D',
                'Shanxi': '#601C27',
                'Panama': '#9C89DC',
                'Communist China': '#A92137',
                'Tannu Tuva': '#C3A8F6',
                'Yemen': '#8D5F5C',
            }

            function rgbToHex(r, g, b) {
                return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1).toUpperCase();
            }

            function getColorAtPixel(event) {
                const rect = canvas.getBoundingClientRect();
                const scaleX = canvas.width / rect.width;
                const scaleY = canvas.height / rect.height;
                const x = (event.clientX - rect.left) * scaleX;
                const y = (event.clientY - rect.top) * scaleY;
                const imageData = ctx.getImageData(x, y, 1, 1).data;
                const colorHex = rgbToHex(imageData[0], imageData[1], imageData[2]);
                console.log(colorHex); // Debugging: Logs the color hex code to console
                return colorHex;
            }

            function getNationFromColor(color) {
                for (const [nation, hex] of Object.entries(colors)) {
                    // Fix 1: Use strict comparison with the color hex in uppercase
                    if (hex.toUpperCase() === color) {
                        return nation;
                    }
                }
                return "the border"; // This means no matching color was found
            }

            canvas.addEventListener('click', (event) => {
                const color = getColorAtPixel(event);
                const nation = getNationFromColor(color);
                colorDisplay.textContent = `You clicked on ${nation}`;
            });
            </script>
            <div class="how-to-play-widget">
                <button class="how-to-play-button">How to Play</button>
                <div class="how-to-play-content">
                    <p style = "color: black">If your coming back after a while, go to the announcement page to see what you missed. Here you can see the map of the world. At the top of the screen, players will find several tabs such as Map, Ask For Aid, Wars, and more. These tabs provide different functionalities and options to manage your nation and its interactions with others.</p>
            </div>
    </div>
        """
    
    file_path = "AWSDefcon1App/templates/AWSDefcon1App/JSMap.html"
    return render(request, "AWSDefcon1App/JSMap.html",{'html_content': html_content ,"game_id":game_id})

    
def makegame(request,game_id):
    if request.method == 'GET':
          return render(request, "AWSDefcon1App/makegame.html", {"game_id":game_id})
    if game_id > 6:
      folder_path = 'AWSDefcon1App/static/AWSDefcon1App'
      file_path = f'{folder_path}/map{game_id}.png'
      return render(request, "AWSDefcon1App/map.html",{'file_path': file_path ,"game_id":game_id})

    
    if not User.objects.filter(username='empty').exists():
        user = User.objects.create_user("empty", "emtpyman289666880990@gmail.com", "jkoor8ut09rugho9u069ft-gyyh0j9")
        user = User.objects.create_user("loser", "loserman289666880990@gmail.com", "jkoor8ut09ghy5ho9u069ft-gyyh0j9")
        user.save()
    if not User.objects.filter(username='closed').exists():
      user = User.objects.create_user("closed", "loserman289666880990@gmail.com", "jkoor8ut09ghy5ho9u069ft-gyyh0j9")

    selected_countries = request.POST.getlist('countries')
    
    hard = 1

    if 'UK' in selected_countries:
      user_uk = User.objects.get(username='empty')
    else:
      user_uk = User.objects.get(username='closed')
    
    if 'USA' in selected_countries:
      user_usa = User.objects.get(username='empty')
    else:
      user_usa = User.objects.get(username='closed')
      
    if 'France' in selected_countries:
      user_france = User.objects.get(username='empty')
    else:
      user_france = User.objects.get(username='closed')
    
    if 'USSR' in selected_countries:
      user_ussr = User.objects.get(username='empty')
    else:
      user_ussr = User.objects.get(username='closed')
   
    if 'Germany' in selected_countries:
        user_germany = User.objects.get(username='empty')
    else:
      user_germany = User.objects.get(username='closed')

    if 'Italy' in selected_countries:
        user_italy = User.objects.get(username='empty')
    else:
        user_italy = User.objects.get(username='closed')

    if 'Japan' in selected_countries:
      user_japan = User.objects.get(username='empty')
    else:
      user_japan = User.objects.get(username='closed')

    if 'Cuba' in selected_countries:
      user_cuba = User.objects.get(username='empty')
    else:
      user_cuba = User.objects.get(username='closed')

    if 'Hard' in selected_countries:
      hard = 10

    Games.objects.get_or_create(    id=game_id, player1 = User.objects.get(username='empty') , player2 = User.objects.get(username='empty') , player3 = User.objects.get(username='empty') , player4 = User.objects.get(username='empty') , player5 = User.objects.get(username='empty') , player6 = User.objects.get(username='empty') ,player7 =User.objects.get(username='empty'),player0 =User.objects.get(username='empty'))
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='Cuba',  user = user_cuba,  player_number=0,    states=1,    divisions=80/hard,    boats=200/hard,    planes=4000/hard,    alliance_name='Cuban Pact',    points=1,    nuke_time=8,    nukes=0, attacks = 10, requests = 10) #Player 1
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='United Kingdom',  user = user_uk,  player_number=1,    states=64,    divisions=170/hard,    boats=300/hard,    planes=2000/hard,    alliance_name='Allies',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 2
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='United States',  user = user_usa,  player_number=2,    states=36,    divisions=70/hard,    boats=250/hard,    planes=3000/hard,    alliance_name='The Neutrality Pact',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 3
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='France', user = user_france,   player_number=3,    states=68,    divisions=70/hard,    boats=100/hard,    planes=5000/hard,    alliance_name='Allies',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 4
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='Soviet Union',  user = user_ussr,  player_number=4,    states=152,    divisions=30/hard,    boats=100/hard,    planes=7000/hard,    alliance_name='Comintern',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 5
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='German Reich', user = user_germany,   player_number=5,    states=23,    divisions=570/hard,    boats=200/hard,    planes=5000/hard,    alliance_name='Axis',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 6
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='Italy',   user = user_italy, player_number=6,    states=29,    divisions=320/hard,    boats=150/hard,    planes=4500/hard,    alliance_name='Axis',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 7
    Nations.objects.create(    game=Games.objects.get(id=game_id),    name='Japan',  user = user_japan,  player_number=7,    states=24,    divisions=340/hard,    boats=300/hard,    planes=6500/hard,    alliance_name='Axis',    points=1,    nuke_time=8,    nukes=0, attacks = 5, requests = 10)#Player 8
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Turkey', player_number = 13, states = 21, divisions = 19, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Mexico', player_number = 15, states = 13, divisions = 27, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Spain', player_number = 16, states = 24, divisions = 14, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Poland', player_number = 17, states = 18, divisions = 22, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Australia', player_number = 18, states = 15, divisions = 25, boats = 50, planes = 5000, alliance_name='Allies', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'China', player_number = 19, states = 22, divisions = 18, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Czechoslovakia', player_number = 20, states = 9, divisions = 31, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Belgium', player_number = 21, states = 10, divisions = 30, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Netherlands', player_number = 22, states = 4, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Dominion of Canada', player_number = 23, states = 23, divisions = 17, boats = 50, planes = 5000, alliance_name='Allies', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Austria', player_number = 24, states = 4, divisions = 36, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Sweden', player_number = 25, states = 13, divisions = 27, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'British Raj', player_number = 26, states = 23, divisions = 14, boats = 50, planes = 5000, alliance_name='Allies', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Yugoslavia', player_number = 27, states = 14, divisions = 26, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Finland', player_number = 28, states = 12, divisions = 27, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Portugal', player_number = 23, states = 20, divisions = 20, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Kingdom of Greece', player_number = 30, states = 5, divisions = 33, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Iran', player_number = 31, states = 12, divisions = 28, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Bulgaria', player_number = 32, states = 4, divisions = 36, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Second Brazilian Republic', player_number = 33, states = 31, divisions = 28, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Romania', player_number = 34, states = 11, divisions = 29, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Norway', player_number = 35, states = 11, divisions = 29, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Denmark', player_number = 36, states = 7, divisions = 33, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Switzerland', player_number = 37, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Ethiopia', player_number = 38, states = 10, divisions = 30, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Iraq', player_number = 39, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Kingdom of Hungary', player_number = 40, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'South Africa', player_number = 41, states = 7, divisions = 33, boats = 50, planes = 5000, alliance_name='Allies', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Philippines', player_number = 42, states = 7, divisions = 33, boats = 50, planes = 5000, alliance_name='The Neutrality Pact', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Ireland', player_number = 43, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Guangxi Clique', player_number = 44, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Latvia', player_number = 45, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'New Zealand', player_number = 46, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='Allies', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Mongolia', player_number = 47, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Xibei San Ma', player_number = 48, states = 7, divisions = 33, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Colombia', player_number = 49, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Dutch East Indies', player_number = 50, states = 8, divisions = 32, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Lithuania', player_number = 51, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Albania', player_number = 52, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Argentina', player_number = 53, states = 14, divisions = 34, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'British Malaya', player_number = 54, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='Allies', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Siam', player_number = 55, states = 4, divisions = 36, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Yunnan', player_number = 56, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Chile', player_number = 57, states = 8, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Estonia', player_number = 58, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Sinkiang', player_number = 59, states = 6, divisions = 34, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Afghanistan', player_number = 60, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Venezuela', player_number = 61, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Saudi Arabia', player_number = 62, states = 9, divisions = 31, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Peru', player_number = 63, states = 5, divisions = 35, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Ecuador', player_number = 65, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Dominican Republic', player_number = 66, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Panama', player_number = 67, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Manchukuo', player_number = 68, states = 7, divisions = 33, boats = 50, planes = 5000, alliance_name='Axis', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Tibet', player_number = 69, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Bolivian Republic', player_number = 70, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Haiti', player_number = 71, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Uruguay', player_number = 72, states = 3, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Republic of Paraguay', player_number = 73, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Luxembourg', player_number = 74, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Mengkukuo', player_number = 75, states = 2, divisions = 38, boats = 50, planes = 5000, alliance_name='Axis', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Shanxi', player_number = 76, states = 3, divisions = 37, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Communist China', player_number = 77, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Nepal', player_number = 78, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Yemen', player_number = 79, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Guatemala', player_number = 80, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'El Salvador', player_number = 81, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Honduras', player_number = 82, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Liberia', player_number = 83, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Nicaragua', player_number = 84, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Costa Rica', player_number = 85, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Bhutan', player_number = 86, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Oman', player_number = 87, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Tannu Tuva', player_number = 88, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Sultanate of Aussa', player_number = 89, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )
    Nations.objects.create( game=Games.objects.get(id=game_id), name = 'Iceland', player_number = 90, states = 1, divisions = 39, boats = 50, planes = 5000, alliance_name='', points = 0, nuke_time = 8, nukes = 0, attacks = 2, requests = 4 )

    Map.objects.get_or_create(number=game_id, game = Games.objects.get(id=game_id))
    j = 1

    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Aberdeenshire"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Abkhazia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Abruzzo"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Abu Dhabi"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Acre"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Aden"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sultanate of Aussa"))
    square_instance.name = "Afar"
    square_instance.color = "#4d0019"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Afyon"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Agder"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Akhtubinsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Akmolinsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iraq"))
    square_instance.name = "Al Hajara"
    square_instance.color = "#e79481"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Al Qassim"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Alabama"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Alaska"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Albania"))
    square_instance.name = "Albania"
    square_instance.color = "#c23b85"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Alberta"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Aleppo"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Alexandria"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Hungary"))
    square_instance.name = "Alfold"
    square_instance.color = "#ffa47f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Algerian Desert"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Algiers"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Alma Ata"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Alpes"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Alsace Lorraine"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Altai Krai"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Alto Adige"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amapa"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Amasya"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 1"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 2"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 3"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 4"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 5"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 6"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 7"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazon impassable 8"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Amazonas"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Amur"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Anhui"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Ankara"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Antalya"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Antofagasta"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Aquitaine"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Araucania"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Peru"))
    square_instance.name = "Arequipa"
    square_instance.color = "#fff6ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Arica y Tarapaca"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Arizona"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Arkansas"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Arkhangelsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Armenia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Arunachal Pradesh"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ashkhabad"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Asir Makkah"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Assam"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Astrakhan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Asturias"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Aswan"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Atacama"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"))
    square_instance.name = "Attica"
    square_instance.color = "#79ebff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Lithuania"))
    square_instance.name = "Aukstaitija"
    square_instance.color = "#ffff9b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Auvergne"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ayaguz"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Aysen"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Azerbaijan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iraq"))
    square_instance.name = "Baghdad"
    square_instance.color = "#e79481"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Bahia"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Bahr al Ghazal"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Baja California"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Balakovo"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Bale"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Balta Tiraspol"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Baluchistan"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Bamako"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Banat"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Bechuanaland"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Begemder"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Beijing"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Beja"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Belgorod"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Benghasi"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Benue"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Bessarabia"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bhutan"))
    square_instance.name = "Bhutan"
    square_instance.color = "#ac7a58"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Bialystok"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Bihar"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Birobidzhan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Bismarck"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Blue Nile"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Bobruysk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Bodaybo"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Bohemia"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Bohuslan"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Venezuela"))
    square_instance.name = "Bolivar"
    square_instance.color = "#acbe99"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Bombay"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Borkou Ennedi Tibesti"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Borno"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Bosnia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Bouches du Rhone"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Bourgogne"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Netherlands"))
    square_instance.name = "Brabant"
    square_instance.color = "#ffb35f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Brandenburg"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Bratsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "British Columbia"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "British Guyana"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "British Honduras"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "British Somaliland"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Brittany"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Bryansk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Bucovina"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Bukhara"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bulgaria"))
    square_instance.name = "Burgas"
    square_instance.color = "#329a00"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Burgos"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Burma"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Bursa"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Burundi"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Buryatia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Cairo"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Calabria"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "California"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Cambodia"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Cameroon"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Campania"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Cape"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Carpathian Ruthenia"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Casablanca"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Cataluna"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Ceara"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Philippines"))
    square_instance.name = "Cebu"
    square_instance.color = "#b496e6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Central Australia"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Philippines"))
    square_instance.name = "Central Islands"
    square_instance.color = "#b496e6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"))
    square_instance.name = "Central Macedonia"
    square_instance.color = "#79ebff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Centre"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Centre Sud"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Uruguay"))
    square_instance.name = "Cerro Largo"
    square_instance.color = "#abbe99"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Ceylon"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Chaco Austral"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Republic of Paraguay"))
    square_instance.name = "Chaco Boreal"
    square_instance.color = "#4696fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Chad"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mengkukuo"))
    square_instance.name = "Chahar"
    square_instance.color = "#a5e684"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Champagne"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Changde"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chechnya Ingushetia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chelyabinsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Cherkasy"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chernigov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Chiapas"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Chihuahua"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chita"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Chubut"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Chugoku"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chukchi Peninsula"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chukotka"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Chuvashia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Ciudad Real"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Coahuila"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Colorado"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ireland"))
    square_instance.name = "Connaught"
    square_instance.color = "#68cf75"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Constantine"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Coquilhatville"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Cordoba"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Corsica"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Costa Rica"))
    square_instance.name = "Costa Rica"
    square_instance.color = "#927a30"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Costermansville"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Cote Nord"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Crimea"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Crisana"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Croatia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Cuba"))
    square_instance.name = "Cuba"
    square_instance.color = "#8b40a6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Cumbria"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Colombia"))
    square_instance.name = "Cundinamarca"
    square_instance.color = "#fff375"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Cyprus"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Cyrenaica"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sinkiang"))
    square_instance.name = "Dabancheng"
    square_instance.color = "#3fb08d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Dagestan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Dahomey"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Dalarna"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yunnan"))
    square_instance.name = "Dali"
    square_instance.color = "#698948"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Dalian"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Dalmatia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Damascus"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Dammam"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Danzig"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Deir az Zur"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Delhi"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Derna"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Districts of Ontario"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Diyarbakir"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Dnipropetrovsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Dobrudja"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominican Republic"))
    square_instance.name = "Dominican Republic"
    square_instance.color = "#bea0f0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mongolia"))
    square_instance.name = "Dornod"
    square_instance.color = "#5a771d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Dudinka"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Durango"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sinkiang"))
    square_instance.name = "Dzungaria"
    square_instance.color = "#3fb08d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "East Anglia"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "East Bengal"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "East Hebei"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "East Midlands"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Easter Island"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Eastern Aragon"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Eastern Desert"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Eastern Slovakia"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Eastern Sudetenland"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Switzerland"))
    square_instance.name = "Eastern Swiss Alps"
    square_instance.color = "#c15151"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ecuador"))
    square_instance.name = "Ecuador"
    square_instance.color = "#ffbe7f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Edirne"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "El Agheila"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "El Salvador"))
    square_instance.name = "El Salvador"
    square_instance.color = "#fabe78"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Elisabethville"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Emilia Romagna"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Engels Marxstadt"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"))
    square_instance.name = "Epirus"
    square_instance.color = "#79ebff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Equatorial Africa"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Equatorial Guinea"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Eritrea"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Ermland Masuren"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Espirito Santo"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Extremadura"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Fars"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Fiji"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Finnmark"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Florida"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Formosa"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Franche Comte"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Franken"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "French Guiana"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "French India"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "French Somaliland"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Netherlands"))
    square_instance.name = "Friesland"
    square_instance.color = "#ffb35f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Fujian"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Gabes"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Gabon"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Galicia"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Gambia"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Gannan"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Gansu"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Ganzi"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Gao"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Garissa"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Gavleborg"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Gdynia"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Georgia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Georgia US"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Ghana"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Gibraltar"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Gilan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Gloucestershire"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Goa"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mongolia"))
    square_instance.name = "Gobi"
    square_instance.color = "#5a771d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Goias"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Gojjam"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Golog"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Gomel"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Gorky"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Gotland"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Granada"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Greater London Area"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Denmark"))
    square_instance.name = "Greenland"
    square_instance.color = "#c79679"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Guadalajara"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"))
    square_instance.name = "Guangdong"
    square_instance.color = "#8a9a74"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"))
    square_instance.name = "Guangxi"
    square_instance.color = "#8a9a74"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"))
    square_instance.name = "Guangzhou"
    square_instance.color = "#8a9a74"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Guangzhouwan"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Guapore"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Guarda"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Guatemala"))
    square_instance.name = "Guatemala"
    square_instance.color = "#473070"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Guerrero"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Guinea"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Guizhou"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Gujarat"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Guryev"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Haida Gwaii"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"))
    square_instance.name = "Hainan"
    square_instance.color = "#8a9a74"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Haiti"))
    square_instance.name = "Haiti"
    square_instance.color = "#ab6f72"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Haixi"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Hakkari"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Hamadan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Hame"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Hannover"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Hararghe"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Estonia"))
    square_instance.name = "Harju"
    square_instance.color = "#63cdfe"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Hatay"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Hawaii"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Hebei"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Heilungkiang"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Helgeland"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Henan"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Afghanistan"))
    square_instance.name = "Herat"
    square_instance.color = "#53d0d9"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Herzegovina"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Hessen"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Hinterpommern"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Hokkaido"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Hokuriku"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Netherlands"))
    square_instance.name = "Holland"
    square_instance.color = "#ffb35f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Holstein"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Honduras"))
    square_instance.name = "Honduras"
    square_instance.color = "#809141"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Huangshan"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Hubei"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Hulunbuir"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Hunan"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Hyderabad"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iceland"))
    square_instance.name = "Iceland"
    square_instance.color = "#c79779"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Idaho"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Ile de France"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Illinois"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Illubabor Kaffa"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Indiana"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Indore"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Iowa"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Irkutsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Siam"))
    square_instance.name = "Isan"
    square_instance.color = "#d7f0c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Isfahan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Istanbul"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Istria"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ivanovo"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Ivory Coast"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Iwo Jima"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Izmir"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Izmit"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Jabalpur"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Jalisco"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Jamaica"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Jamtland"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "Java"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Jawf"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Jehol"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Jiangsu"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Jiangxi"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Jiuquan"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Jordan"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Jubaland"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Switzerland"))
    square_instance.name = "Jura Mountains"
    square_instance.color = "#c15151"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Denmark"))
    square_instance.name = "Jylland"
    square_instance.color = "#c79679"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kabardino Balkaria"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Afghanistan"))
    square_instance.name = "Kabul"
    square_instance.color = "#53d0d9"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "Kalimantan"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kalinin"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kalmykia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kaluga"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kamchatka"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Kansai"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Kansas"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Kanto"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Karagandy"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Karakalpakstan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Karas"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kargopol"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Karjala"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Kashmir"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Kassala"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Kastamonu"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Katowice"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Lithuania"))
    square_instance.name = "Kaunas"
    square_instance.color = "#ffff9b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Kayes Koulikoro"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Kayseri"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kazan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Kentucky"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Kerman"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Khabarovsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Khakassia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kharkov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Khartoum"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Khatangsky"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kherson"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Khiva"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Khmelnytskyi"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Khomas"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Khorasan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mongolia"))
    square_instance.name = "Khovd"
    square_instance.color = "#5a771d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mongolia"))
    square_instance.name = "Khovsgol"
    square_instance.color = "#5a771d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Khuzestan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Kielce"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kirensk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Kirin"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kirov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kolyma"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Konigsberg"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Konya"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Koshinetsu"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Kosovo"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kostanay"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kotlas"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Krakow"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Krasnodar"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Krasnoyarsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Kunene"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sinkiang"))
    square_instance.name = "Kunlun Shan"
    square_instance.color = "#3fb08d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Kuopio"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Kurdistan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Kurdufan"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kursk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Latvia"))
    square_instance.name = "Kurzeme"
    square_instance.color = "#7b7cb8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Kuwait"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kuybyshev"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kyiv"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Kymi"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Kyushu"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Kyzyl Orda"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Colombia"))
    square_instance.name = "La Libertad"
    square_instance.color = "#fff375"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bolivian Republic"))
    square_instance.name = "La Paz"
    square_instance.color = "#ffeab1"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Labrador"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Lagos"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Lanark"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Lancashire"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Languedoc"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Siam"))
    square_instance.name = "Lanna"
    square_instance.color = "#d7f0c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Laos"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Lappi"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Latvia"))
    square_instance.name = "Latgale"
    square_instance.color = "#7b7cb8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Lazio"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Lebanon"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ireland"))
    square_instance.name = "Leinster"
    square_instance.color = "#68cf75"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Leningrad"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Leon"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Leopoldville"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "Lesser Sunda Islands"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Liangshan"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Liaoning"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Liaotung"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Liberia"))
    square_instance.name = "Liberia"
    square_instance.color = "#cdafff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Libyan Desert"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Peru"))
    square_instance.name = "Lima"
    square_instance.color = "#fff6ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Limousin"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Lipetsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Lisbon"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Litorale"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Ljubljana"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Lodz"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Loire"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Lombardia"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Peru"))
    square_instance.name = "Loreto"
    square_instance.color = "#fff6ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Los Andes"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Lothian"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Louisiana"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Lourenco Marques"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Austria"))
    square_instance.name = "Lower Austria"
    square_instance.color = "#fffeff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Luanda"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Lublin"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Lucknow"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Luga"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Lusambo"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Luxembourg"))
    square_instance.name = "Luxembourg"
    square_instance.color = "#8adba2"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Philippines"))
    square_instance.name = "Luzon"
    square_instance.color = "#b496e6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Lwow"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Macedonia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Madagascar"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Madinah"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Madras"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Madrid"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Madurai"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Magadan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Magallanes"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Magnitogorsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Malatya"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Malawi"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Mandalay"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Manica e Sofala"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Philippines"))
    square_instance.name = "Manila"
    square_instance.color = "#b496e6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Manitoba"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Maranhao"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Mari El"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Marrakech"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Maryland"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Mato Grosso"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Matrouh"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Maurice"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Mauritania"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Mauritanian Desert"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Mecklenburg"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Lithuania"))
    square_instance.name = "Memel"
    square_instance.color = "#ffff9b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Mendoza"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Mersin"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Mesopotamia"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Colombia"))
    square_instance.name = "Meta"
    square_instance.color = "#fff375"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Mexico City"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Michigan"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Middle Congo"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Midi Pyrenees"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Mikhaylovka"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Mikkeli"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Millerovo"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Minas Gerais"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Philippines"))
    square_instance.name = "Mindanao"
    square_instance.color = "#b496e6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Minnesota"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Minsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Venezuela"))
    square_instance.name = "Miranda"
    square_instance.color = "#acbe99"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Mississippi"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Missouri"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bulgaria"))
    square_instance.name = "Moesia"
    square_instance.color = "#329a00"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Moldova"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Mombasa"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Montana"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Montenegro"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Morava"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Moravia"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Moscow"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Moselland"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iraq"))
    square_instance.name = "Mosul"
    square_instance.color = "#e79481"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Mozyr"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ireland"))
    square_instance.name = "Munster"
    square_instance.color = "#68cf75"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Muntenia"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Murcia"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Murmansk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Mykolaiv"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Mysore"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Tibet"))
    square_instance.name = "Nagqu"
    square_instance.color = "#456722"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Nairobi"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Najiran"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"))
    square_instance.name = "Nanning"
    square_instance.color = "#8a9a74"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Natal"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Navarra"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Navoi"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Nebraska"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Nejd"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Nenets"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Nepal"))
    square_instance.name = "Nepal"
    square_instance.color = "#c8aafa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Nevada"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Nevel"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "New Brunswick"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "New Caledonia"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "New England"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "New Jersey"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "New Mexico"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "New South Wales"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "New York"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Newfoundland"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Tibet"))
    square_instance.name = "Ngari"
    square_instance.color = "#456722"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Nicaragua"))
    square_instance.name = "Nicaragua"
    square_instance.color = "#92b2bf"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Niederbayern"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Niederschlesien"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Niger"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Nikolayevsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Ningxia"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Nord du Quebec"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Nord Pas de Calais"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Nordland"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Normandy"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Norrbotten"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "North Angola"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Malaya"))
    square_instance.name = "North Borneo"
    square_instance.color = "#ff4979"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "North Carolina"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "North Dakota"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "North Darfur"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "New Zealand"))
    square_instance.name = "North Island"
    square_instance.color = "#b99beb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "North Korea"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "North Ossetia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "North Queensland"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "North Sakhalin"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "North Slovenia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "North Transylvania"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "North West Australia"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Albania"))
    square_instance.name = "Northern Epirus"
    square_instance.color = "#c23b85"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Hungary"))
    square_instance.name = "Northern Hungary"
    square_instance.color = "#ffa47f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Northern Ireland"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Northern Kashmir"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Siam"))
    square_instance.name = "Northern Malay"
    square_instance.color = "#d7f0c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Northern Manitoba"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Northern Ontario"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Northern Saskatchewan"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Northern Territory"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Northern Urals"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Northumberland"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Northwest Territories"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Nova Scotia"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Novgorod"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Novosibirsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Nowogrodek"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Nunavut"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Nyanza Rift Valley"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Oaxaca"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Oberbayern"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Oberschlesien"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Odessa"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Ohio"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Okhotsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Okinawa"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Oklahoma"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Olonets"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Oltenia"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Oman"))
    square_instance.name = "Oman"
    square_instance.color = "#905c5c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Omsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Onega"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Opplandene"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Shanxi"))
    square_instance.name = "Ordos"
    square_instance.color = "#651e29"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Oregon"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Orel"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Orenburg"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Orissa"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Oslofjord"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Ostergotland"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Ostmark"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Otjozondjupa"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Ouest du Quebec"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Oulu"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Oyrot Region"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Pais Vasco"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Palestine"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Pamir"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Pampas"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Panama"))
    square_instance.name = "Panama"
    square_instance.color = "#9e8add"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Panama Canal"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Papua"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Para"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Republic of Paraguay"))
    square_instance.name = "Paraguay"
    square_instance.color = "#4696fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Parana"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Estonia"))
    square_instance.name = "Parnu"
    square_instance.color = "#63cdfe"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ecuador"))
    square_instance.name = "Pastaza"
    square_instance.color = "#ffbe7f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Pavlodar"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Uruguay"))
    square_instance.name = "Paysandu"
    square_instance.color = "#abbe99"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Pechora"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"))
    square_instance.name = "Peloponnese"
    square_instance.color = "#79ebff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Pennsylvania"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Penza"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Perm"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Pernambuco"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Peshawar"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Petsamo"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Piaui"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Picardy"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Piemonte"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Plock"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bulgaria"))
    square_instance.name = "Plovdiv"
    square_instance.color = "#329a00"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Poitou"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Polesie"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Poltava"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Porto"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Portuguese Guinea"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Portuguese Timor"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Poznan"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Pskov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Puglia"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Punjab"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Punta Pora"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Pyrenees Atlantiques"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Qatar"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Qingdao"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"))
    square_instance.name = "Qinghai"
    square_instance.color = "#685b84"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Queensland"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Quetta"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Rajahsthan"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Region Mesopotamica"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Rhineland"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Rhodesia"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Rhone"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Latvia"))
    square_instance.name = "Riga"
    square_instance.color = "#7b7cb8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Rio Branco"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Rio de Janeiro"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Rio de Oro"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Rio Grande do Norte"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Rio Grande do Sul"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Rio Negro"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Roslavl"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Rostov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Rub al Khali"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Rwanda"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ryazan"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Rzhev"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Sachsen"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Saguenay"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Saint Lawrence"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Salamanca"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Salekhard"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Salla"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Philippines"))
    square_instance.name = "Samar"
    square_instance.color = "#b496e6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Samsun"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "San Juan y La Rioja"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "San Luis y La Pampa"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Santa Catarina"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bolivian Republic"))
    square_instance.name = "Santa Cruz"
    square_instance.color = "#ffeab1"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Santa Cruz AR"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Santarem"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Chile"))
    square_instance.name = "Santiago"
    square_instance.color = "#ca828b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Sao Paulo"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Saratov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Sardegna"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Saskatchewan"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Savoy"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Schleswig"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Scottish Highlands"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Semipalatinsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Semnan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Senegal"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Serbia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Sevilla"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Communist China"))
    square_instance.name = "Shaanxi"
    square_instance.color = "#b2233b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Shandong"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Shanghai"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Shanxi"))
    square_instance.name = "Shanxi"
    square_instance.color = "#651e29"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Shewa"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Tibet"))
    square_instance.name = "Shigatse"
    square_instance.color = "#456722"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Shikoku"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Albania"))
    square_instance.name = "Shkoder"
    square_instance.color = "#c23b85"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Siam"))
    square_instance.name = "Siam"
    square_instance.color = "#d7f0c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Sichuan"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Sicilia"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Sidamo"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Sidi Ifni"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Sierra Leone"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Sinai"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "Sind"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Malaya"))
    square_instance.name = "Singapore"
    square_instance.color = "#ff4979"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Sirte"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Sistan"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Sivas"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Denmark"))
    square_instance.name = "Sjaelland"
    square_instance.color = "#c79679"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Skane"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Smaland"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Smolensk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Sochi"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Sodermalm"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Bulgaria"))
    square_instance.name = "Sofia"
    square_instance.color = "#329a00"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Sokoto"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Solomon Islands"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Somaliland"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Denmark"))
    square_instance.name = "Sonderjylland"
    square_instance.color = "#c79679"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Sonora"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "South Australia"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "South Carolina"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mengkukuo"))
    square_instance.name = "South Chahar"
    square_instance.color = "#a5e684"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "South Dakota"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "South Darfur"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "South Georgia"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "New Zealand"))
    square_instance.name = "South Island"
    square_instance.color = "#b99beb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "South Korea"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "South Sakhalin"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "South West Angola"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "South West Australia"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "South West England"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Southern Bessarabia"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Southern Indochina"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Southern Ontario"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Southern Sahara"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Southern Serbia"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Southern Slovakia"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Southwest Queensland"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Spanish Africa"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Stalinabad"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Stalingrad"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Stalino"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Stanislawow"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Stanleyville"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Stavropol"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Sudetenland"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Lithuania"))
    square_instance.name = "Suduva"
    square_instance.color = "#ffff9b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Suez"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Shanxi"))
    square_instance.name = "Suiyuan"
    square_instance.color = "#651e29"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "Sulawesi"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "Sumatra"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Sumy"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Manchukuo"))
    square_instance.name = "Sungkiang"
    square_instance.color = "#ff7847"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Surgut"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Netherlands"))
    square_instance.name = "Suriname"
    square_instance.color = "#ffb35f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Sussex"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Sverdlovsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Switzerland"))
    square_instance.name = "Swiss Plateau"
    square_instance.color = "#c15151"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Syktyvkar"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"))
    square_instance.name = "Tabuk"
    square_instance.color = "#def7c6"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Peru"))
    square_instance.name = "Tacna Moquegua"
    square_instance.color = "#fff6ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Taiwan"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sinkiang"))
    square_instance.name = "Taklamakan"
    square_instance.color = "#3fb08d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Tamaulipas"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tambov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Tanganyika"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Tannu Tuva"))
    square_instance.name = "Tannu Tuva"
    square_instance.color = "#c6a9f8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Estonia"))
    square_instance.name = "Tartu"
    square_instance.color = "#63cdfe"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tashauz"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tashkent"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Tasmania"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Tehran"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Telemark"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Tennessee"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Texas"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "The Moluccas"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"))
    square_instance.name = "Thrace"
    square_instance.color = "#79ebff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Thuringen"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Iran"))
    square_instance.name = "Tibriz"
    square_instance.color = "#5c927e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Switzerland"))
    square_instance.name = "Ticino"
    square_instance.color = "#c15151"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Tierra del Fuego"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Tigray"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tikhvin"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Tlemcen"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tobolsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"))
    square_instance.name = "Tocantins"
    square_instance.color = "#62bd52"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Togo"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Tohoku"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Japan"))
    square_instance.name = "Tokai"
    square_instance.color = "#fee8c8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Tombouctou"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tomsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Tonkin"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Toscana"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Trabzon"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Kingdom of Hungary"))
    square_instance.name = "Transdanubia"
    square_instance.color = "#ffa47f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "South Africa"))
    square_instance.name = "Transvaal"
    square_instance.color = "#be96fa"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Romania"))
    square_instance.name = "Transylvania"
    square_instance.color = "#ffff77"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Trentino"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Tripoli"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Tripolitania"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Troms"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Trondelag"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Argentina"))
    square_instance.name = "Tucuman"
    square_instance.color = "#bdccff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tula"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Tunceli"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Tunisia"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Turku"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Austria"))
    square_instance.name = "Tyrol"
    square_instance.color = "#fffeff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Tyumen"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Peru"))
    square_instance.name = "Ucayali"
    square_instance.color = "#fff6ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Udachny"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Udmurtia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ufa"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Uganda"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mongolia"))
    square_instance.name = "Ulaanbaatar"
    square_instance.color = "#5a771d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ulyanovsky"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Austria"))
    square_instance.name = "Upper Austria"
    square_instance.color = "#fffeff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Upper British Columbia"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Upper Nile"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Upper Volta"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Uralsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Uruguay"))
    square_instance.name = "Uruguay"
    square_instance.color = "#abbe99"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sinkiang"))
    square_instance.name = "Urumqi"
    square_instance.color = "#3fb08d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Ust Urt"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Utah"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Uusimaa"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Finland"))
    square_instance.name = "Vaasa"
    square_instance.color = "#ffffff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Valencia"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Valladolid"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Turkey"))
    square_instance.name = "Van"
    square_instance.color = "#c7e9b4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Vancouver Island"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "France"))
    square_instance.name = "Var"
    square_instance.color = "#4993ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Varmland"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Vasterbotten"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sweden"))
    square_instance.name = "Vastergotland"
    square_instance.color = "#2eadff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Veneto"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Veracruz"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Verkhoyansk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Norway"))
    square_instance.name = "Vestlandet"
    square_instance.color = "#623c3c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Victoria"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Latvia"))
    square_instance.name = "Vidzeme"
    square_instance.color = "#7b7cb8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Vinnytsia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Virginia"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Estonia"))
    square_instance.name = "Virumaa"
    square_instance.color = "#63cdfe"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Vitebsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Vlaanderen"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Vladivostok"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "Vojvodina"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Volgodonsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Volkhov"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Vologda"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Austria"))
    square_instance.name = "Vorarlberg"
    square_instance.color = "#fffeff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Voronezh"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Voroshilovgrad"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Vorpommern"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Wales"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Belgium"))
    square_instance.name = "Wallonie"
    square_instance.color = "#fbdf0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Warszawa"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Washington"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Welega"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Ethiopia"))
    square_instance.name = "Wello"
    square_instance.color = "#c3a5f5"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Weser Ems"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yugoslavia"))
    square_instance.name = "West Banat"
    square_instance.color = "#5e5ea4"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "British Raj"))
    square_instance.name = "West Bengal"
    square_instance.color = "#c80a0a"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "West Midlands"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"))
    square_instance.name = "West Papua"
    square_instance.color = "#ffb25f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "West Virginia"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Spain"))
    square_instance.name = "Western Aragon"
    square_instance.color = "#ffff79"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Australia"))
    square_instance.name = "Western Australia"
    square_instance.color = "#49bb7e"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Western Desert"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Western Slovakia"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Switzerland"))
    square_instance.name = "Western Swiss Alps"
    square_instance.color = "#c15151"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Westfalen"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Wilejka"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Wilno"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Wisconsin"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Poland"))
    square_instance.name = "Wolyn"
    square_instance.color = "#ff7789"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "German Reich"))
    square_instance.name = "Wurttemberg"
    square_instance.color = "#525252"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United States"))
    square_instance.name = "Wyoming"
    square_instance.color = "#57a1ff"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Xian"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Xikang"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Yakutsk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Yamalia"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Sinkiang"))
    square_instance.name = "Yarkand"
    square_instance.color = "#3fb08d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Yaroslavl"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yemen"))
    square_instance.name = "Yemen"
    square_instance.color = "#905d5d"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Yeniseisk"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Yorkshire"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Mexico"))
    square_instance.name = "Yucatan"
    square_instance.color = "#86c66c"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"))
    square_instance.name = "Yukon Territory"
    square_instance.color = "#9b3e33"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Yunnan"))
    square_instance.name = "Yunnan"
    square_instance.color = "#698948"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Zambesi"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Portugal"))
    square_instance.name = "Zambezia Mocambique"
    square_instance.color = "#33965b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "United Kingdom"))
    square_instance.name = "Zambia"
    square_instance.color = "#ff4879"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"))
    square_instance.name = "Zaolzie"
    square_instance.color = "#46d8cb"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Zaporozhe"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Italy"))
    square_instance.name = "Zara"
    square_instance.color = "#56a552"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Lithuania"))
    square_instance.name = "Zemaitija"
    square_instance.color = "#ffff9b"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Latvia"))
    square_instance.name = "Zemgale"
    square_instance.color = "#7b7cb8"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Zhejiang"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Zhytomyr"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Soviet Union"))
    square_instance.name = "Zlatoust"
    square_instance.color = "#a3101f"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "Venezuela"))
    square_instance.name = "Zulia"
    square_instance.color = "#acbe99"
    square_instance.save()
    j += 1
    
    square_instance = Square.objects.create(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), number=j, owner = Nations.objects.get(game = game_id, name = "China"))
    square_instance.name = "Zunyi"
    square_instance.color = "#dfe5a0"
    square_instance.save()
    j += 1
    

    j = 1

    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Aberdeenshire')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lothian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Scottish Highlands').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Abkhazia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sochi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabardino Balkaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Abruzzo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Puglia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Campania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lazio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Toscana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Emilia Romagna').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Abu Dhabi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Acre')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 4').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 3').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Aden')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yemen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Najiran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sultanate of Aussa"), name = 'Afar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eritrea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tigray').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wello').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hararghe').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Afyon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ankara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bursa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antalya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Agder')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Telemark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vestlandet').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Akhtubinsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ust Urt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navoi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyzyl Orda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karagandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kostanay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magnitogorsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guryev').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Akmolinsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chelyabinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Omsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pavlodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semipalatinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ayaguz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karagandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kostanay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iraq"), name = 'Al Hajara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuwait').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baghdad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mosul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Damascus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jordan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jawf').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Al Qassim')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuwait').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baghdad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jawf').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tabuk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madinah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nejd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Alabama')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Florida').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia US').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mississippi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Alaska')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yukon Territory').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper British Columbia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Albania"), name = 'Albania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shkoder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Epirus').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Alberta')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northwest Territories').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper British Columbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Columbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saskatchewan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Saskatchewan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Aleppo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hatay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Damascus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lebanon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Alexandria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cairo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Matrouh').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Hungary"), name = 'Alfold')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Hungary').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Carpathian Ruthenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Crisana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vojvodina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Algerian Desert')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Marrakech').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Oro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritanian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tombouctou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Algiers')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Constantine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Casablanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Spanish Africa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Alma Ata')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ayaguz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karagandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyzyl Orda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pamir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Alpes')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bouches du Rhone').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Alsace Lorraine')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luxembourg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moselland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jura Mountains').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franche Comte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Altai Krai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semipalatinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oyrot Region').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khakassia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novosibirsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pavlodar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Alto Adige')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorarlberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trentino').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amapa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Guiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Amasya')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayseri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sivas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Samsun').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kastamonu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ankara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 1')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 2')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 3')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Acre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 4')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Acre').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 5')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guapore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 6')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 7')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Branco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazon impassable 8')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Branco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suriname').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amapa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Guyana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Guiana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Amazonas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 1').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 2').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 3').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 4').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 5').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 6').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 7').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Branco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Acre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guapore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Amur')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hulunbuir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Birobidzhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nikolayevsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Anhui')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Huangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangsu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Ankara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amasya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kastamonu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmit').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bursa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afyon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Antalya')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mersin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afyon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmir').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Antofagasta')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tucuman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Atacama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Los Andes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arica y Tarapaca').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Aquitaine')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pyrenees Atlantiques').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Limousin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Araucania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aysen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chubut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santiago').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Peru"), name = 'Arequipa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lima').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tacna Moquegua').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Arica y Tarapaca')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antofagasta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tacna Moquegua').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Arizona')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Mexico').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Utah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'California').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baja California').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Arkansas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oklahoma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Louisiana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Arkhangelsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kargopol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kotlas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pechora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nenets').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Armenia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Azerbaijan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Van').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Arunachal Pradesh')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Assam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bhutan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ashkhabad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ust Urt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashauz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bukhara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khorasan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tehran').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Asir Makkah')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madinah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nejd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Najiran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yemen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Assam')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bhutan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arunachal Pradesh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Astrakhan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guryev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalmykia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Asturias')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Galicia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valladolid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pais Vasco').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Aswan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cairo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Atacama')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santiago').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antofagasta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tucuman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Juan y La Rioja').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"), name = 'Attica')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peloponnese').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Epirus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Macedonia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Lithuania"), name = 'Aukstaitija')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaunas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Auvergne')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Languedoc').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bourgogne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre Sud').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Limousin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ayaguz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karagandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semipalatinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dzungaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alma Ata').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Aysen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Araucania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz AR').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chubut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magallanes').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Azerbaijan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dagestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Armenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gilan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iraq"), name = 'Baghdad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuwait').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Hajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mosul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khuzestan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Bahia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piaui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pernambuco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Espirito Santo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Bahr al Ghazal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanleyville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Darfur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Baja California')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'California').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonora').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Balakovo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Engels Marxstadt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuybyshev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Bale')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jubaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hararghe').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Balta Tiraspol')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Odessa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vinnytsia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Baluchistan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sind').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Quetta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sistan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Bamako')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivory Coast').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayes Koulikoro').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Banat')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Crisana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oltenia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Bechuanaland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khomas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cape').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transvaal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhodesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Otjozondjupa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Begemder')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gojjam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wello').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eritrea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tigray').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kassala').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Beijing')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hebei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Hebei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Chahar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Beja')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lisbon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sevilla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santarem').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Belgorod')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kursk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kharkov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voroshilovgrad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Benghasi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Derna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sirte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cyrenaica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Agheila').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Benue')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sokoto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lagos').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Bessarabia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moldova').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balta Tiraspol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vinnytsia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bucovina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khmelnytskyi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bhutan"), name = 'Bhutan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Assam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arunachal Pradesh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Bialystok')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konigsberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suduva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Polesie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plock').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Warszawa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ermland Masuren').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Bihar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nepal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lucknow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orissa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Birobidzhan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nikolayevsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khabarovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Bismarck')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Blue Nile')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kassala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Welega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gojjam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Begemder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Bobruysk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Polesie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Bodaybo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Bohemia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moravia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Bohuslan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oslofjord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Varmland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Venezuela"), name = 'Bolivar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Miranda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Branco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Guyana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 7').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Bombay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gujarat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hyderabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mysore').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Borkou Ennedi Tibesti')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Borno')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sokoto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benue').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Bosnia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herzegovina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Serbia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Bouches du Rhone')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alpes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Var').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Languedoc').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Bourgogne')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ile de France').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre Sud').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Auvergne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franche Comte').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Netherlands"), name = 'Brabant')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhineland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Friesland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vlaanderen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Brandenburg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorpommern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mecklenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thuringen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sachsen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Bratsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnoyarsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Irkutsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'British Columbia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Washington').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alberta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper British Columbia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'British Guyana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Branco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suriname').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'British Honduras')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guatemala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yucatan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'British Somaliland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hararghe').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Brittany')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Normandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Bryansk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Roslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaluga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kursk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Bucovina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moldova').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanislawow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Bukhara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navoi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashkent').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalinabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashkent').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashauz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bulgaria"), name = 'Burgas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Edirne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dobrudja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thrace').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plovdiv').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Burgos')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asturias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navarra').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madrid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valladolid').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Burma')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Malay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Assam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Bengal').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Bursa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istanbul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ankara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afyon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmit').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Burundi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rwanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Buryatia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bodaybo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulaanbaatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovsgol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Irkutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bratsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Cairo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aswan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suez').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alexandria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Calabria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Campania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'California')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oregon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baja California').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Cambodia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Indochina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Cameroon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benue').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Guinea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Campania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lazio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abruzzo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Puglia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Calabria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Cape')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Natal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transvaal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Carpathian Ruthenia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanislawow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Casablanca')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Spanish Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algiers').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Marrakech').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Cataluna')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valencia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Ceara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piaui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pernambuco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Norte').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Philippines"), name = 'Cebu')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Central Australia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New South Wales').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southwest Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Territory').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North West Australia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Philippines"), name = 'Central Islands')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manila').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"), name = 'Central Macedonia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Attica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Epirus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plovdiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thrace').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Centre')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre Sud').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ile de France').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bourgogne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Centre Sud')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Limousin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Auvergne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Uruguay"), name = 'Cerro Largo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paysandu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Sul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uruguay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Ceylon')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Chaco Austral')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Formosa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paraguay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mesopotamia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Luis y La Pampa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Juan y La Rioja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tucuman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Los Andes').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Republic of Paraguay"), name = 'Chaco Boreal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Formosa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paraguay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punta Pora').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Chad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borkou Ennedi Tibesti').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mengkukuo"), name = 'Chahar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dornod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaoning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hulunbuir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Champagne')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franche Comte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bourgogne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ile de France').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Picardy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Changde')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zunyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hunan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guizhou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chechnya Ingushetia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Ossetia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dagestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chelyabinsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zlatoust').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kostanay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sverdlovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magnitogorsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Cherkasy')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Odessa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poltava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vinnytsia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balta Tiraspol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mykolaiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chernigov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poltava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Chiapas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oaxaca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yucatan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guatemala').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Chihuahua')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Mexico').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coahuila').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Durango').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chita')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hulunbuir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dornod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulaanbaatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bodaybo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Chubut')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Araucania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aysen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz AR').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Chugoku')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chukchi Peninsula')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chukotka')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kolyma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kamchatka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magadan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Chuvashia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mari El').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulyanovsky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Ciudad Real')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murcia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madrid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cordoba').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Coahuila')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Durango').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chihuahua').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Colorado')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wyoming').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nebraska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oklahoma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Mexico').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Utah').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ireland"), name = 'Connaught')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ireland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leinster').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Munster').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Constantine')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunisia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algiers').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Coquilhatville')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanleyville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lusambo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leopoldville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Cordoba')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Granada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murcia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ciudad Real').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sevilla').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Corsica')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Costa Rica"), name = 'Costa Rica')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nicaragua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Panama').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Costermansville')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanleyville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coquilhatville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lusambo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Elisabethville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burundi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rwanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Cote Nord')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord du Quebec').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Labrador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saguenay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maurice').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Crimea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kherson').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Crisana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Croatia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bosnia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vojvodina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ljubljana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Cuba"), name = 'Cuba')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Cumbria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lancashire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yorkshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northumberland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lothian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanark').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Colombia"), name = 'Cundinamarca')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ecuador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zulia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Miranda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Libertad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Cyprus')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Cyrenaica')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Matrouh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Derna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benghasi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sirte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sinkiang"), name = 'Dabancheng')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiuquan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dzungaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Dagestan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Azerbaijan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chechnya Ingushetia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalmykia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Dahomey')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Togo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niger').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lagos').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Dalarna')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sodermalm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gavleborg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jamtland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trondelag').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Opplandene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Varmland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yunnan"), name = 'Dali')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ganzi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Dalian')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaotung').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Dalmatia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herzegovina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bosnia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ljubljana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Damascus')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lebanon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Palestine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jordan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Dammam')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nejd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuwait').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Danzig')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ermland Masuren').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Deir az Zur')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Diyarbakir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hakkari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mosul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Hajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jordan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Damascus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Delhi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ngari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nepal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lucknow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rajahsthan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Derna')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benghasi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cyrenaica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Matrouh').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Districts of Ontario')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ontario').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Diyarbakir')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hakkari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunceli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Dnipropetrovsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kharkov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poltava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mykolaiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kherson').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaporozhe').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Dobrudja')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominican Republic"), name = 'Dominican Republic')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haiti').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mongolia"), name = 'Dornod')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hulunbuir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulaanbaatar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Dudinka')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yamalia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khatangsky').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Durango')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chihuahua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coahuila').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jalisco').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sinkiang"), name = 'Dzungaria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oyrot Region').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dabancheng').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ayaguz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semipalatinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'East Anglia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Greater London Area').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'East Bengal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Assam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'East Hebei')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beijing').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'East Midlands')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Anglia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Greater London Area').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yorkshire').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Easter Island')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Eastern Aragon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cataluna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valencia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Aragon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Eastern Desert')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kassala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aswan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cairo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suez').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Eastern Slovakia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Carpathian Ruthenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Eastern Sudetenland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Katowice').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moravia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohemia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Switzerland"), name = 'Eastern Swiss Alps')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ticino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alto Adige').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorarlberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Swiss Plateau').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Swiss Alps').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ecuador"), name = 'Ecuador')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cundinamarca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lima').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pastaza').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Edirne')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thrace').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istanbul').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'El Agheila')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benghasi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sirte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripolitania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripoli').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "El Salvador"), name = 'El Salvador')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guatemala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Honduras').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Elisabethville')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lusambo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambesi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Emilia Romagna')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abruzzo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Toscana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Engels Marxstadt')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balakovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikhaylovka').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"), name = 'Epirus')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Epirus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Attica').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Equatorial Africa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanleyville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coquilhatville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Equatorial Guinea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Eritrea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kassala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Begemder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tigray').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Somaliland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Ermland Masuren')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konigsberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plock').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Danzig').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Espirito Santo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Janeiro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Extremadura')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salamanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madrid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ciudad Real').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cordoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sevilla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santarem').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guarda').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Fars')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khuzestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isfahan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sistan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Finnmark')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Troms').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Petsamo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Florida')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mississippi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alabama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia US').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Formosa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Boreal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Los Andes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paraguay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Franche Comte')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bourgogne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jura Mountains').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Franken')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sachsen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thuringen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederbayern').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'French Guiana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suriname').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amapa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'French India')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madurai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'French Somaliland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hararghe').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eritrea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Netherlands"), name = 'Friesland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Weser Ems').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Westfalen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhineland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brabant').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Fujian')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhejiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangdong').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Gabes')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunisia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripolitania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripoli').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Gabon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Guinea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Galicia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asturias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Porto').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Gambia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Senegal').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Gannan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gansu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ganzi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Gansu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shaanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gannan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Ganzi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gannan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Gao')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tombouctou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritanian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayes Koulikoro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bamako').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niger').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Garissa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mombasa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nairobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jubaland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Gavleborg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sodermalm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalarna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jamtland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vasterbotten').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Gdynia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Danzig').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ermland Masuren').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plock').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poznan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hinterpommern').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Georgia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abkhazia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabardino Balkaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Ossetia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chechnya Ingushetia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dagestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Azerbaijan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Armenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Georgia US')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Florida').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alabama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Carolina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Carolina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Ghana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivory Coast').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Togo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Gibraltar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Granada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sevilla').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Gilan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tehran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hamadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Azerbaijan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Gloucestershire')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wales').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Greater London Area').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sussex').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West England').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Goa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mysore').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mongolia"), name = 'Gobi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dornod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulaanbaatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dabancheng').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiuquan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Goias')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Gojjam')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wello').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Welega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Begemder').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Golog')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ganzi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gannan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gansu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haixi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qinghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Gomel')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Roslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vitebsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bobruysk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Gorky')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulyanovsky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chuvashia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mari El').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivanovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Penza').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Gotland')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Granada')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gibraltar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sevilla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cordoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murcia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Greater London Area')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sussex').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Anglia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Denmark"), name = 'Greenland')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Guadalajara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valladolid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madrid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ciudad Real').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valencia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murcia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Aragon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"), name = 'Guangdong')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hunan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fujian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"), name = 'Guangxi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hunan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tonkin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nanning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangdong').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guizhou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"), name = 'Guangzhou')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangdong').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nanning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhouwan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Guangzhouwan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nanning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hainan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Guapore')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 5').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Guarda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lisbon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Porto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salamanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santarem').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Guatemala"), name = 'Guatemala')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Salvador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Honduras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Honduras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yucatan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chiapas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Guerrero')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jalisco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oaxaca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mexico City').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veracruz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Guinea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sierra Leone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Senegal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liberia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivory Coast').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bamako').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayes Koulikoro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Portuguese Guinea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Guizhou')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hunan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Changde').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zunyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Gujarat')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bombay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sind').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rajahsthan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Guryev')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ust Urt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Astrakhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Haida Gwaii')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"), name = 'Hainan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nanning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhouwan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Haiti"), name = 'Haiti')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dominican Republic').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Haixi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qinghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiuquan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Hakkari')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunceli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Van').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mosul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Diyarbakir').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Hamadan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gilan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tehran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isfahan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khuzestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdistan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Hame')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Turku').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vaasa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uusimaa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikkeli').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Hannover')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mecklenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brandenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Westfalen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Weser Ems').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holstein').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Hararghe')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Somaliland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Somaliland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Estonia"), name = 'Harju')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virumaa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Hatay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Hawaii')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Hebei')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shandong').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beijing').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Heilungkiang')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hulunbuir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaoning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Birobidzhan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Helgeland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nordland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trondelag').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jamtland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vasterbotten').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Henan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hebei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Anhui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shaanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangsu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shandong').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Afghanistan"), name = 'Herat')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Quetta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peshawar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baluchistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khorasan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Herzegovina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bosnia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Hessen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhineland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Westfalen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moselland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thuringen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Hinterpommern')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorpommern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poznan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Hokkaido')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hokkaido').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Hokuriku')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Koshinetsu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kanto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tohoku').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Netherlands"), name = 'Holland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brabant').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Friesland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Holstein')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mecklenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Schleswig').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Honduras"), name = 'Honduras')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Salvador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nicaragua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guatemala').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Huangshan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Anhui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhejiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangxi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Hubei')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Changde').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hunan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Anhui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Huangshan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Hulunbuir')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dornod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Hunan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Changde').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangdong').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guizhou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Hyderabad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mysore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bombay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iceland"), name = 'Iceland')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Idaho')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Columbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Washington').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oregon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Utah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wyoming').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Ile de France')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Normandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Picardy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bourgogne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Illinois')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iowa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wisconsin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Illubabor Kaffa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Welega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Indiana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illinois').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Michigan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ohio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Indore')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bombay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lucknow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gujarat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rajahsthan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Iowa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nebraska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minnesota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wisconsin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illinois').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Irkutsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bratsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Siam"), name = 'Isan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cambodia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Isfahan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fars').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hamadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khuzestan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Istanbul')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Edirne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmit').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Istria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ivanovo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yaroslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Ivory Coast')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ghana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liberia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bamako').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Iwo Jima')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Izmir')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bursa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afyon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antalya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Izmit')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istanbul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bursa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ankara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kastamonu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Jabalpur')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bombay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hyderabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bihar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lucknow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indore').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Jalisco')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Durango').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guerrero').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mexico City').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Jamaica')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Jamtland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Helgeland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trondelag').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vasterbotten').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalarna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gavleborg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'Java')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lesser Sunda Islands').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Jawf')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jordan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tabuk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Hajara').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Jehol')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Hebei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beijing').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaoning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaotung').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Jiangsu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Anhui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shandong').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Jiangxi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Huangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hunan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangdong').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fujian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhejiang').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Jiuquan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haixi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dabancheng').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Jordan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jawf').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Hajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Palestine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Damascus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tabuk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Jubaland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Garissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Somaliland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Switzerland"), name = 'Jura Mountains')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franche Comte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Swiss Plateau').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Denmark"), name = 'Jylland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonderjylland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kabardino Balkaria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sochi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Ossetia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abkhazia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Afghanistan"), name = 'Kabul')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peshawar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bukhara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalinabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Kashmir').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'Kalimantan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Borneo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kalinin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yaroslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rzhev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kalmykia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Astrakhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dagestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volgodonsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kaluga')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tula').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Roslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kamchatka')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chukotka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magadan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Kansai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chugoku').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tokai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Koshinetsu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Kansas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oklahoma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nebraska').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Kanto')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tohoku').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hokuriku').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Koshinetsu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tokai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Karagandy')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ayaguz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alma Ata').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyzyl Orda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kostanay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Karakalpakstan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khiva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashauz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ust Urt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navoi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Karas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khomas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cape').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kargopol')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kotlas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkhangelsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Karjala')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kymi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Olonets').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leningrad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Kashmir')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taklamakan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ngari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Delhi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Kashmir').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Kassala')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eritrea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Begemder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Kastamonu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmit').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ankara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Samsun').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amasya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Katowice')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kielce').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberschlesien').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Lithuania"), name = 'Kaunas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suduva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aukstaitija').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Kayes Koulikoro')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Senegal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bamako').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritanian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Kayseri')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amasya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sivas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mersin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konya').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kazan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mari El').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ufa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udmurtia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chuvashia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulyanovsky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuybyshev').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Kentucky')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ohio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illinois').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indiana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Kerman')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fars').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isfahan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khorasan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Khabarovsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vladivostok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Birobidzhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nikolayevsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Khakassia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Altai Krai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novosibirsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnoyarsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oyrot Region').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kharkov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Belgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poltava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voroshilovgrad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Khartoum')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kassala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aswan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Khatangsky')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dudinka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udachny').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kherson')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Crimea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Odessa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mykolaiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaporozhe').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Khiva')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashauz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Khmelnytskyi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wolyn').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vinnytsia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhytomyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bessarabia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Khomas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Otjozondjupa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Khorasan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tehran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mongolia"), name = 'Khovd')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulaanbaatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oyrot Region').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovsgol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dabancheng').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dzungaria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mongolia"), name = 'Khovsgol')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulaanbaatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Khuzestan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fars').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isfahan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baghdad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hamadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdistan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Kielce')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Katowice').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Warszawa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kirensk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bratsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Irkutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bodaybo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udachny').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khatangsky').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Kirin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Korea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaotung').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaoning').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kirov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kotlas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mari El').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udmurtia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Syktyvkar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kolyma')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Verkhoyansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chukotka').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Konigsberg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ermland Masuren').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suduva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Memel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Konya')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amasya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antalya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ankara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afyon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayseri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mersin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Koshinetsu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hokuriku').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kanto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tokai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Kosovo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shkoder').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kostanay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magnitogorsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karagandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chelyabinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kotlas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kargopol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pechora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkhangelsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Syktyvkar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Krakow')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Katowice').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kielce').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Carpathian Ruthenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanislawow').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Krasnodar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rostov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volgodonsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sochi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Krasnoyarsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bratsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khakassia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Kunene')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Angola').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khomas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Otjozondjupa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sinkiang"), name = 'Kunlun Shan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haixi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qinghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nagqu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiuquan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dabancheng').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taklamakan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Kuopio')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oulu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vaasa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikkeli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kymi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karjala').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Kurdistan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mosul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gilan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hamadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baghdad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khuzestan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Kurdufan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahr al Ghazal').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kursk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Belgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lipetsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Latvia"), name = 'Kurzeme')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Kuwait')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Hajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baghdad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kuybyshev')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balakovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulyanovsky').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kyiv')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vinnytsia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhytomyr').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Kymi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikkeli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uusimaa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karjala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Kyushu')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Kyzyl Orda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karagandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alma Ata').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pamir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashkent').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navoi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Colombia"), name = 'La Libertad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cundinamarca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zulia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Panama').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bolivian Republic"), name = 'La Paz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tacna Moquegua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arequipa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Formosa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antofagasta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Los Andes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arica y Tarapaca').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Labrador')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cote Nord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord du Quebec').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Lagos')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benue').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sokoto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dahomey').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Lanark')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Scottish Highlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aberdeenshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lothian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cumbria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Lancashire')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cumbria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yorkshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wales').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Languedoc')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Limousin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bouches du Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Auvergne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Siam"), name = 'Lanna')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Laos')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cambodia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Indochina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tonkin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Lappi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oulu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murmansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Petsamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Finnmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Troms').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Norrbotten').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Latvia"), name = 'Latgale')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pskov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tartu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vidzeme').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Riga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilejka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vitebsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevel').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Lazio')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Toscana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abruzzo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Campania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Lebanon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Damascus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Palestine').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ireland"), name = 'Leinster')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ireland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Connaught').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Munster').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Leningrad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karjala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volkhov').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Leon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asturias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valladolid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salamanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Porto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Galicia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Leopoldville')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coquilhatville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lusambo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Angola').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'Lesser Sunda Islands')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Java').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Portuguese Timor').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Liangshan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gannan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zunyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guizhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ganzi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Liaoning')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaotung').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Liaotung')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Korea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liaoning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Liberia"), name = 'Liberia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sierra Leone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivory Coast').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Libyan Desert')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripolitania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sirte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cyrenaica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Matrouh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borkou Ennedi Tibesti').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Peru"), name = 'Lima')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arequipa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pastaza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ecuador').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Limousin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Languedoc').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Auvergne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre Sud').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aquitaine').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Lipetsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tambov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kursk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tula').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Lisbon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Porto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guarda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santarem').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beja').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Litorale')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ljubljana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Ljubljana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Lodz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poznan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Katowice').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kielce').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Warszawa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plock').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Loire')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brittany').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Normandy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ile de France').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Lombardia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trentino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alto Adige').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ticino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Emilia Romagna').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Peru"), name = 'Loreto')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pastaza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lima').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ecuador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 4').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Los Andes')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Formosa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tucuman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antofagasta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Lothian')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aberdeenshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cumbria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northumberland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Louisiana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mississippi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Lourenco Marques')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Natal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transvaal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhodesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manica e Sofala').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Austria"), name = 'Lower Austria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Luanda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leopoldville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lusambo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Elisabethville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambesi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Angola').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Lublin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Warszawa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kielce').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wolyn').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Polesie').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Lucknow')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bihar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nepal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Delhi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rajahsthan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Luga')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leningrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volkhov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pskov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virumaa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Lusambo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coquilhatville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leopoldville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Elisabethville').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Luxembourg"), name = 'Luxembourg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moselland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Philippines"), name = 'Luzon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manila').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Lwow')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khmelnytskyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wolyn').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanislawow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bucovina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bessarabia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Macedonia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sofia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plovdiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Epirus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Epirus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Albania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shkoder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kosovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Serbia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Madagascar')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Madinah')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tabuk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nejd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asir Makkah').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Madras')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hyderabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mysore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madurai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Madrid')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valladolid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ciudad Real').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salamanca').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Madurai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French India').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mysore').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Magadan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kolyma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chukotka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kamchatka').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Magallanes')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tierra del Fuego').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aysen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz AR').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Magnitogorsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chelyabinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kostanay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ufa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zlatoust').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Malatya')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mersin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayseri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sivas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunceli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Diyarbakir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hatay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Malawi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambezia Mocambique').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manica e Sofala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Mandalay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Assam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arunachal Pradesh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanna').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Manica e Sofala')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambezia Mocambique').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malawi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhodesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lourenco Marques').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Philippines"), name = 'Manila')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luzon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Islands').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Manitoba')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minnesota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saskatchewan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Manitoba').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Maranhao')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piaui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Mari El')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chuvashia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Marrakech')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Casablanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Oro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidi Ifni').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Maryland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pennsylvania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Mato Grosso')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Goias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sao Paulo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punta Pora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guapore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 5').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 6').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Matrouh')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alexandria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Derna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cyrenaica').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Maurice')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ouest du Quebec').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cote Nord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saguenay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Mauritania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritanian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Senegal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Oro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayes Koulikoro').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Mauritanian Desert')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Oro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayes Koulikoro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tombouctou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Mecklenburg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brandenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holstein').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorpommern').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Lithuania"), name = 'Memel')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konigsberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Mendoza')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Atacama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santiago').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Luis y La Pampa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Mersin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antalya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayseri').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Mesopotamia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Luis y La Pampa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pampas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Colombia"), name = 'Meta')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ecuador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cundinamarca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Miranda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 1').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Mexico City')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guerrero').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veracruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jalisco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Michigan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ohio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wisconsin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Ontario').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Middle Congo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leopoldville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coquilhatville').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Midi Pyrenees')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cataluna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navarra').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pyrenees Atlantiques').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aquitaine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Languedoc').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Limousin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Mikhaylovka')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Millerovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Engels Marxstadt').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Mikkeli')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kymi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hame').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uusimaa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vaasa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Millerovo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikhaylovka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volgodonsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rostov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voroshilovgrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Minas Gerais')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Goias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Janeiro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sao Paulo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Espirito Santo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Philippines"), name = 'Mindanao')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Minnesota')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iowa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wisconsin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ontario').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Minsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vitebsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bobruysk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilejka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Venezuela"), name = 'Miranda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Meta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cundinamarca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zulia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Mississippi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alabama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Louisiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Missouri')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iowa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nebraska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oklahoma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illinois').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bulgaria"), name = 'Moesia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sofia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plovdiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oltenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dobrudja').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Moldova')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bucovina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Mombasa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Garissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nairobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nyanza Rift Valley').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Montana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wyoming').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saskatchewan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alberta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Columbia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Montenegro')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kosovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bosnia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shkoder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herzegovina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Morava')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bosnia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kosovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sofia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oltenia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Moravia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohemia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Moscow')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivanovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tula').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaluga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rzhev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yaroslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalinin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Moselland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luxembourg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhineland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iraq"), name = 'Mosul')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Hajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baghdad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Deir az Zur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hakkari').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Mozyr')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wolyn').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Polesie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bobruysk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhytomyr').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ireland"), name = 'Munster')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leinster').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Connaught').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Muntenia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oltenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dobrudja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moldova').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Bessarabia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Murcia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Granada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ciudad Real').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valencia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cordoba').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Murmansk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Petsamo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Mykolaiv')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Odessa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kherson').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Mysore')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Goa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bombay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hyderabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madurai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madras').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Tibet"), name = 'Nagqu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taklamakan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ngari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qinghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Nairobi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mombasa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Garissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nyanza Rift Valley').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Najiran')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nejd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asir Makkah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yemen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aden').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Guangxi Clique"), name = 'Nanning')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tonkin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhouwan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hainan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Natal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cape').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transvaal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lourenco Marques').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Navarra')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pyrenees Atlantiques').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pais Vasco').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Navoi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyzyl Orda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashauz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bukhara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashkent').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Nebraska')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iowa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wyoming').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Nejd')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madinah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asir Makkah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Najiran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Nenets')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salekhard').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Urals').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pechora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkhangelsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Nepal"), name = 'Nepal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bihar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lucknow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Delhi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ngari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Nevada')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Utah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oregon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'California').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Nevel')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pskov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vitebsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rzhev').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'New Brunswick')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nova Scotia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New England').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'New Caledonia')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'New England')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Brunswick').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New York').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'New Jersey')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New York').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pennsylvania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'New Mexico')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oklahoma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chihuahua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonora').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'New South Wales')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southwest Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Victoria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'New York')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New England').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pennsylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Jersey').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Newfoundland')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Tibet"), name = 'Ngari')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taklamakan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Delhi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nepal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nagqu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Nicaragua"), name = 'Nicaragua')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Honduras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costa Rica').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Niederbayern')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Niederschlesien')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohemia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sachsen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poznan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberschlesien').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Niger')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lagos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sokoto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dahomey').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Nikolayevsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khabarovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Birobidzhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Ningxia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shaanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ordos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiuquan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haixi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gansu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Nord du Quebec')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Labrador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cote Nord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saguenay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ouest du Quebec').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Nord Pas de Calais')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Picardy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vlaanderen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Nordland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Troms').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Norrbotten').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vasterbotten').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Helgeland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Normandy')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Picardy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ile de France').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brittany').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Norrbotten')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Troms').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nordland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vasterbotten').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'North Angola')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leopoldville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Malaya"), name = 'North Borneo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalimantan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'North Carolina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Carolina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia US').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virginia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'North Dakota')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minnesota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saskatchewan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'North Darfur')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borkou Ennedi Tibesti').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "New Zealand"), name = 'North Island')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'North Korea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Korea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'North Ossetia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabardino Balkaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chechnya Ingushetia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'North Queensland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Territory').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Queensland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'North Sakhalin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Sakhalin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'North Slovenia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lower Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ljubljana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'North Transylvania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moldova').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Crisana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bucovina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanislawow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Carpathian Ruthenia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'North West Australia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Territory').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Albania"), name = 'Northern Epirus')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Albania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Epirus').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Hungary"), name = 'Northern Hungary')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Northern Ireland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leinster').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Connaught').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Northern Kashmir')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peshawar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalinabad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Siam"), name = 'Northern Malay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Singapore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Northern Manitoba')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nunavut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Districts of Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Saskatchewan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Northern Ontario')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Michigan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minnesota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Districts of Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ouest du Quebec').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Northern Saskatchewan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alberta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saskatchewan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northwest Territories').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Northern Territory')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North West Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Queensland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Northern Urals')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pechora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nenets').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salekhard').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tobolsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Syktyvkar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Northumberland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yorkshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cumbria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lothian').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Northwest Territories')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yukon Territory').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nunavut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper British Columbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alberta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Saskatchewan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Nova Scotia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Brunswick').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Novgorod')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pskov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rzhev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volkhov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Novosibirsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Omsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pavlodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khakassia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Altai Krai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Nowogrodek')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suduva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bobruysk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Polesie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilejka').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Nunavut')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northwest Territories').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Manitoba').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Nyanza Rift Valley')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nairobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mombasa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Oaxaca')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veracruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chiapas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guerrero').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Oberbayern')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorarlberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Oberschlesien')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poznan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Katowice').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Odessa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mykolaiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balta Tiraspol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Bessarabia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Ohio')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pennsylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Michigan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Virginia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Okhotsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kolyma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Verkhoyansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nikolayevsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Okinawa')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Oklahoma')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Mexico').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Olonets')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karjala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kargopol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Oltenia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sofia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moesia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Oman"), name = 'Oman')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abu Dhabi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aden').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Omsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novosibirsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pavlodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Onega')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkhangelsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kargopol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Olonets').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karjala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oulu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murmansk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Opplandene')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oslofjord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Varmland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalarna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trondelag').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vestlandet').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Telemark').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Shanxi"), name = 'Ordos')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shaanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Oregon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Washington').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'California').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevada').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Orel')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kursk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lipetsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tula').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaluga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Orenburg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balakovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magnitogorsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ufa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuybyshev').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Orissa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hyderabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jabalpur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bihar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Oslofjord')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Telemark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Opplandene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Varmland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohuslan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Ostergotland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sodermalm').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Ostmark')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poznan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hinterpommern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorpommern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brandenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sachsen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Otjozondjupa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambesi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Angola').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khomas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Ouest du Quebec')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord du Quebec').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maurice').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Oulu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salla').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vaasa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Oyrot Region')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khakassia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tannu Tuva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dzungaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semipalatinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Altai Krai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Pais Vasco')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pyrenees Atlantiques').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navarra').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asturias').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Palestine')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lebanon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Damascus').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jordan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sinai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Pamir')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalinabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashkent').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyzyl Orda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alma Ata').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Pampas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mesopotamia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Luis y La Pampa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Panama"), name = 'Panama')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costa Rica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Libertad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Panama Canal').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Panama Canal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Panama').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Papua')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Papua').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Para')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maranhao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 6').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amapa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Republic of Paraguay"), name = 'Paraguay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Formosa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Boreal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punta Pora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Parana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paraguay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punta Pora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sao Paulo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Catarina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Estonia"), name = 'Parnu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Harju').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virumaa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tartu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vidzeme').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ecuador"), name = 'Pastaza')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ecuador').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lima').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Pavlodar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Omsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Altai Krai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novosibirsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semipalatinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Uruguay"), name = 'Paysandu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cerro Largo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Sul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uruguay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Pechora')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Syktyvkar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Urals').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nenets').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkhangelsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kotlas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"), name = 'Peloponnese')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Attica').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Pennsylvania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maryland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Jersey').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New York').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ohio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Virginia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Penza')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulyanovsky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tambov').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Perm')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zlatoust').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sverdlovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tobolsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Urals').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Syktyvkar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udmurtia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ufa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Pernambuco')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Norte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ceara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piaui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Peshawar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Quetta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabul').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Petsamo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murmansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Finnmark').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Piaui')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ceara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pernambuco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tocantins').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maranhao').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Picardy')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord Pas de Calais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ile de France').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Normandy').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Piemonte')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ticino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Emilia Romagna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Toscana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Plock')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ermland Masuren').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Warszawa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bulgaria"), name = 'Plovdiv')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thrace').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sofia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Poitou')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Centre Sud').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Limousin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aquitaine').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Polesie')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wolyn').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bobruysk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Poltava')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kharkov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Porto')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Galicia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salamanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guarda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lisbon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Portuguese Guinea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Senegal').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Portuguese Timor')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lesser Sunda Islands').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Poznan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hinterpommern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Pskov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tartu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virumaa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Puglia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Campania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abruzzo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Punjab')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sind').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rajahsthan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Delhi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peshawar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Quetta').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Punta Pora')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Boreal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paraguay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sao Paulo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Pyrenees Atlantiques')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aquitaine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navarra').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pais Vasco').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Qatar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Qingdao')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shandong').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Xibei San Ma"), name = 'Qinghai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ganzi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haixi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nagqu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Queensland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New South Wales').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southwest Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Queensland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Quetta')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peshawar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sind').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baluchistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Herat').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Rajahsthan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lucknow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indore').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gujarat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sind').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Delhi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Region Mesopotamica')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paysandu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Sul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Catarina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paraguay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mesopotamia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pampas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Rhineland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Friesland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Westfalen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moselland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brabant').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Rhodesia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manica e Sofala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lourenco Marques').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transvaal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Rhone')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franche Comte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jura Mountains').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alpes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bouches du Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Languedoc').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Auvergne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bourgogne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Latvia"), name = 'Riga')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vidzeme').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Rio Branco')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Guyana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 7').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Rio de Janeiro')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Espirito Santo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sao Paulo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Rio de Oro')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Marrakech').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritanian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Rio Grande do Norte')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ceara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pernambuco').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Rio Grande do Sul')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cerro Largo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paysandu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Catarina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Rio Negro')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chubut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Araucania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santiago').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mendoza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Luis y La Pampa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pampas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Roslavl')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaluga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Rostov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voroshilovgrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Millerovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volgodonsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnodar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Rub al Khali')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qatar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nejd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Najiran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aden').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abu Dhabi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Rwanda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burundi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ryazan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivanovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Penza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tambov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lipetsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tula').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Rzhev')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalinin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Sachsen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thuringen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brandenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Saguenay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord du Quebec').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cote Nord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maurice').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Saint Lawrence')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maurice').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ouest du Quebec').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New England').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Brunswick').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New York').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Salamanca')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valladolid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madrid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guarda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Porto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Salekhard')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yamalia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tobolsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Urals').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nenets').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Salla')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murmansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oulu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Philippines"), name = 'Samar')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Samsun')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sivas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amasya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kastamonu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'San Juan y La Rioja')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mendoza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santiago').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Atacama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tucuman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Luis y La Pampa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'San Luis y La Pampa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mesopotamia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pampas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mendoza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Juan y La Rioja').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Santa Catarina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Sul').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bolivian Republic"), name = 'Santa Cruz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazonas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 3').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Acre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ucayali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Boreal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punta Pora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guapore').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Santa Cruz AR')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chubut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aysen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magallanes').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Santarem')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lisbon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guarda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beja').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Chile"), name = 'Santiago')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Atacama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Juan y La Rioja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mendoza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Araucania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Sao Paulo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Janeiro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punta Pora').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Saratov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balakovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuybyshev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ulyanovsky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Penza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tambov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikhaylovka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Engels Marxstadt').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Sardegna')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Saskatchewan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manitoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alberta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Saskatchewan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Savoy')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Swiss Plateau').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jura Mountains').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alpes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bouches du Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Var').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Schleswig')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonderjylland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holstein').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Scottish Highlands')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aberdeenshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanark').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Semipalatinsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dzungaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oyrot Region').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Altai Krai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pavlodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ayaguz').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Semnan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tehran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hamadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isfahan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khorasan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Senegal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayes Koulikoro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Portuguese Guinea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Serbia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bosnia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Sevilla')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Extremadura').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cordoba').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Granada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gibraltar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Communist China"), name = 'Shaanxi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ordos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gansu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Shandong')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qingdao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangsu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hebei').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Shanghai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhejiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Huangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Anhui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangsu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Shanxi"), name = 'Shanxi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shaanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ordos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hebei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beijing').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Chahar').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Shewa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wello').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Welega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gojjam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illubabor Kaffa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hararghe').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Tibet"), name = 'Shigatse')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nepal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bhutan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arunachal Pradesh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xikang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nagqu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ngari').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Shikoku')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Albania"), name = 'Shkoder')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kosovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Albania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Siam"), name = 'Siam')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cambodia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Isan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Malay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Sichuan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gansu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Xian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gannan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zunyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Changde').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Sicilia')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Sidamo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Garissa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nairobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jubaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nyanza Rift Valley').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illubabor Kaffa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Sidi Ifni')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Marrakech').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Sierra Leone')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liberia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Sinai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Palestine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suez').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'Sind')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gujarat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Quetta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Punjab').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rajahsthan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baluchistan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Malaya"), name = 'Singapore')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Malay').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Sirte')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cyrenaica').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benghasi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripolitania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Agheila').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Sistan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baluchistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kerman').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fars').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Sivas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Samsun').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amasya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunceli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kayseri').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Denmark"), name = 'Sjaelland')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Skane')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smaland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Smaland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Skane').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Smolensk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rzhev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaluga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Roslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vitebsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevel').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Sochi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabardino Balkaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abkhazia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Sodermalm')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gavleborg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalarna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Varmland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostergotland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Bulgaria"), name = 'Sofia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plovdiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oltenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Sokoto')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benue').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lagos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niger').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Solomon Islands')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Somaliland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jubaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hararghe').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Somaliland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Denmark"), name = 'Sonderjylland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Schleswig').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jylland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Sonora')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baja California').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Mexico').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chihuahua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Durango').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'South Australia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New South Wales').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Victoria').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'South Carolina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia US').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Carolina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mengkukuo"), name = 'South Chahar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beijing').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suiyuan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'South Dakota')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wyoming').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nebraska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iowa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minnesota').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'South Darfur')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borkou Ennedi Tibesti').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahr al Ghazal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'South Georgia')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "New Zealand"), name = 'South Island')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'South Korea')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Korea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'South Sakhalin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Sakhalin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'South West Angola')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambesi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Otjozondjupa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunene').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'South West Australia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'South West England')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sussex').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Southern Bessarabia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moldova').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balta Tiraspol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Odessa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Southern Indochina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tonkin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cambodia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Southern Ontario')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ontario').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ouest du Quebec').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Michigan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New York').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Southern Sahara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tombouctou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niger').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sokoto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Borkou Ennedi Tibesti').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Southern Serbia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Morava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sofia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kosovo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Southern Slovakia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Hungary').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Carpathian Ruthenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lower Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Southwest Queensland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Queensland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New South Wales').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Spanish Africa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Casablanca').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Stalinabad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pamir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bukhara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tashkent').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Stalingrad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Engels Marxstadt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikhaylovka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Millerovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volgodonsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalmykia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Astrakhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uralsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Stalino')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voroshilovgrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rostov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kharkov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaporozhe').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Stanislawow')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bucovina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Carpathian Ruthenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Stanleyville')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahr al Ghazal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Africa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coquilhatville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Stavropol')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chechnya Ingushetia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dagestan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalmykia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volgodonsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sochi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabardino Balkaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Ossetia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Sudetenland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lower Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sachsen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohemia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moravia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Lithuania"), name = 'Suduva')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaunas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konigsberg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Suez')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sinai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cairo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Shanxi"), name = 'Suiyuan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chahar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiuquan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ningxia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ordos').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'Sulawesi')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'Sumatra')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Sumy')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kursk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Belgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kharkov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poltava').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chernigov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bryansk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Manchukuo"), name = 'Sungkiang')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Heilungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Birobidzhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khabarovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vladivostok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Korea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Surgut')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tobolsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yamalia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salekhard').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dudinka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Netherlands"), name = 'Suriname')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Guiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 8').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Guyana').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Sussex')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Greater London Area').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West England').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Sverdlovsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zlatoust').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tobolsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chelyabinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Switzerland"), name = 'Swiss Plateau')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorarlberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jura Mountains').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Syktyvkar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Urals').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kotlas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pechora').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Saudi Arabia"), name = 'Tabuk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jordan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jawf').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Al Qassim').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madinah').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Peru"), name = 'Tacna Moquegua')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arequipa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arica y Tarapaca').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Taiwan')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sinkiang"), name = 'Taklamakan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nagqu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ngari').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Tamaulipas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veracruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mexico City').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jalisco').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Durango').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coahuila').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tambov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Penza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lipetsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Tanganyika')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambezia Mocambique').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malawi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burundi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rwanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nyanza Rift Valley').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mombasa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Tannu Tuva"), name = 'Tannu Tuva')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bratsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnoyarsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khakassia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oyrot Region').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovsgol').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Estonia"), name = 'Tartu')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vidzeme').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parnu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virumaa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pskov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tashauz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khiva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bukhara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navoi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tashkent')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyzyl Orda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalinabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pamir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bukhara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navoi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Tasmania')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Tehran')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Semnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hamadan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gilan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khorasan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Telemark')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Agder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Opplandene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vestlandet').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oslofjord').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Tennessee')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mississippi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alabama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Missouri').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Carolina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia US').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Texas')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Louisiana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkansas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oklahoma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Mexico').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chihuahua').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Coahuila').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'The Moluccas')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Greece"), name = 'Thrace')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plovdiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Macedonia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Edirne').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Thuringen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brandenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sachsen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Iran"), name = 'Tibriz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gilan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdistan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mosul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Van').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hakkari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Armenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Azerbaijan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Switzerland"), name = 'Ticino')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Swiss Alps').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Tierra del Fuego')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magallanes').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Tigray')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eritrea').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Begemder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wello').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tikhvin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yaroslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Olonets').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Volkhov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rzhev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalinin').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Tlemcen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algiers').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Constantine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunisia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Marrakech').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Casablanca').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tobolsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sverdlovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Urals').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salekhard').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Second Brazilian Republic"), name = 'Tocantins')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maranhao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piaui').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minas Gerais').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Goias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mato Grosso').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Togo')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ghana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Volta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dahomey').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Tohoku')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hokuriku').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kanto').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Japan"), name = 'Tokai')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Koshinetsu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kanto').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Tombouctou')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritanian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algerian Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Sahara').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tomsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yeniseisk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyumen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Omsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novosibirsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khakassia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnoyarsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Tonkin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nanning').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yunnan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Indochina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Toscana')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Emilia Romagna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abruzzo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lazio').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Trabzon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Samsun').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sivas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunceli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Van').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Armenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Kingdom of Hungary"), name = 'Transdanubia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lower Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Hungary').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vojvodina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "South Africa"), name = 'Transvaal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhodesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cape').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Natal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lourenco Marques').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Romania"), name = 'Transylvania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Crisana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Transylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oltenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moldova').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Trentino')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alto Adige').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Tripoli')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Agheila').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripolitania').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Tripolitania')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripoli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Agheila').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sirte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Troms')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Finnmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Norrbotten').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nordland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Trondelag')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Helgeland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jamtland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalarna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Opplandene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vestlandet').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Argentina"), name = 'Tucuman')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Los Andes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chaco Austral').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'San Juan y La Rioja').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Atacama').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antofagasta').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tula')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaluga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lipetsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ryazan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Tunceli')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Van').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hakkari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Diyarbakir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sivas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Tunisia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tlemcen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Constantine').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Turku')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vaasa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hame').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uusimaa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Austria"), name = 'Tyrol')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorarlberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alto Adige').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Tyumen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tobolsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sverdlovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chelyabinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akmolinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Omsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Peru"), name = 'Ucayali')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Acre').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Paz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arequipa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lima').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loreto').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amazon impassable 4').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Udachny')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Verkhoyansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khatangsky').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Udmurtia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ufa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ufa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udmurtia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zlatoust').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magnitogorsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Uganda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nyanza Rift Valley').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rwanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costermansville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stanleyville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahr al Ghazal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mongolia"), name = 'Ulaanbaatar')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dornod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gobi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovd').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khovsgol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Buryatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ulyanovsky')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuybyshev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Penza').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chuvashia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kazan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Austria"), name = 'Upper Austria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lower Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Slovenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niederbayern').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Upper British Columbia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alaska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yukon Territory').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northwest Territories').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alberta').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Columbia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Upper Nile')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidamo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illubabor Kaffa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Welega').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurdufan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahr al Ghazal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uganda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nyanza Rift Valley').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Upper Volta')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ghana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Togo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dahomey').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Niger').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gao').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bamako').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivory Coast').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Uralsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guryev').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Astrakhan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Engels Marxstadt').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balakovo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Uruguay"), name = 'Uruguay')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cerro Largo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paysandu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sinkiang"), name = 'Urumqi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunlun Shan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taklamakan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yarkand').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pamir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alma Ata').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ayaguz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dzungaria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dabancheng').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Ust Urt')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ashkhabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guryev').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Utah')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arizona').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevada').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wyoming').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Uusimaa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kymi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikkeli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hame').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Turku').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Finland"), name = 'Vaasa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oulu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikkeli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hame').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Turku').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Valencia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cataluna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murcia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Valladolid')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asturias').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madrid').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salamanca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Turkey"), name = 'Van')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Armenia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tibriz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hakkari').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunceli').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Vancouver Island')

    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "France"), name = 'Var')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bouches du Rhone').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Varmland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sodermalm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohuslan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oslofjord').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Opplandene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalarna').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Vasterbotten')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Norrbotten').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nordland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Helgeland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jamtland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gavleborg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sweden"), name = 'Vastergotland')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Varmland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sodermalm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostergotland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Skane').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohuslan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Veneto')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Emilia Romagna').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lombardia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trentino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alto Adige').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Veracruz')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oaxaca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guerrero').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mexico City').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Verkhoyansk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kolyma').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yakutsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udachny').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Norway"), name = 'Vestlandet')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trondelag').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Opplandene').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Telemark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Agder').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Victoria')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New South Wales').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Australia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Latvia"), name = 'Vidzeme')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parnu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tartu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Riga').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Vinnytsia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cherkasy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhytomyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khmelnytskyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bessarabia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Balta Tiraspol').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Virginia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maryland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tennessee').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Carolina').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Estonia"), name = 'Virumaa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pskov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tartu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parnu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Harju').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Vitebsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilejka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gomel').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smolensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nevel').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Vlaanderen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brabant').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wallonie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord Pas de Calais').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Vladivostok')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khabarovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sungkiang').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Korea').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'Vojvodina')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Transdanubia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Volgodonsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalmykia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalingrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Millerovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rostov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnodar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stavropol').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Volkhov')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Novgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leningrad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Vologda')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gorky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kotlas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kargopol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Olonets').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yaroslavl').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivanovo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Austria"), name = 'Vorarlberg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tyrol').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wurttemberg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Swiss Plateau').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Voronezh')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saratov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mikhaylovka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Millerovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voroshilovgrad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Belgorod').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kursk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lipetsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tambov').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Voroshilovgrad')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Voronezh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Millerovo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rostov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kharkov').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Belgorod').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Vorpommern')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hinterpommern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostmark').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brandenburg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mecklenburg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Wales')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lancashire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Belgium"), name = 'Wallonie')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vlaanderen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brabant').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhineland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moselland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luxembourg').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Champagne').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Picardy').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord Pas de Calais').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Warszawa')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bialystok').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kielce').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lodz').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Plock').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Washington')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Columbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oregon').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Welega')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Blue Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper Nile').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illubabor Kaffa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gojjam').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Ethiopia"), name = 'Wello')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Afar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shewa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gojjam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Begemder').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tigray').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Weser Ems')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Westfalen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Friesland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yugoslavia"), name = 'West Banat')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vojvodina').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alfold').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Banat').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Serbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Croatia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "British Raj"), name = 'West Bengal')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Bengal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Assam').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bhutan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nepal').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bihar').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orissa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'West Midlands')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yorkshire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lancashire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wales').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dutch East Indies"), name = 'West Papua')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Papua').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'West Virginia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pennsylvania').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virginia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maryland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kentucky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ohio').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Spain"), name = 'Western Aragon')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Aragon').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guadalajara').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Navarra').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pyrenees Atlantiques').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Australia"), name = 'Western Australia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North West Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Australia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Australia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Western Desert')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Matrouh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alexandria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cairo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aswan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khartoum').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Darfur').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Libyan Desert').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Western Slovakia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moravia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaolzie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lower Austria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sudetenland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Switzerland"), name = 'Western Swiss Alps')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Swiss Plateau').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Swiss Alps').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ticino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Westfalen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Weser Ems').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhineland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Friesland').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Wilejka')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vitebsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Wilno')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilejka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nowogrodek').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suduva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaunas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aukstaitija').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Wisconsin')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Minnesota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iowa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illinois').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Michigan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Poland"), name = 'Wolyn')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Polesie').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lublin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lwow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khmelnytskyi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhytomyr').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "German Reich"), name = 'Wurttemberg')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberbayern').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Franken').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hessen').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moselland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alsace Lorraine').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jura Mountains').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Swiss Plateau').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorarlberg').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United States"), name = 'Wyoming')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montana').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Dakota').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nebraska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Colorado').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Utah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Idaho').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Xian')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hubei').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Henan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shaanxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gansu').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Xikang')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Golog').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qinghai').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nagqu').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shigatse').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arunachal Pradesh').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ganzi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Yakutsk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Verkhoyansk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Udachny').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bodaybo').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chita').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amur').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Yamalia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salekhard').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dudinka').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Sinkiang"), name = 'Yarkand')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Urumqi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pamir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalinabad').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kabul').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kashmir').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taklamakan').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Yaroslavl')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vologda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tikhvin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalinin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moscow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivanovo').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yemen"), name = 'Yemen')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asir Makkah').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Najiran').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aden').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Yeniseisk')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khatangsky').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dudinka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Surgut').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tomsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krasnoyarsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bratsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kirensk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Yorkshire')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northumberland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cumbria').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lancashire').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Midlands').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Midlands').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Mexico"), name = 'Yucatan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Honduras').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guatemala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chiapas').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Dominion of Canada"), name = 'Yukon Territory')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alaska').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper British Columbia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northwest Territories').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Yunnan"), name = 'Yunnan')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dali').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mandalay').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Laos').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tonkin').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guizhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangxi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Zambesi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Angola').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luanda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Elisabethville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Otjozondjupa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Portugal"), name = 'Zambezia Mocambique')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manica e Sofala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malawi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "United Kingdom"), name = 'Zambia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambesi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Elisabethville').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manica e Sofala').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malawi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rhodesia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bechuanaland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Otjozondjupa').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Czechoslovakia"), name = 'Zaolzie')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Slovakia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Krakow').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Katowice').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oberschlesien').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Sudetenland').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Moravia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Slovakia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Zaporozhe')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kherson').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Stalino').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dnipropetrovsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Italy"), name = 'Zara')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Lithuania"), name = 'Zemaitija')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurzeme').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aukstaitija').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kaunas').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suduva').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Memel').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Latvia"), name = 'Zemgale')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Riga').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Latgale').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilejka').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wilno').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aukstaitija').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurzeme').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Zhejiang')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fujian').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangxi').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Huangshan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanghai').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Zhytomyr')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vinnytsia').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyiv').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mozyr').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Wolyn').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khmelnytskyi').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Soviet Union"), name = 'Zlatoust')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magnitogorsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ufa').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Perm').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sverdlovsk').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chelyabinsk').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "Venezuela"), name = 'Zulia')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Miranda').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cundinamarca').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'La Libertad').number]
    square_instance.save()
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), owner = Nations.objects.get(game = game_id, name = "China"), name = 'Zunyi')
    square_instance.neighbors = [Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guizhou').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Changde').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sichuan').number, Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liangshan').number]
    square_instance.save()
    
    
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aberdeenshire')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abkhazia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abruzzo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Abu Dhabi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aden')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Agder')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Akhtubinsk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alabama')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alaska')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Albania')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aleppo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Alexandria')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Algiers')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Amapa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antalya')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Antofagasta')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aquitaine')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Araucania')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arequipa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arica y Tarapaca')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Arkhangelsk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asir Makkah')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Astrakhan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Asturias')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Atacama')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Attica')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Aysen')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bahia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baja California')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beijing')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Beja')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benghasi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Benue')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bismarck')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bohuslan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bolivar')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bombay')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bouches du Rhone')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Baluchistan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brabant')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Columbia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Guyana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Honduras')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'British Somaliland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Brittany')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burgas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Burma')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Bursa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cairo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Calabria')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'California')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cameroon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Campania')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cape')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Casablanca')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cataluna')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ceara')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cebu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Islands')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Central Macedonia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cerro Largo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ceylon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chiapas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chubut')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chugoku')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chukchi Peninsula')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Chukotka')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Connaught')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Constantine')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Corsica')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Costa Rica')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cote Nord')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Crimea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cuba')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cumbria')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cundinamarca')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Cyprus')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dagestan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dahomey')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalian')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dalmatia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dammam')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Danzig')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Derna')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Durango')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Districts of Ontario')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Dominican Republic')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Anglia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Bengal')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Hebei')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'East Midlands')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Easter Island')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eastern Desert')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ecuador')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Edirne')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Agheila')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'El Salvador')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Emilia Romagna')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Epirus')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Equatorial Guinea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Eritrea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ermland Masuren')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Espirito Santo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fars')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Finnmark')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Florida')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Guiana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French India')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'French Somaliland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Friesland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Fujian')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabes')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gabon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Galicia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gambia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Garissa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gavleborg')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gdynia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Georgia US')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ghana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gibraltar')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gilan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gloucestershire')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Goa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gotland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Granada')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Greater London Area')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Greenland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangdong')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhou')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guangzhouwan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guatemala')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guerrero')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guinea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Gujarat')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Guryev')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haida Gwaii')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hainan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Haiti')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hannover')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Harju')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hatay')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hawaii')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hebei')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Helgeland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hinterpommern')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hokkaido')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Hokuriku')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Holstein')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iceland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Illinois')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Indiana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istanbul')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Istria')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ivory Coast')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Iwo Jima')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmir')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Izmit')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jalisco')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jamaica')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Java')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jehol')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jiangsu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jubaland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Jylland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalimantan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kalmykia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kamchatka')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kansai')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kanto')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karakalpakstan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Karjala')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kassala')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kastamonu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khabarovsk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kherson')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khiva')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khomas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Khuzestan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Konigsberg')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Koshinetsu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kunene')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuopio')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kurzeme')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kuwait')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kymi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Kyushu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Labrador')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lagos')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lanark')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lancashire')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Languedoc')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lappi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lebanon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leinster')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Leningrad')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lesser Sunda Islands')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Liberia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lima')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lisbon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Litorale')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Loire')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lothian')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Louisiana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Lourenco Marques')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luanda')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luga')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Luzon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madagascar')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madinah')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madras')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Madurai')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manica e Sofala')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Magallanes')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Malatya')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Manila')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maranhao')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maryland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Matrouh')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Maurice')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mauritania')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mecklenburg')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Memel')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mersin')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Middle Congo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Midi Pyrenees')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mindanao')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Miranda')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mississippi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mombasa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Montenegro')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Munster')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Muntenia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murcia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Murmansk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mykolaiv')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Mysore')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nanning')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nenets')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Brunswick')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Caledonia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New England')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New Jersey')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New South Wales')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'New York')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Newfoundland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nicaragua')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nikolayevsk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord du Quebec')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nord Pas de Calais')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nordland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Normandy')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Norrbotten')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Angola')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Borneo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Carolina')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Island')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Korea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Queensland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North Sakhalin')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'North West Australia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Epirus')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ireland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Malay')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Manitoba')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Ontario')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northern Territory')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Northumberland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nova Scotia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Nunavut')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oaxaca')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Odessa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okhotsk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Okinawa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Olonets')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oman')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Onega')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Orissa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oslofjord')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ostergotland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ouest du Quebec')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Oulu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pais Vasco')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Palestine')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pampas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Panama')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Panama Canal')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Papua')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Para')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Parnu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Paysandu')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Peloponnese')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pennsylvania')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pernambuco')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Petsamo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piaui')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Picardy')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Piemonte')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Poitou')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Porto')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Portuguese Guinea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Portuguese Timor')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Puglia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Pyrenees Atlantiques')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qatar')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Qingdao')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Queensland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Region Mesopotamica')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Riga')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Janeiro')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio de Oro')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Grande do Norte')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rio Negro')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rostov')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Rub al Khali')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saint Lawrence')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Salekhard')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Samar')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Saguenay')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Samsun')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Catarina')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santa Cruz AR')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Santiago')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sao Paulo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sardegna')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Savoy')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Schleswig')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Scottish Highlands')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Senegal')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sevilla')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shandong')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shanghai')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shikoku')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Shkoder')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Siam')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sicilia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sidi Ifni')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sierra Leone')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sinai')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sind')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Singapore')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sistan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sjaelland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Skane')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Smaland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sochi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sodermalm')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Solomon Islands')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonderjylland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sonora')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Australia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Carolina')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Georgia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Island')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Korea')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South Sakhalin')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Angola')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West Australia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'South West England')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Bessarabia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Southern Indochina')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Spanish Africa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suez')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sulawesi')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sumatra')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Suriname')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Sussex')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tabuk')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Taiwan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tamaulipas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tanganyika')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tasmania')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tehran')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Telemark')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Texas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'The Moluccas')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Thrace')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tierra del Fuego')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Togo')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tohoku')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tokai')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tonkin')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Toscana')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trabzon')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tripoli')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Troms')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Trondelag')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Tunisia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Turku')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Upper British Columbia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uruguay')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Ust Urt')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Uusimaa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vaasa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Valencia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vancouver Island')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Var')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vasterbotten')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vastergotland')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veneto')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Veracruz')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vestlandet')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Victoria')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vidzeme')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virginia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Virumaa')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vlaanderen')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vladivostok')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Vorpommern')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Washington')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Weser Ems')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Bengal')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'West Papua')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Western Australia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yamalia')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yorkshire')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Yucatan')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zambezia Mocambique')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zaporozhe')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zara')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemaitija')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zemgale')
    square_instance.coastal = True
    square_instance.save()
    square_instance = Square.objects.get(map=Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)), name = 'Zhejiang')
    square_instance.coastal = True
    square_instance.save()

    color_filter_dict = {
        '#4892FF': 'invert(49%) sepia(76%) saturate(1792%) hue-rotate(196deg) brightness(100%) contrast(103%)',
        '#ff4879': 'invert(44%) sepia(70%) saturate(2984%) hue-rotate(318deg) brightness(101%) contrast(102%)',
        '#a3101f': 'invert(13%) sepia(96%) saturate(5796%) hue-rotate(350deg) brightness(65%) contrast(92%)',
        '#56a552': 'invert(52%) sepia(7%) saturate(2676%) hue-rotate(69deg) brightness(105%) contrast(99%)',
        '#62bd52': 'invert(63%) sepia(55%) saturate(456%) hue-rotate(65deg) brightness(92%) contrast(88%)',
        '#79ebff': 'invert(81%) sepia(10%) saturate(2513%) hue-rotate(163deg) brightness(105%) contrast(103%)',
        '#4d0019': 'invert(11%) sepia(68%) saturate(2762%) hue-rotate(320deg) brightness(73%) contrast(112%)',
        '#c7e9b4': 'invert(90%) sepia(18%) saturate(459%) hue-rotate(49deg) brightness(101%) contrast(86%)',
        '#623c3c': 'invert(24%) sepia(7%) saturate(5090%) hue-rotate(314deg) brightness(69%) contrast(69%)',
        '#e79481': 'invert(61%) sepia(38%) saturate(513%) hue-rotate(323deg) brightness(103%) contrast(81%)',
        '#def7c6': 'invert(93%) sepia(10%) saturate(818%) hue-rotate(44deg) brightness(106%) contrast(94%)',
        '#57a1ff': 'invert(61%) sepia(39%) saturate(3550%) hue-rotate(191deg) brightness(100%) contrast(104%)',
        '#ffffff': 'invert(100%) sepia(0%) saturate(0%) hue-rotate(171deg) brightness(107%) contrast(106%)',
        '#c23b85': 'invert(35%) sepia(16%) saturate(7490%) hue-rotate(301deg) brightness(82%) contrast(83%)',
        '#9b3e33': 'invert(24%) sepia(33%) saturate(4109%) hue-rotate(344deg) brightness(83%) contrast(75%)',
        '#4993ff': 'invert(49%) sepia(76%) saturate(1792%) hue-rotate(196deg) brightness(100%) contrast(103%)',
        '#ffa47f': 'invert(74%) sepia(49%) saturate(761%) hue-rotate(311deg) brightness(106%) contrast(101%)',
        '#dfe5a0': 'invert(96%) sepia(97%) saturate(352%) hue-rotate(5deg) brightness(94%) contrast(90%)',
        '#ca828b': 'invert(62%) sepia(26%) saturate(512%) hue-rotate(303deg) brightness(88%) contrast(98%)',
        '#fff6ff': 'invert(100%) sepia(20%) saturate(3203%) hue-rotate(192deg) brightness(103%) contrast(103%)',
        '#ffb25f': 'invert(68%) sepia(81%) saturate(387%) hue-rotate(333deg) brightness(101%) contrast(101%)',
        '#c80a0a': 'invert(14%) sepia(57%) saturate(4472%) hue-rotate(349deg) brightness(114%) contrast(113%)',
        '#ffff79': 'invert(96%) sepia(99%) saturate(624%) hue-rotate(341deg) brightness(107%) contrast(103%)',
        '#ffff9b': 'invert(99%) sepia(20%) saturate(2017%) hue-rotate(337deg) brightness(105%) contrast(108%)',
        '#33965b': 'invert(50%) sepia(25%) saturate(982%) hue-rotate(91deg) brightness(92%) contrast(91%)',
        '#86c66c': 'invert(72%) sepia(51%) saturate(352%) hue-rotate(58deg) brightness(90%) contrast(90%)',
        '#c3a5f5': 'invert(80%) sepia(51%) saturate(3224%) hue-rotate(203deg) brightness(103%) contrast(92%)',
        '#ffff77': 'invert(95%) sepia(10%) saturate(2062%) hue-rotate(1deg) brightness(108%) contrast(101%)',
        '#ac7a58': 'invert(59%) sepia(8%) saturate(2156%) hue-rotate(341deg) brightness(85%) contrast(86%)',
        '#ff7789': 'invert(51%) sepia(17%) saturate(1640%) hue-rotate(304deg) brightness(114%) contrast(101%)',
        '#49bb7e': 'invert(63%) sepia(25%) saturate(879%) hue-rotate(95deg) brightness(96%) contrast(87%)',
        '#46d8cb': 'invert(68%) sepia(90%) saturate(302%) hue-rotate(121deg) brightness(93%) contrast(90%)',
        '#2eadff': 'invert(56%) sepia(41%) saturate(3098%) hue-rotate(181deg) brightness(104%) contrast(105%)',
        '#acbe99': 'invert(83%) sepia(13%) saturate(525%) hue-rotate(47deg) brightness(92%) contrast(76%)',
        '#c79679': 'invert(83%) sepia(13%) saturate(525%) hue-rotate(47deg) brightness(92%) contrast(76%)',
        '#5e5ea4': 'invert(38%) sepia(27%) saturate(1019%) hue-rotate(202deg) brightness(92%) contrast(85%)',
        '#ffb35f': 'invert(75%) sepia(19%) saturate(1336%) hue-rotate(338deg) brightness(101%) contrast(101%)',
        '#525252': 'invert(31%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(95%) contrast(86%)',
        '#329a00': 'invert(42%) sepia(98%) saturate(1929%) hue-rotate(68deg) brightness(91%) contrast(101%)',
        '#fbdf0a': 'invert(91%) sepia(24%) saturate(4904%) hue-rotate(355deg) brightness(110%) contrast(97%)',
        '#be96fa': 'invert(64%) sepia(20%) saturate(916%) hue-rotate(221deg) brightness(97%) contrast(102%)',
        '#fee8c8': 'invert(92%) sepia(12%) saturate(1135%) hue-rotate(319deg) brightness(107%) contrast(99%)',
        '#b496e6': 'invert(68%) sepia(10%) saturate(2409%) hue-rotate(214deg) brightness(96%) contrast(88%)',
        '#abbe99': 'invert(85%) sepia(20%) saturate(319%) hue-rotate(48deg) brightness(83%) contrast(92%)',
        '#bdccff': 'invert(69%) sepia(73%) saturate(172%) hue-rotate(192deg) brightness(101%) contrast(102%)',
        '#4696fa': 'invert(51%) sepia(44%) saturate(2757%) hue-rotate(194deg) brightness(102%) contrast(96%)',
        '#a5e684': 'invert(84%) sepia(33%) saturate(519%) hue-rotate(47deg) brightness(97%) contrast(89%)',
        '#68cf75': 'invert(75%) sepia(95%) saturate(261%) hue-rotate(66deg) brightness(83%) contrast(94%)',
        '#927a30': 'invert(46%) sepia(32%) saturate(812%) hue-rotate(8deg) brightness(97%) contrast(86%)',
        '#8b40a6': 'invert(33%) sepia(18%) saturate(3148%) hue-rotate(247deg) brightness(94%) contrast(93%)',
        '#fff375': 'invert(83%) sepia(47%) saturate(437%) hue-rotate(1deg) brightness(106%) contrast(101%)',
        '#3fb08d': 'invert(56%) sepia(68%) saturate(352%) hue-rotate(110deg) brightness(93%) contrast(87%)',
        '#698948': 'invert(51%) sepia(44%) saturate(432%) hue-rotate(47deg) brightness(88%) contrast(85%)',
        '#bea0f0': 'invert(67%) sepia(40%) saturate(756%) hue-rotate(210deg) brightness(98%) contrast(92%)',
        '#5a771d': 'invert(36%) sepia(99%) saturate(329%) hue-rotate(38deg) brightness(94%) contrast(91%)',
        '#c15151': 'invert(29%) sepia(16%) saturate(3802%) hue-rotate(322deg) brightness(122%) contrast(77%)',
        '#ffbe7f': 'invert(99%) sepia(30%) saturate(7468%) hue-rotate(303deg) brightness(102%) contrast(101%)',
        '#fabe78': 'invert(100%) sepia(98%) saturate(2728%) hue-rotate(305deg) brightness(103%) contrast(96%)',
        '#5c927e': 'invert(57%) sepia(16%) saturate(765%) hue-rotate(106deg) brightness(90%) contrast(84%)',
        '#685b84': 'invert(40%) sepia(7%) saturate(2312%) hue-rotate(218deg) brightness(89%) contrast(84%)',
        '#8a9a74': 'invert(63%) sepia(13%) saturate(665%) hue-rotate(43deg) brightness(92%) contrast(87%)',
        '#473070': 'invert(22%) sepia(16%) saturate(2205%) hue-rotate(220deg) brightness(94%) contrast(96%)',
        '#ab6f72': 'invert(47%) sepia(30%) saturate(545%) hue-rotate(308deg) brightness(97%) contrast(81%)',
        '#63cdfe': 'invert(77%) sepia(18%) saturate(2815%) hue-rotate(170deg) brightness(102%) contrast(99%)',
        '#ff7847': 'invert(66%) sepia(31%) saturate(5034%) hue-rotate(330deg) brightness(101%) contrast(101%)',
        '#53d0d9': 'invert(74%) sepia(12%) saturate(1682%) hue-rotate(135deg) brightness(98%) contrast(88%)',
        '#809141': 'invert(55%) sepia(65%) saturate(362%) hue-rotate(32deg) brightness(85%) contrast(81%)',
        '#c79779': 'invert(66%) sepia(14%) saturate(917%) hue-rotate(340deg) brightness(94%) contrast(90%)',
        '#d7f0c8': 'invert(93%) sepia(28%) saturate(313%) hue-rotate(39deg) brightness(102%) contrast(88%)',
        '#7b7cb8': 'invert(57%) sepia(11%) saturate(1473%) hue-rotate(201deg) brightness(86%) contrast(85%)',
        '#ffeab1': 'invert(88%) sepia(21%) saturate(625%) hue-rotate(337deg) brightness(103%) contrast(105%)',
        '#cdafff': 'invert(82%) sepia(42%) saturate(2835%) hue-rotate(199deg) brightness(100%) contrast(104%)',
        '#fffeff': 'invert(93%) sepia(7%) saturate(622%) hue-rotate(283deg) brightness(108%) contrast(104%)',
        '#8adba2': 'invert(83%) sepia(21%) saturate(604%) hue-rotate(84deg) brightness(92%) contrast(92%)',
        '#456722': 'invert(28%) sepia(100%) saturate(336%) hue-rotate(47deg) brightness(97%) contrast(85%)',
        '#c8aafa': 'invert(68%) sepia(10%) saturate(1458%) hue-rotate(219deg) brightness(104%) contrast(96%)',
        '#92b2bf': 'invert(69%) sepia(10%) saturate(716%) hue-rotate(152deg) brightness(100%) contrast(85%)',
        '#ff4979': 'invert(38%) sepia(58%) saturate(1973%) hue-rotate(320deg) brightness(105%) contrast(101%)',
        '#b99beb': 'invert(70%) sepia(23%) saturate(2318%) hue-rotate(206deg) brightness(102%) contrast(84%)',
        '#905c5c': 'invert(43%) sepia(16%) saturate(1004%) hue-rotate(314deg) brightness(90%) contrast(88%)',
        '#651e29': 'invert(12%) sepia(67%) saturate(1955%) hue-rotate(325deg) brightness(93%) contrast(92%)',
        '#9e8add': 'invert(68%) sepia(10%) saturate(5167%) hue-rotate(206deg) brightness(91%) contrast(89%)',
        '#b2233b': 'invert(18%) sepia(38%) saturate(4969%) hue-rotate(333deg) brightness(96%) contrast(93%)',
        '#c6a9f8': 'invert(74%) sepia(33%) saturate(968%) hue-rotate(203deg) brightness(95%) contrast(104%)',
        '#905d5d': 'invert(42%) sepia(7%) saturate(2251%) hue-rotate(314deg) brightness(92%) contrast(80%)',
        }
    all_squares = Square.objects.filter(map = Map.objects.get(number=game_id, game = Games.objects.get(id=game_id)))
    
    all_squares_list = list(all_squares.values('name', 'color'))
    color_filter_json = json.dumps(color_filter_dict)
            
    html_content = """ 

            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>State Images with Colors</title>
            <style>
                canvas {
                    display: block;
                    margin: auto;
                    border: 1px solid #000;
                }
            </style>
        </head>
        <body>

            <canvas id="canvas" style="background-color:skyblue;"></canvas>
            <div style="text-align: right;" id="colorDisplay">Click on the map to see the nation.</div>

            <script>

                const canvas = document.getElementById('canvas');
                const ctx = canvas.getContext('2d');
                const colorDisplay = document.getElementById('colorDisplay');
                const backgroundColor = 'lightblue';

                // List of images and their corresponding filters
                const images = [
        """

        # Dynamically populate the image data
    for square in all_squares:
        html_content += f""" {{src: '/static/AWSDefcon1App/white_image/MapChart_Map.{square.name}.png', filter: ' {color_filter_dict[square.color]} '}},\n """

    html_content += """
                ];

                // Helper function to load an image
                const loadImage = (src) => {
                    return new Promise((resolve) => {
                        const img = new Image();
                        img.onload = () => resolve(img);
                        img.src = src;
                    });
                };

                // Set canvas dimensions (optional)
                let maxWidth = 0;
                let maxHeight = 0;

                // Lazy load images when they come into view using IntersectionObserver
                const lazyLoadImages = async (entries, observer) => {
                    for (const entry of entries) {
                        if (entry.isIntersecting) {
                            const imgInfo = images[entry.target.dataset.index];
                            const img = await loadImage(imgInfo.src);

                            // Adjust canvas size based on image
                            if (img.width > maxWidth) maxWidth = img.width;
                            if (img.height > maxHeight) maxHeight = img.height;
                            canvas.width = maxWidth;
                            canvas.height = maxHeight;

                            // Draw image with filter
                            ctx.save();
                            ctx.filter = imgInfo.filter;
                            ctx.drawImage(img, 0, 0);
                            ctx.restore();

                            // Unobserve once the image is loaded
                            observer.unobserve(entry.target);
                        }
                    }
                };

                // Initialize IntersectionObserver
                const observer = new IntersectionObserver(lazyLoadImages, {
                    root: null, // Use the viewport
                    rootMargin: '0px',
                    threshold: 0.1 // Trigger when 10% of the element is visible
                });

                // Observe each image placeholder
                images.forEach((_, index) => {
                    const placeholder = document.createElement('div');
                    placeholder.dataset.index = index;
                    document.body.appendChild(placeholder);
                    observer.observe(placeholder);
                });
            drawImages();
            const colors = {
                'United Kingdom': '#FF4777',
                'Soviet Union': '#A2101E',
                'Italy': '#56A151',
                'Second Brazilian Republic': '#60BA51',
                'Sultanate of Aussa': '#4d0019',
                'Turkey': '#C8E9B4',
                'Norway': '#623C3A',
                'Iraq': '#E6927F',
                'Saudi Arabia': '#DDF7C6',
                'United States': '#559FFF',
                'Albania': '#C33A84',
                'Dominion of Canada': '#983D32',
                'France': '#4892FF',
                'Kingdom of Hungary': '#FFA27E',
                'China': '#DEE39A',
                'Chile': '#C9818A',
                'Peru': '#fff6ff',
                'British Raj': '#C80D09',
                'Spain': '#FFFF77',
                'Kingdom of Greece': '#79e8ff',
                'Lithuania': '#ffffA0',
                'Mexico': '#85C56B',
                'Ethiopia': '#C3A4F4',
                'Romania': '#ffff73',
                'Portugal': '#319358',
                'Bhutan': '#AA7857',
                'Poland': '#FF7487',
                'Australia': '#48B97C',
                'Czechoslovakia': '#44d7c8',
                'Sweden': '#29ADFF',
                'Venezuela': '#AABB98',
                'Yugoslavia': '#5D5DA1',
                'Netherlands': '#FCAE5D',
                'German Reich': '#525252',
                'Bulgaria': '#329700',
                'Belgium': '#FBDD08',
                'South Africa': '#BD95F9',
                'Philippines': '#B395E6',
                'Uruguay': '#A9BD97',
                'Argentina': '#BCCCFF',
                'Republic of Paraguay': '#4695F9',
                'Mengkukuo': '#A3E381',
                'Japan': '#FDE7C4',
                'Ireland': '#66CD75',
                'Costa Rica': '#91792F',
                'Cuba': '#8C40A7',
                'Colombia': '#AABB98',
                'Sinkiang': '#3EAE8B',
                'Yunnan': '#688947',
                'Dominican Republic': '#BA9EEF',
                'Mongolia': '#58751C',
                'Switzerland': '#BE4F4D',
                'Ecuador': '#FFBD7C',
                'El Salvador': '#F8BF78',
                'Iran': '#5C927E',
                'Xibei San Ma': '#695A87',
                'Denmark': '#AABB98',
                'Guangxi Clique': '#899A73',
                'Guatemala': '#46306D',
                'Haiti': '#AA6E71',
                'Finland': '#ffffff',
                'Estonia': '#60CDFD',
                'Manchukuo': '#FF7844',
                'Afghanistan': '#55CED6',
                'Honduras': '#7E8F3F',
                'Iceland': '#C79677',
                'Siam': '#D5EFC5',
                'Dutch East Indies': '#FFAF5D',
                'Latvia': '#7A7AB4',
                'Bolivian Republic': '#FFE6AF',
                'Liberia': '#CCAEFF',
                'Austria': '#FFFDFF',
                'Luxembourg': '#8BD9A1',
                'Tibet': '#446520',
                'Nepal': '#C6A8F9',
                'Nicaragua': '#90B1BE',
                'British Malaya': '#FF4776',
                'New Zealand': '#B69AEA',
                'Oman': '#92625D',
                'Shanxi': '#601C27',
                'Panama': '#9C89DC',
                'Communist China': '#A92137',
                'Tannu Tuva': '#C3A8F6',
                'Yemen': '#8D5F5C',
            }

            function rgbToHex(r, g, b) {
                return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1).toUpperCase();
            }

            function getColorAtPixel(event) {
                const rect = canvas.getBoundingClientRect();
                const scaleX = canvas.width / rect.width;
                const scaleY = canvas.height / rect.height;
                const x = (event.clientX - rect.left) * scaleX;
                const y = (event.clientY - rect.top) * scaleY;
                const imageData = ctx.getImageData(x, y, 1, 1).data;
                const colorHex = rgbToHex(imageData[0], imageData[1], imageData[2]);
                console.log(colorHex); // Debugging: Logs the color hex code to console
                return colorHex;
            }

            function getNationFromColor(color) {
                for (const [nation, hex] of Object.entries(colors)) {
                    // Fix 1: Use strict comparison with the color hex in uppercase
                    if (hex.toUpperCase() === color) {
                        return nation;
                    }
                }
                return "the border"; // This means no matching color was found
            }

            canvas.addEventListener('click', (event) => {
                const color = getColorAtPixel(event);
                const nation = getNationFromColor(color);
                colorDisplay.textContent = `You clicked on ${nation}`;
            });
            </script>
            <div class="how-to-play-widget">
                <button class="how-to-play-button">How to Play</button>
                <div class="how-to-play-content">
                    <p style = "color: black">If your coming back after a while, go to the announcement page to see what you missed. Here you can see the map of the world. At the top of the screen, players will find several tabs such as Map, Ask For Aid, Wars, and more. These tabs provide different functionalities and options to manage your nation and its interactions with others.</p>
            </div>
    </div>
        """
    
    file_path = "AWSDefcon1App/templates/AWSDefcon1App/JSMap.html"
    return render(request, "AWSDefcon1App/JSMap.html",{'html_content': html_content ,"game_id":game_id})